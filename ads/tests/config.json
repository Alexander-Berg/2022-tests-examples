{
    "VerboseLevel": 8,
    "YtCluster": "{{ yt_cluster }}",
    "Port": {{ port }},

    "ClientsPerCluster": 5,
    "GlobalLog": "{{ global_log }}",

    "Destinations": [
        {
            "Name": "sharded_events",
            "ShardsCount": {{ output_shards_count }},
            "QytWriter": {
                "Queues": [
                    {
                        "Cluster": "{{ yt_cluster }}",
                        "Path": "{{ output_queue }}"
                    }
                ]
            }
        }
    ],

    "Resharders": [
        "Instance": {
            "ConsumingSystem": {
                "MainPath": "{{ consuming_system_main_path }}",
                "MaxShards": {{ shards_count }},
                "MaxShardsToCheck": 2,
                "WorkerMinorName": "{{ worker_minor_name }}",
                "LaunchShardProcessorInFiber": true, {# it is not an easy choice #}
                "MasterBalancing": {
                    "MasterPath": "{{ master_path }}"
                },
                "Shards": {
                    {# demo test specific, prefer AutoResolve #}
                    "Range": {
                        "Begin": 0,
                        "End": {{ shards_count }}
                    }
                }
            },

            "ReshardingMode": "RM_MODULE",

            "StatelessShardProcessorConfig": {
                "MaxEpochsInFlight": 3, {# it is not an easy choice #}
                "ThreadLabelPrefix": "soup_log"
            },
            "MaxInflightBytes": 10000000, {# demo test specific #}

            "Suppliers": [
                {
                    "Alias": "soup_log",
                    "YtSupplier": {
                        "QueueConsumer": "{{ consumer }}",
                        "QueuePath": "{{ input_queue }}",
                        "Cluster": "{{ yt_cluster }}",
                        "MaxOutChunkSize": 1 {# demo test specific. NEVER use it with real YT clusters #}
                    }
                }
            ],
        },
        "OutputQueue": "sharded_events",
        "SampleShardsMax": 10,
        "RowsProcessor": {
            "Splitter": {
                 "LogfellerSplitter": "\n"
             },
            "MessageType": "SOUP",
            "ShardingAlgorithm": "RoundRobin"
        }
    ]
}
