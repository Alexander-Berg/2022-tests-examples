{
  "BioCapability": [
    "BioCapability.AddAccountFailed",
    "BioCapability.AddAccountTimeout",
    "BioCapability.EnrollmentCancelFailed",
    "BioCapability.EnrollmentEngineException",
    "BioCapability.EnrollmentFinishFailed",
    "BioCapability.EnrollmentStartFailed",
    "BioCapability.EnrollmentTimeout",
    "BioCapability.MatchVoicePrintFailed",
    "BioCapability.RemoveAccountFailed",
    "BioCapability.SoundEnrollmentFailed",
    "BioCapability.SoundEnrollmentTimeout",
    "BioCapability.UnsupportedDirective",
    "BioCapability.UpdateVoicePrintsFailed",
    "BioCapability.WriteStorageFailed"
  ],
  "BioSoundSetup": [
    "BioSoundSetup.SetupParserException",
    "BioSoundSetup.UnsupportedProtocol"
  ],
  "activity_tracker": [
    "ActivityTracker.AddActivityInvalidChannel",
    "ActivityTracker.FailedAddNullActivity",
    "ActivityTracker.FailedRemoveNullActivity",
    "ActivityTracker.RemoveActivityInvalidChannel"
  ],
  "alarm": [
    "AlarmEndpoint.BadJson.AlarmSound",
    "AlarmEndpoint.BadJson.MediaAlarmSetting",
    "AlarmPlayer.BadProto.AlarmPlayerState",
    "AlarmPlayer.FailedEnqueueAlarm",
    "AlarmPlayer.FailedStartAlarm",
    "AlarmPlayer.FailedStopAlarm"
  ],
  "alarm_capability": [
    "AlarmCapability.AlarmStartParsingFailed",
    "AlarmCapability.ApprovedWhile_MediaAlarm",
    "AlarmCapability.ApprovedWhile_SoundFileAlarm",
    "AlarmCapability.ApprovedWhile_WaitForDirectives",
    "AlarmCapability.BadJson.MediaAlarmSetting",
    "AlarmCapability.FailedSerializeJsonServerActionPayload",
    "AlarmCapability.UnexpectedState"
  ],
  "alice": [
    "AudioFocusDispatcher.InvalidChannel",
    "SpeechkitEndpoint.FailedDeviceContextVinsResponse",
    "SpeechkitEndpoint.FailedHandleInterfacedMessage",
    "SpeechkitEndpoint.FailedHandleMediaDirective",
    "SpeechkitEndpoint.FailedToStartAliceRequest",
    "SpeechkitEndpoint.FailedUniProxyDirective",
    "SpeechkitEndpoint.FailedVinsResponse",
    "SpeechkitEndpoint.OnDirectiveHandled",
    "SpeechkitEndpoint.PhraseSpotterError",
    "SpeechkitEndpoint.RecognitionError",
    "SpeechkitEndpoint.VinsError",
    "VoiceDialog.PlayerIsNull"
  ],
  "alice_capability": [
    "AliceCapability.FailedHandleDirective",
    "AliceCapability.FailedToStartRequest",
    "AliceCapability.FailedToStartRequestFromRemote"
  ],
  "alice_device_state": [
    "AliceDeviceState.BadJson.ActiveAction",
    "AliceDeviceState.BadJson.ScreenStateActions",
    "AliceDeviceState.DeviceStateUnknownWifiFrequency"
  ],
  "aliceconfig": [
    "AliceConfig.FailedGetWifiNetworks"
  ],
  "alsa": [
    "AlsaAudioReader.AlsaReadFail",
    "AlsaAudioReader.GetStatusError",
    "AlsaAudioReader.ReadDataError",
    "AlsaAudioReader.ReadWriteError",
    "AlsaAudioWriter.AlsaWriteFail"
  ],
  "android_sdk": [
    "GenericFirstRunService.RegisterFailed",
    "GenericFirstRunService.RegisterHttpRequestFailed",
    "GenericFirstRunService.RegisterNon200Code",
    "GenericFirstRunService.SignUrlParamsFailed",
    "GenericFirstRunService.SwitchUserFailed",
    "GenericFirstRunService.SwitchUserInvalidJson",
    "GenericFirstRunService.SwitchUserInvalidJwtToken",
    "GenericFirstRunService.SwitchUserInvalidPush",
    "GenericFirstRunService.SwitchUserNoJwtToken",
    "MediaLauncherService.CreateAudioClockManagerFailed",
    "YandexIOSDK.JniSendTextQueryError",
    "YandexIOSDK.JniSendUnstructuredServerRequestError",
    "YandexIOSDK.JniStartConversationError",
    "YandexIOSDK.JniToggleConversationError"
  ],
  "appmetrica": [
    "AppMetricaEndpoint.ConnectToMetrica2.Timeout",
    "AppMetricaEndpoint.ForwardMsgToMetrica2dError",
    "AppMetricaEndpoint.LoadMetadata.InvalidJson",
    "AppMetricaEndpoint.LoadMetadata.OpenFailed",
    "AppMetricaEndpoint.LoadMetadata.ReadJsonFailed",
    "AppMetricaEndpoint.SaveMetadata.CommitFailed",
    "AppMetricaEndpoint.SaveMetadata.WriteException",
    "AppMetricaEndpoint.SaveMetadata.WriteFailed",
    "StartupClient.ErrorParseReportUrls",
    "StartupClient.ErrorParseStartupUrls",
    "StartupClient.ErrorParseUUID"
  ],
  "asio_ipc": [
    "AsioServer.SendOnInactiveServer",
    "AsioServerFacade.ListenService.Exception",
    "AsioServerFacade.ListenService.UnknownError"
  ],
  "audio_clock_manager": [
    "AudioClockManager.LocalClockSynchronization"
  ],
  "audio_device": [
    "KardomeAudioDevice.AlsaRecover.Failed",
    "KardomeAudioDevice.ReadAlsa.Failed",
    "KardomeAudioDevice.VqeQueueOverflow",
    "LinkplayA98AudioDevice.CaptureCommon.InvalidLength",
    "LinkplayA98AudioDevice.CaptureRawError",
    "LinkplayA98AudioDevice.CaptureVqeError",
    "LinkplayA98VQE.DoesNotSupportAEC",
    "TCPAudioDevice.ErrorAcceptingConnection",
    "TCPAudioDevice.SocketReadFailed",
    "WebsocketAudioDevice.HandleFatalException",
    "WebsocketAudioDevice.StopInDestructorFailed",
    "YandexVqeAudioDevice.AlsaRecover.Failed",
    "YandexVqeAudioDevice.InvalidInputData",
    "YandexVqeAudioDevice.ReadAlsa.Failed",
    "YandexVqeAudioDevice.VqeQueueOverflow"
  ],
  "audio_input_controller": [
    "ActiveVqeConfigHandler.FailedSetActiveVqe",
    "ActiveVqeConfigHandler.ParseConfig",
    "EventLoopAudioDeviceInputController.ChangeAudioDevice.Exception",
    "VqeControllerAudioInputController.SetActiveVqe.Exception",
    "VqeControllerAudioInputController.SetActiveVqe.UnknownError"
  ],
  "audio_play_session": [
    "AudioPlaySession.BadJson.StreamId",
    "AudioPlaySession.FailedReportState"
  ],
  "audio_player_capability": [
    "AudioPlayerCapability.FailedCancelDirective",
    "AudioPlayerCapability.FailedHandleDirective",
    "AudioPlayerCapability.FailedPrefetchDirective",
    "AudioPlayerCapability.FailedRestoreDirective"
  ],
  "audio_sender": [
    "CommandServer.ConnectionClosed",
    "CommandServer.ConnectionFailed",
    "CommandServer.InvalidDumpingChannels",
    "CommandServer.InvalidRequest",
    "CommandServer.SendMessageFailed",
    "CommandServer.SendRecordedSoundFailed",
    "DiscoveryAgent.BindToInaddrAnyFailed",
    "DiscoveryAgent.CannotCreateSendSocket",
    "DiscoveryAgent.CannotJoinMulticastGroup",
    "DiscoveryAgent.CreateSocketFailed",
    "DiscoveryAgent.SendingAnswerFailed",
    "DiscoveryAgent.SetReuseAddressFailed",
    "DiscoveryAgent.SocketReceiveError",
    "DiscoveryAgent.StoppedDuringInit",
    "LogSendingResultSink.InvalidCounters",
    "LogStreamer.ClientConnectFailed",
    "LogStreamer.ClientRunException",
    "LogStreamer.ClientRunWebsocketppException",
    "LogStreamer.ConnectionFailed",
    "LogStreamer.GetConnectionError",
    "LogStreamer.SendingError",
    "LogStreamer.UnknownException",
    "PhraseSpotterWrapper.Error",
    "RuntimeConfigParsingFailed",
    "SoundLogger.FAhSendingFailed",
    "SoundLogger.ManualSendingFailed",
    "SoundPlayer.onPlayingError",
    "StreamSoundCollector.MaxBufferCapacityReached",
    "StreamSoundCollector.SendingDataError",
    "StreamSoundCollector.SendingMessageError",
    "WorkingThread. Unsupported message type: ",
    "WorkingThread.BlockStdException",
    "WorkingThread.BlockUnknownException",
    "WorkingThread.GlobalStdException",
    "WorkingThread.GlobalUnknownException",
    "YandexMusicPlayer.PlayFailed",
    "YandexMusicPlayer.StopFailed",
    "YandexMusicPlayer.Timeout",
    "YandexMusicPlayer.UniproxyError"
  ],
  "auth": [
    "AccountStorage.BadJson.AccountByCode",
    "AccountStorage.BadJson.OAuthToken",
    "AccountStorage.BadJson.RefreshOAuthToken",
    "AccountStorage.BadJson.RefreshXToken",
    "AccountStorage.BadJson.RevokeToken",
    "AccountStorage.BadProto.AccountStorage",
    "AccountStorage.FailedDeleteAccount",
    "AccountStorage.FailedGetAccountByCode",
    "AccountStorage.FailedGetOAuthToken",
    "AccountStorage.FailedProlongOAuthToken",
    "AccountStorage.FailedProlongXToken",
    "AccountStorage.FailedRevokeToken",
    "AccountStorage.FailedUpdateAccountByOAuth",
    "AccountStorage.RefreshOAuthToken",
    "AccountStorage.RefreshXToken",
    "AuthEndpoint.FailedAddAccountByCode.CodeExpired",
    "AuthEndpoint.FailedAddAccountByCode.NoInternet",
    "AuthEndpoint.FailedAddAccountByCode.WrongToken",
    "AuthEndpoint.FailedDeleteAccount.WrongUser",
    "AuthEndpoint.FailedProcessAddUserRequest",
    "AuthEndpoint.FailedProcessAuthTokenUpdateRequest",
    "AuthEndpoint.FailedProcessChangeUserRequest",
    "AuthEndpoint.FailedProcessDeleteUserRequest",
    "AuthEndpoint.FailedUpdateAccountByOAuth.NoInternet",
    "AuthEndpoint.FailedUpdateAccountByOAuth.WrongToken"
  ],
  "base": [
    "PersistentFile.CloseFail",
    "PersistentFile.OpenFail",
    "PersistentFile.WriteFail",
    "RunOncePerBoot.CreateGuardFail"
  ],
  "ble_init": [
    "BleEndpoint.BadJson.SetupCredentials",
    "BleEndpoint.FailedAddPermission",
    "BleEndpoint.IncompleteEncryptedSetupCredentials",
    "BleEndpoint.InvalidSetupCredentialsFormat",
    "GattValueWriter.FailedWrite.BrokenState",
    "GattValueWriter.FailedWrite.Overflow"
  ],
  "bluetooth": [
    "Bluetooth.FailedToParseMeta",
    "BluetoothBackendConfigListener.InvalidBackendConfigJson",
    "BluetoothBackendConfigListener.NonUtf8Name",
    "BluetoothMediaListener.Prev",
    "BluetoothStreamOutManager.FailedPairing",
    "BluetoothStreamOutManager.FailedScanNetworks",
    "BluetoothStreamOutManager.FailedSendScanResults",
    "BluetoothStreamOutManager.InvalidNonIdleStateForDisconnect",
    "BluetoothStreamOutManager.InvalidNonIdleStateForPairing",
    "BluetoothStreamOutManager.InvalidNonIdleStateForStartScanning",
    "BluetoothStreamOutManager.TimeoutWaitingForIdleState",
    "LinkplayA98BluetoothImpl.GetConnectionFailed",
    "LinkplayA98BluetoothImpl.InitBsaServerFailed",
    "LinkplayA98BluetoothImpl.InitFailed",
    "LinkplayA98BluetoothImpl.OpenAmpTableFailed",
    "LinkplayA98BluetoothImpl.PairedDevoceAddrEmpty",
    "LinkplayA98BluetoothImpl.RegiterCallbacksFailed",
    "LinkplayA98BluetoothImpl.SetAbsVolumeFailed",
    "LinkplayA98BluetoothImpl.Source.ConnectionError",
    "LinkplayA98BluetoothImpl.SourceEvent.GetDeviceFailed",
    "LinkplayA98BluetoothImpl.SourceEvent.InvalidJson",
    "MT8516BluetoothImpl.ErrorWritingConnectionsToFile",
    "SourceStreamSender.PollErr",
    "SourceStreamSender.PollFailed"
  ],
  "bluez": [
    "BluezBLEImpl.SetAdvertisingIntervalMax",
    "BluezBLEImpl.SetAdvertisingIntervalMin",
    "BluezBLEImpl.StartAdvertising",
    "BluezBluetoothImpl.PowerOnOff",
    "BluezBluetoothImpl.SetName",
    "BluezBluetoothImpl.SetVisibility",
    "BluezServerProfile.Serve",
    "GattManager.OnRegisterApplicationReply",
    "LEAdvertisingManager.OnRegisterApplicationReply",
    "LEAdvertisingReenabler.EnableAdvertising"
  ],
  "brick": [
    "BrickEndpoint.BadJson.SubscriptionState",
    "BrickEndpoint.FailedLoadSubscriptionMode",
    "BrickEndpoint.MissingSubscriptionStateField.Enabled",
    "BrickEndpoint.MissingSubscriptionStateField.Mode",
    "BrickEndpoint.MissingSubscriptionStateField.Ttl"
  ],
  "brightness_control": [
    "LightSensor.FailedOpenLuxSensor",
    "LightSensor.FailedReadBrightness",
    "LightSensor.FailedSetHardwareGain",
    "LightSensor.FailedSetIntegrationTime"
  ],
  "broken_mic": [
    "BrokenMicConfigHandler.InvalidJson"
  ],
  "buttons": [
    "ButtonEventResolver.ResolveFailed",
    "ClickManager.AlreadyPressed",
    "ClickManager.AlreadyReleased",
    "ClickManager.UnknownButton",
    "DevInputButtons.OpenNodeFailed",
    "DevInputButtons.PollFailed",
    "DevInputButtons.ReadEventFailed",
    "DevInputButtons.UnexpectedButtonRelease",
    "SwipeManager.UnexpectedEvent",
    "SwipeManager.UnknownButton"
  ],
  "callback_queue": [
    "CallbackQueue.EnsureThreadFail",
    "NamedCallbackQueue.Exception",
    "NamedCallbackQueue.Overflow",
    "NamedCallbackQueue.UnknownError"
  ],
  "callkit": [
    "CallingMessageReceiver.DuplicateMessage",
    "CallingMessageReceiver.NullTransportListener",
    "CallingMessageReceiver.Timeout",
    "CallingMessageReceiver.UnexpectedMessage",
    "CallsController.CreateChatFailed",
    "CallsController.CreatePrivateChatTaskFailed",
    "CallsController.EmptyCallerName",
    "CallsControllerProvider.CallWithoutAuth",
    "CandidatesSendingState.EmptyUnsentCandidates",
    "ClientRequestTask.OnError",
    "ConfigApplyingState.EnableCpuOveruseDetectionIsNotSupported",
    "ConfigApplyingState.IceRegatherIntervalRangeIsNotSupported",
    "ConfigApplyingState.NullPeerConnectionFactory",
    "ConfigApplyingState.UnexpectedBundlePoliy",
    "ConfigApplyingState.UnexpectedCandidateNetworkPolicy",
    "ConfigApplyingState.UnexpectedGatheringPolicy",
    "ConfigApplyingState.UnexpectedIceTransportPolicy",
    "ConfigApplyingState.UnexpectedNetworkPreference",
    "ConfigApplyingState.UnexpectedRtcpMuxPolicy",
    "ConfigApplyingState.UnexpectedSdpSemantics",
    "ConfigApplyingState.UnexpectedTcpCandidatePolicy",
    "CreatePrivateChatTask.InvalidResponseData",
    "DataStorage.CreatePathFailed",
    "DataStorage.InvalidStorageJson",
    "DirectToolProcessor.ExecuteCommand.Exception",
    "DirectToolProcessor.ExecuteTextCommand.Exception",
    "LocalAnswerSendingState.ErrorFromBackend",
    "LocalOfferCreatingState.CreateOfferFailed",
    "LocalOfferSendingState.ErrorFromBackend",
    "LoopThread.CheckInsideFailed",
    "LoopThread.CheckOutsideFailed",
    "LoopThread.TaskOverflow",
    "MediatorApi.OnMessage.InvalidJson",
    "MessengerProtocol.OnDataFrame.InvalidCheckSum",
    "NegotiatingState.AddCandidatesFailed",
    "PeerConnectionCreatingState.CreatePeerConnectionFailed",
    "PeerConnectionCreationFailedState.EnterFailedState",
    "PushdSocket.InvalidWebsocketStatus",
    "QuasarAudioDeviceModule.GetQuasmodromConfigTimeout",
    "QuasarAudioDeviceModule.PushAudioDataFail",
    "QuasarAudioDeviceModule.RegisterAudioCallback.AlreadyActive",
    "RequestHandler.Retry",
    "SessionApiRequest.ExecuteSync.Exception",
    "SessionProvider.ListXivaSubscribtions.ConnectToPushdTimeout",
    "SessionProvider.ListXivaSubscribtions.InvalidPushdResponse",
    "SessionProvider.ListXivaSubscribtions.RequestToPushdFailed",
    "XivaRequest.Failed",
    "XivaRequest.OnFail",
    "XivaRequest.ProxyStatusError",
    "XivaRequest.Retry",
    "XivaRequest.Timeout",
    "XivaTransport.HandleFrame.BadCastException",
    "XivaTransport.HandleFrame.MsgpackException",
    "XivaTransport.InvalidFrameType",
    "XivaTransport.NoMessageServicesInXivaSubscribtions",
    "XivaTransport.ReceivedEmptyFrame",
    "XivaTransport.RequestAlreadySent"
  ],
  "clickdaemon": [
    "ClickdaemonConsumer.LoadMetadata",
    "ClickdaemonConsumer.SaveMetaData"
  ],
  "clock_display_state_holder": [
    "ClockDisplayStateHolder.CantLoadSavedState"
  ],
  "command_spotter_capability": [
    "CommandSpotterCapability.CommandSpotterError"
  ],
  "datacratic_ipc": [
    "DatacraticConnector.ConnectToService.Exception",
    "DatacraticConnector.ConnectToService.UnknownError",
    "DatacraticConnector.ConnectToTcpHost.Exception",
    "DatacraticConnector.ConnectToTcpHost.UnknownError",
    "DatacraticConnector.HandleMessage.ProtoParseError",
    "DatacraticConnector.Invoke.Exception",
    "DatacraticConnector.Invoke.UnknownError",
    "DatacraticServer.ConnectionHandler.Exception",
    "DatacraticServer.ConnectionHandler.UnknownError",
    "DatacraticServer.HandleMessage.ProtoParseError",
    "DatacraticServer.InitService.Exception",
    "DatacraticServer.InitService.UnknownError",
    "DatacraticServer.OnQuasarMessage.Exception",
    "DatacraticServer.OnQuasarMessage.UnknownError",
    "DatacraticTcpConnector.HandleError"
  ],
  "demo_mode": [
    "DemoConfigManager.DownloadDemoFilesFailed",
    "DemoConfigManager.DownloadFailed",
    "DemoConfigManager.PrepareItems.Exception",
    "DemoConfigManager.SaveDemoModuleConfigFailed",
    "DemoConfigManager.UpdateConfigFailed"
  ],
  "device_controller": [
    "DeviceController.FailedToRegisterCapabilityDirectiveHandler"
  ],
  "device_id": [
    "MakeDeviceId.Failed"
  ],
  "device_state_capability": [
    "DeviceStateCapability.Remoting",
    "DeviceStateCapabilty.DeviceStateUnknownWifiFrequency",
    "DeviceStateConverter.FailedConvertLegacyScreenState",
    "DeviceStateConverter.FailedConvertRadioState",
    "DeviceStateConverter.FailedConvertScreenState",
    "DeviceStateConverter.FailedConvertVideoCurrentlyPlaying",
    "DeviceStateConverter.FailedConvertVideoStateToSdkProto",
    "DeviceStateConverter.FailedConvertVideoStateToServerProto",
    "DeviceStateConverter.FailedConvertViewState",
    "DeviceStateConverter.FailedToParseDirectivePayload"
  ],
  "directive_processor": [
    "DirectiveProcessor.FailedAddDirectiveHandler",
    "DirectiveProcessor.FailedAddDirectivePreprocessor",
    "DirectiveProcessor.FailedToCommitStateToFile",
    "DirectiveProcessor.FailedToParseFileState",
    "DirectiveProcessor.FailedToWriteStateToFile"
  ],
  "dns": [
    "RuntimeDnsConfig.HealthCheckFailed",
    "RuntimeDnsConfig.InvalidIp"
  ],
  "do_not_disturb": [
    "DoNotDisturbEndpoint.FailedParseTime.Global.Ends",
    "DoNotDisturbEndpoint.FailedParseTime.Global.Starts",
    "DoNotDisturbEndpoint.FailedParseTime.User.Ends",
    "DoNotDisturbEndpoint.FailedParseTime.User.Starts",
    "DoNotDisturbEndpoint.checkUpdateIfNeed",
    "TimeInfo.FailedParse"
  ],
  "endpoint_proxy": [
    "Endpoint.FailedToHandleEndpointMethod"
  ],
  "endpoint_storage_host": [
    "EndpointStorageHost.AddEndpoint",
    "EndpointStorageHost.EmptyProxyName",
    "EndpointStorageHost.RemoveEndpoint",
    "EndpointStorageHost.SyncEndpoints"
  ],
  "endpoint_storage_proxy": [
    "EndpointStorageProxy.EndpointStorageMethod"
  ],
  "equalizer_controller": [
    "EqualizerController.CreateDispatcher.Exception",
    "EqualizerController.InvalidDeviceConfigJson",
    "EqualizerController.InvalidSystemConfigJson"
  ],
  "external_command_capability": [
    "ExternalCommandCapability.FailedSendBugReport",
    "ExternalCommandCapabitlity.FailedHandleDirective"
  ],
  "external_commands": [
    "NotificationUtils.BadJson.NotifyDirective",
    "NotificationUtils.InvalidRingType"
  ],
  "file_player_capability": [
    "FilePlayerCapability.BadMethodData",
    "FilePlayerCapability.EmptyFileName",
    "FilePlayerCapability.FileNotFound",
    "FilePlayerCapability.RemoteMethodFailed"
  ],
  "firstrun": [
    "CheckToken.BadToken.DeviceIdMismatch",
    "CheckToken.BadToken.Expired",
    "CheckToken.FailedParseToken",
    "FirstRunEndpoint.BadJson.SwitchUserPush",
    "FirstRunEndpoint.BadJson.SwitchUserPush.Empty",
    "FirstRunEndpoint.BadProto.WifiStorage",
    "FirstRunEndpoint.FailedConnectWifi",
    "FirstRunEndpoint.FailedDisableAllNetworks",
    "FirstRunEndpoint.FailedGetMacAddress",
    "FirstRunEndpoint.FailedHandleConnectRequest",
    "FirstRunEndpoint.FailedHandleHttpRequest",
    "FirstRunEndpoint.FailedSignRequestParams",
    "FirstRunEndpoint.FailedSwitchUser",
    "FirstRunEndpoint.InvalidSwitchUserJwtToken",
    "FirstRunEndpoint.MissingSwitchUserJwtToken"
  ],
  "fluent-bit": [
    "FluentBitBase.InitFailure.Exception",
    "FluentBitClient.FailedRestoreDatabaseBackup",
    "FluentBitClient.FailedSaveDatabaseBackup"
  ],
  "gbl_uploader": [
    "GblUploader.RunBootloaderFailed",
    "GblUploader.UploadFailed"
  ],
  "geolocation": [
    "Geolocation.FailedNotifyListener.Location",
    "Geolocation.FailedNotifyListener.Timezone",
    "GeolocationBackup.FailedReadFromBackupFile.Location",
    "GeolocationBackup.FailedReadFromBackupFile.Timezone",
    "GeolocationBackup.FailedWriteToBackupFile.Location",
    "GeolocationBackup.FailedWriteToBackupFile.Timezone",
    "GeolocationConfigProvider.InvalidDeviceConfig",
    "GeolocationConfigProvider.InvalidSystemConfig"
  ],
  "glagol": [
    "Avahi.Error",
    "DiscoveredItems.stopItemImpl",
    "Glagol.FailedCommand.EnvironmentMessage",
    "Glagol.FailedCommand.ExternalCommandBypass",
    "Glagol.FailedCommand.SendShowAliceVisualState",
    "Glagol.FailedCommand.SendText",
    "Glagol.FailedCommand.ServerAction",
    "Glagol.HandleGlagolWsMessage.Exception",
    "Glagol.HandleGlagolWsMessage.UnknownError",
    "Glagol.InvalidNavigationMode",
    "GlagolAvahiServerWatchdog.MissingAvahiServer",
    "GlagolCluster.FailedInvokeClusterMessage",
    "GlagolCluster.FailedProcessExternalCommand",
    "GlagolCluster.UnknownService",
    "GlagolCluster.save",
    "GlagolWsServer.FailedClose.UnknownError",
    "GlagolWsServer.FailedClose.WebsocketError",
    "GlagolWsServer.FailedSend.UnknownError",
    "GlagolWsServer.FailedSend.WebsocketError",
    "GlagolWsServer.FailedStart.UnknownError",
    "GlagolWsServer.InvalidOnConnectionsChangedCallback",
    "MDNSResponder.AvahiBrowserFailure",
    "MDNSResponder.AvahiBrowserNewFailure",
    "MDNSResponder.BrowseCallbackFailure",
    "MDNSResponder.EntryGroupFailure",
    "MDNSResponder.FailedCreateServices",
    "MDNSResponder.FailedSetHostName",
    "MDNSResponder.GroupCallbackFailure",
    "MDNSResponder.ServerCallbackFailure",
    "MDNSResponder.ServerFailure",
    "MDNSResponder.StopWatcherCallbackFailure",
    "MDNSResponder.TooManyGroupCollisions",
    "MDNSResponder.TooManyServerCollisions"
  ],
  "glagol_sdk": [
    "AccountDevices.GetConnectedDevicesListFailed",
    "AvahiBrowseClient.StartBrowsingWhileBrowsing",
    "AvahiBrowseClient.StopBrowsingWhileNotBrowsing",
    "GSDKConnector.GetDeviceList.DeviceNotFound",
    "GSDKConnector.GetDeviceList.Exception",
    "GSDKConnector.GetDeviceList.Non200Response",
    "GSDKConnector.GetToken.Exception",
    "GSDKConnector.GetToken.Non200Response",
    "GSDKConnector2.GetToken.Exception",
    "GSDKConnector2.GetToken.Non200ResponseCode",
    "GsdkIncomingMessage.Constructor.JsonParseError",
    "GsdkIncomingMessage.ParseFromJsonError"
  ],
  "gresolver": [
    "GResolver.LookupByAddress.Error",
    "GResolver.LookupByAddressAsync.Error",
    "GResolver.LookupByName.Error",
    "GResolver.LookupByNameAsync.Error",
    "GResolver.LookupByNameWithFlags.Error",
    "GResolver.LookupByNameWithFlagsAsync.Error",
    "GResolver.LookupRecords.Error",
    "GResolver.LookupRecordsAsync.Error"
  ],
  "gstreamer": [
    "GStreamer.Error.{0}",
    "GstreamerAudioPlayer.ErrorMessage",
    "GstreamerAudioPlayer.Init.CreateGioTlsDatabaseFailed",
    "GstreamerAudioPlayer.Init.GetGioTlsBackendFailed",
    "GstreamerAudioPlayer.InitPipeline.ParseLaunchFailed",
    "GstreamerAudioPlayer.Pause.GetStateFailed",
    "GstreamerAudioPlayer.PlayAsync.AlreadyPlaying",
    "GstreamerAudioPlayer.PlayAsync.GetStateFailed",
    "GstreamerAudioPlayer.PlayAsync.NotSupportedInSlaveMode",
    "GstreamerAudioPlayer.PlayAsync.PlayAfterStop",
    "GstreamerAudioPlayer.PlayAsync.SetPlayingStateFailed",
    "GstreamerAudioPlayer.PlayMultiroom.NotSupportedInMasterMode",
    "GstreamerAudioPlayer.QueryDurationFailed",
    "GstreamerAudioPlayer.QueryPositionFailed",
    "GstreamerAudioPlayer.ReplayAsync.NotSupportedInSlaveMode",
    "GstreamerAudioPlayer.Seek.InvalidValue",
    "GstreamerAudioPlayer.Seek.NotSupportedInSlaveMode",
    "GstreamerAudioPlayer.Seek.SeekFailed",
    "GstreamerAudioPlayer.SetChannel.Error",
    "GstreamerAudioPlayer.SetChannel.InvalidChannel",
    "GstreamerAudioPlayer.SetStatePaused.SetStateFailed",
    "GstreamerAudioPlayer.SetStatePlaying.GetClockFailed",
    "GstreamerAudioPlayer.SetStatePlaying.GetStateFailed",
    "GstreamerAudioPlayer.SetStatePlaying.SetPausedStateFailed",
    "GstreamerAudioPlayer.SetStatePlaying.SetPlayingStateFailed",
    "GstreamerAudioPlayer.SetStatePlaying.StateChangedTimeout",
    "GstreamerAudioPlayer.Stop.SetStateFailed"
  ],
  "iot": [
    "IotDiscoveryImpl.DiscoveryAlreadyStarted",
    "IotEndpoint.FailedStartDiscovery"
  ],
  "iot_capability": [
    "IotCapability.InvalidIotDiscoveryCredentialsPayload",
    "IotEndpoint.FailedStartDiscovery"
  ],
  "ipc": [
    "ConnectionsStateHolder.UnexpectedService"
  ],
  "jbl_link_portable": [
    "BatteryLedHandler.OpenFailed",
    "BatteryLedHandler.WriteFailed",
    "BatteryLedHandler.WriteIncomplete",
    "ChargingHandler.WriteFailed",
    "ChargingHandler.WriteIncomplete",
    "PowerManager.ConvertChargeStatus.Exception",
    "PowerManager.ConvertChargeStatus.UnknownStatus",
    "PowerManager.ConvertChargeType.Exception",
    "PowerManager.ConvertChargeType.UnknownType",
    "PowerManager.ReadCapacity.Exception",
    "PowerManager.ReadChargeEnabled.Exception",
    "PowerManager.ReadRegisters.Exception",
    "PowerManager.ReadTemperatue.Exception",
    "WifiStatusLedHandler.WriteFailed",
    "WifiStatusLedHandler.WriteIncomplete"
  ],
  "jni": [
    "FailedDecryptCredentials",
    "FailedParseInitData",
    "FailedPrepareSignedHeaders"
  ],
  "keymaster_proxy": [
    "UnixSocketTransport.OpenSocketFail",
    "UnixSocketTransport.SocketConnectFail"
  ],
  "kv_database": [
    "KVDatabase.EraseFailed",
    "KVDatabase.InitFailed",
    "KVDatabase.LoadFailed",
    "KVDatabase.StoreFailed"
  ],
  "lamp_capability": [
    "LampCapability.handleDirective"
  ],
  "led_capability": [
    "LedCapability.handleDirective",
    "LedCapability.onDirective",
    "S3Downloader.DownloadAnimationFailed",
    "S3Downloader.getAnimationDownloadUrls"
  ],
  "leds": [
    "AnimationChronology.NullComposition",
    "LedManager.LoadPatterns.OpenDirFailed",
    "LedManager.UnexpectedPattern",
    "LedPatternStorage.OpenDirFailed",
    "ScLedBlinkingClockAnimation.DrawCurrentFrame.Exception",
    "ScLedClockAnimation.DrawCurrentFrame.Exception",
    "ScLedFadingClockAnimation.DrawCurrentFrame.Exception",
    "ScLedStorage.GetPattern.UnexpectedPattern",
    "ScLedStorage.LoadPatterns.OpendirFailed",
    "ScLedTimerCountdownAnimation.DrawCurrentFrame.Exception"
  ],
  "legacy_iot_capability": [
    "LegacyIotCapability.InvalidIotDiscoveryCredentialsPayload",
    "LegacyIotCapability.InvalidIotStartDiscoveryPayload",
    "LegacyIotCapabitlity.FailedHandleDirective"
  ],
  "legacy_player_capability": [
    "LegacyPlayerCapability.FailedToApplyUserConfig",
    "LegacyPlayerCapability.InvalidPlayerRewindPayload",
    "LegacyPlayerCapability.InvalidPlayerRewindType",
    "LegacyPlayerCapability.UnknownDirectiveConfirmed",
    "LegacyPlayerCapability.handleContinueCurrent",
    "LegacyPlayerCapabitlity.FailedHandleDirective"
  ],
  "media": [
    "AudioClient.Error",
    "AudioClientController.QueueOverflow",
    "AudioClientController.handlePlayAudioPrefetch",
    "MPListener.Error",
    "MPListener.FailedProcessCommand",
    "MediaEndpoint.FailedHandleMessage",
    "MediaEndpoint.PlaybackError",
    "MediaEndpoint.Suicide",
    "YandexMusic.BackendError",
    "YandexMusic.BadJson.Albums",
    "YandexMusic.BadJson.Artists",
    "YandexMusic.BadJson.Message",
    "YandexMusic.FailedDislike.NullTrack",
    "YandexMusic.FailedFeedback.NullTrack",
    "YandexMusic.FailedLike.NullTrack",
    "YandexMusic.FailedSetUrlForTrack.NullTrack",
    "YandexMusic.FailedShotify.NullTrack",
    "YandexMusic.FailedStart.NullTrack",
    "YandexMusic.FailedSync.EmptyResponse",
    "YandexMusic.InvalidShotIndex",
    "YandexMusic.RequestTimeout",
    "YandexMusicPlayer.FailedStartTrack",
    "YandexMusicPlayer.InvalidTrack",
    "YandexMusicPlayer.RequestTimeout",
    "YandexRadioPlayer2.FailedRecover",
    "YandexRadioPlayer2.NotImplemented.ProcessCommand",
    "YandexRadioPlayer2.NotImplemented.SeekBackward",
    "YandexRadioPlayer2.NotImplemented.SeekForward",
    "YandexRadioPlayer2.ReportError",
    "YandexRadioPlayer2.ReportFatal"
  ],
  "media_request_factory": [
    "MediaRequestFactory.InvalidAudioScreenType"
  ],
  "media_stats": [
    "MediaStats.DropMetric.EmptyVinsRequestId",
    "MediaStats.DropMetric.LargeMetricValue",
    "MediaStats.DropMetric.UnknownPlayer"
  ],
  "metrica": [
    "MetricaConnector.MalformedMessage",
    "MetricaConnector.SendWithAcknowledge"
  ],
  "metrica_base": [
    "EventsDatabase.GetEarliestEvent.ProtobufParseError",
    "EventsDatabase.InitScheme.Exception",
    "EventsDatabase.MakePersistent.Filter",
    "EventsDatabase.MakePersistent.ProtobufParseError",
    "EventsDatabase.MakePersistent.SqliteError",
    "EventsDatabase.SqliteError",
    "MetricaSessionProvider.FailedReadSessionId",
    "MetricaSessionProvider.FailedSaveSessionIdCommit",
    "MetricaSessionProvider.FailedSaveSessionIdException",
    "MetricaSessionProvider.FailedSaveSessionIdWrite"
  ],
  "metrics_collector": [
    "MetricsCollector.CollectCpuStats.Exception",
    "MetricsCollector.CollectLA.Exception",
    "MetricsCollector.CollectMemStats.Exception",
    "MetricsCollector.CollectNetworkStatistics.IfaceDoNotExist",
    "MetricsCollector.CollectNetworkStatistics.IfaceOperstateDoNotExist",
    "MetricsCollector.CollectNetworkStatistics.RountingTableDoNotExist",
    "MetricsCollector.CollectPartitionsInfo.StatfsFailed",
    "MetricsCollector.CollectServicesFdCount.ErrnoException",
    "MetricsCollector.CollectServicesStats.NotEnoughStatFields",
    "MetricsCollector.CollectSystemMetrics.Exception",
    "MetricsCollector.CollectThermalStatus.Exception",
    "MetricsCollector.InvalidDiskList",
    "MetricsCollector.NetworkStatistics.DefaultGatewayNotFound",
    "MetricsCollector.NetworkStatistics.IfacesStreamClosed",
    "MetricsCollector.NetworkStatistics.InvalidIfaceHeaders",
    "MetricsCollector.NetworkStatistics.InvalidIfaceHeadersSize",
    "MetricsCollector.NetworkStatistics.OperstateStreamClosed",
    "MetricsCollector.NetworkStatistics.RoutingTableStreamClosed"
  ],
  "mics_state": [
    "MuteOnUpdateMicsStateProxy.InvalidBackendConfigJson"
  ],
  "minidump": [
    "Minidump.MinidumpDirectoryCreateFail",
    "Minidump.ReadMetadataFail",
    "Minidump.SendToMetricaFail"
  ],
  "mixed_ipc": [
    "MixedIpcConnector.Connect.Exception",
    "MixedIpcConnector.Connect.UnknownError",
    "MixedIpcConnector.RequestExpiredOnError.Exception",
    "MixedIpcConnector.RequestExpiredOnError.UnknownError",
    "MixedIpcConnector.StartWhileAlreadyStarted",
    "MixedIpcConnector.StartWhileShutdown",
    "MixedIpcServer.ConfigureAfterShutdown",
    "MixedIpcServer.ConfigureAfterStart",
    "MixedIpcServer.InitService.Exception",
    "MixedIpcServer.InitService.UnknownError"
  ],
  "monitor": [
    "MonitorEndpoint.DiskUsage.InvalidDiskEntryJson",
    "MonitorEndpoint.DiskUsage.StatFailed",
    "MonitorEndpoint.Pstore.CollectFailed"
  ],
  "multiroom": [
    "MultiroomEndpoint.EmptyMultiroomToken",
    "MultiroomEndpoint.FailedAddPeer",
    "MultiroomEndpoint.FailedProcessClientMessage",
    "MultiroomEndpoint.FailedProcessServerMessage",
    "MultiroomEndpoint.FailedReconfigure",
    "MultiroomEndpoint.InvalidLatencyValue",
    "MultiroomEndpoint.MissingMultiroomToken",
    "MultiroomEndpoint.NoDevices",
    "MultiroomEndpoint.UnexpectedMessage.MultiroomServer"
  ],
  "multiroom_capability": [
    "MultiroomCapability.Exception",
    "MultiroomCapability.InvalidDirectiveParams"
  ],
  "multiroom_slave_player": [
    "MultiroomSlavePlayer.FailToPlay.EmptyClock",
    "MultiroomSlavePlayer.FailToPlay.EmptyUrl",
    "MultiroomSlavePlayer.FailToPlay.InvalidParams",
    "MultiroomSlavePlayer.FailToPlay.MismatchedClock"
  ],
  "navi_old_spotter_capability": [
    "longDialogPhraseSpotterError"
  ],
  "net_lib": [
    "Beacon.WorkingThreadException",
    "GetGatewayIp.CreateSocketFail",
    "GetGatewayIp.ReadNetLinkSocketFail",
    "GetGatewayIp.SocketSendFail",
    "ReadNetLinkSocket.InvalidPacketHeader",
    "ReadNetLinkSocket.NotEnoughBufferSize",
    "ReadNetLinkSocket.SocketReadFail"
  ],
  "ntp": [
    "NtpEndpoint.FailedSaveConfig",
    "NtpSync.FailedCreateMarkerFile",
    "NtpSync.FailedParseConfig",
    "NtpSync.FailedReloadConfig",
    "NtpSync.FailedReloadOrParseConfig",
    "NtpSync.FailedRemoveMarkerFile",
    "NtpSync.FailedSaveIpCache",
    "NtpSync.FailedSaveMonotonicTimestamp",
    "NtpSync.FailedSetSyncStatus",
    "NtpSync.FailedSetSystemTime.Error",
    "NtpSync.FailedSetSystemTime.InvalidPermissions",
    "NtpSync.FailedSetSystemTime.Unchanged",
    "NtpSync.FailedStartThread",
    "NtpSync.FailedStartThread.AlreadyStarted",
    "NtpSync.FailedStopThread",
    "NtpSync.FailedToLoadMonotonicTimestamp",
    "NtpSync.UnknownWorkerException"
  ],
  "ping_manager": [
    "PingManager.GatewayMonitor.PingAlreadyExists",
    "PingManager.GatewayMonitor.PingNotFound",
    "PingManager.Pings.InvalidConfig",
    "PingManager.Pings.NoStatForRequestedPing",
    "PingManager.Pings.PacketAlreadySent",
    "PingManager.Pings.PingRequestNotFound"
  ],
  "playback_control_capability": [
    "PlaybackControlCapability.FailedToFormatSimplePlayerState",
    "PlaybackControlCapability.RemoteMethodFailed"
  ],
  "pstore": [
    "PstoreCollector.Collect.Exception",
    "PstoreCollector.EmptyPstorePath"
  ],
  "random_sound_logger": [
    "RandomSoundLogger.OnFail",
    "RandomSoundLogger.StopStreamingTimeout"
  ],
  "rate_limiter": [
    "RateLimiter.OnOverflow"
  ],
  "remoting_message_router": [
    "RemotingMessageRouter.FailedToAddRemoteObject"
  ],
  "screen_capability": [
    "ScreenCapabitlity.FailedHandleDirective"
  ],
  "sdk": [
    "YandexIOSDK.NotInitialized"
  ],
  "self_destroyer": [
    "SelfDestroyer.Destroy",
    "SelfDestroyerPredicate.CountMemoryFail"
  ],
  "setup": [
    "SetupEndpoint.FailedConnectRequest",
    "SetupEndpoint.FailedDecryptCredentials",
    "SetupEndpoint.FailedFillSSIDs",
    "SetupEndpoint.FailedGetWifiList",
    "SetupEndpoint.FailedParseInitData",
    "SetupEndpoint.MissingWifiCredentials"
  ],
  "setup_parser": [
    "SetupCredentials.GetSSIDHashFailed"
  ],
  "signal": [
    "Signal.SlotException.LogException",
    "Signal.SlotException.LogUnknownError"
  ],
  "sound_init": [
    "SoundDataReceiver.FailedJoinListenThread",
    "SoundDataReceiver.UnknownListenException",
    "SoundInitEndpoint.UnsupportedProtocolVersion",
    "SoundUtils.PrematureEndOfStream",
    "SoundUtils.ProtocolVersionNotFound"
  ],
  "speechkit": [
    "ConnectionImpl.FailedConnect",
    "OpenAL.Error",
    "SoundLoggerState.FailedParseExtraPayload",
    "SoundLoggerState.FailedParseJson.ExtraPayload",
    "SoundLoggerState.UnsupportedDirective",
    "Speechkit.LogError",
    "UniProxyProtocolState.DuplicateStreamId",
    "UniProxyProtocolState.EmptyProtobufPayload",
    "UniProxyProtocolState.FailedDecodeProtobufMessage",
    "UniProxyProtocolState.FailedEncodeProtobufMessage",
    "UniProxyProtocolState.FailedExtractStreamId",
    "UniProxyProtocolState.FailedParseMessage",
    "UniProxyProtocolState.FailedParseProtobufMessage",
    "UniProxyProtocolState.InvalidSynchronizeStatePayload",
    "UniProxyProtocolState.ProtobufProtocolUnavailable.IncomingMessage",
    "UniProxyProtocolState.ProtobufProtocolUnavailable.InvalidConfig",
    "UniProxyProtocolState.ServerError.InvalidSynchronizeStatePayload",
    "UniProxyProtocolState.UnsupportedStreamControlAction",
    "VoiceServiceState.FailedParseChatIds",
    "VoiceServiceState.FailedParseJson.SendEvent",
    "VoiceServiceState.FailedParseJson.SpotterValidation",
    "VoiceServiceState.FailedParseTtsTimings",
    "VoiceServiceState.InvalidSynchronizeStatePayload",
    "VoiceServiceState.RecognizerAlreadyInProgress.CommandSpotter",
    "VoiceServiceState.RecognizerAlreadyInProgress.PhraseSpotter",
    "VoiceServiceState.TtsStreamError"
  ],
  "spotter_configurer": [
    "SpotterConfigurer.InvalidAccountConfigJson",
    "SpotterConfigurer.InvalidSystemConfigJson"
  ],
  "spotter_downloader": [
    "SpotterDownloader.BadJson.SpotterConfig"
  ],
  "spotter_validator": [
    "SpotterValidate.FailedCrc32Compute"
  ],
  "sqlite": [
    "SqliteDatabase.LogError",
    "SqliteDatabase.StatDbFailed"
  ],
  "stereo_pair": [
    "StereoPairEndpoint.InvalidRoleName",
    "StereoPairEndpoint.SettingsDesynchronization",
    "StereoPairEndpoint.UnexcpectedMessage"
  ],
  "stereo_pair_preprocessor": [
    "StereoPairPreprocessor.ProhibitedDirective"
  ],
  "sync": [
    "SyncEndpoint.BadGetSyncInfoResponse",
    "SyncEndpoint.BadJson.Config",
    "SyncEndpoint.BadProto.ConfigStorage",
    "SyncEndpoint.FailedDumpConfigStorage",
    "SyncEndpoint.FailedGetSyncInfoRequest",
    "SyncEndpoint.InvalidResponseJson",
    "SyncEndpoint.MissingSubscriptionState"
  ],
  "tandem_capability": [
    "TamdemCapability.FailedToProvideAliceState",
    "TandemCapability.FailedToParsePayload",
    "TandemCapability.FailedToRegisterHandler"
  ],
  "tinyalsa": [
    "TinyAlsaAudioReader.PcmLinkFail",
    "TinyAlsaAudioReader.PcmReadFail",
    "TinyAlsaAudioReader.PcmReadNotEnoughFrames"
  ],
  "ubi_info": [
    "UbiInfo.GetUbiInfo"
  ],
  "updates": [
    "OtaUpdateScript.BadSignature",
    "OtaUpdateScript.BadTimestamp",
    "OtaUpdateScript.FailedExec",
    "OtaUpdateScript.FailedStoreExec",
    "Updater.BadCheckUpdatesResponse",
    "Updater.BadChecksum",
    "Updater.BadChecksumAfterWrite",
    "Updater.FailedCheckUpdatesRequest",
    "Updater.FailedOtaScriptVerify",
    "Updater.UnknownOtaScriptType"
  ],
  "url_rewriter": [
    "UrlRewriter.FailedUpdateRules",
    "UrlRewriter.InvalidEmptyRegex",
    "UrlRewriter.InvalidUrlRewriteRules"
  ],
  "version_provider": [
    "VersionProvider.CachedStateInvalid",
    "VersionProvider.CachedStateInvalidJson",
    "VersionProvider.CachedStateLoadException",
    "VersionProvider.CachedStateSaveException",
    "VersionProvider.SetDeviceState.Non200Response"
  ],
  "vins_request": [
    "VinsRequest.IgnoreExtraTextActions"
  ],
  "volume_manager": [
    "VolumeManager.LoadMuteState.Exception",
    "VolumeManager.LoadVolumeState.Exception",
    "VolumeManager.LoadVolumeState.InvalidValue"
  ],
  "vqe": [
    "FraunhoferVQEEngine.UnsupportedPreset",
    "VqeBackendSetter.CreateEngine.Exception",
    "VqeBackendSetter.InvalidBackendConfigJson",
    "YandexVQECEngine.InternalError",
    "YandexVQECEngine.UnknownLogPriority"
  ],
  "websocket": [
    "WebsocketServer.FatalException",
    "WebsocketServer.OnClose.Exception",
    "WebsocketServer.Ping.WebsocketppException",
    "WebsocketServer.Pong.Exception",
    "WebsocketServer.Pong.UnknownError",
    "WebsocketServer.ServerStop.Exception",
    "WebsocketServer.SetCipherError",
    "WebsocketppLogger.Error"
  ],
  "wifi": [
    "WifiEndpoint.ConnectAuthError",
    "WifiEndpoint.ConnectTimeout",
    "WifiEndpoint.FailedRunIfconfig",
    "WifiManager.FailedAddNetwork",
    "WifiManager.FailedDisableAllNetworks",
    "WifiManager.FailedDisableNetwork",
    "WifiManager.FailedDisconnect",
    "WifiManager.FailedEnableAllNetworks",
    "WifiManager.FailedEnableNetwork",
    "WifiManager.FailedGetNetwork",
    "WifiManager.FailedGetScanResults",
    "WifiManager.FailedGetStatus",
    "WifiManager.FailedListNetworks",
    "WifiManager.FailedReassociate",
    "WifiManager.FailedReconnect",
    "WifiManager.FailedReloadConfig",
    "WifiManager.FailedRemoveNetwork",
    "WifiManager.FailedRemoveOldNetwork",
    "WifiManager.FailedSaveConfig",
    "WifiManager.FailedSetupNetwork",
    "WifiManager.FailedSignalPoll",
    "WifiManager.FailedStartScan",
    "WifiUtils.FailedEnableNetwork",
    "WifiUtils.FailedReassociate"
  ],
  "xiva_alice_requester": [
    "XivaPushAliceRequester.FailedHandlePush"
  ],
  "yandexmicro": [
    "YandexMicroLedController.DrawFrame.InvalidLedCircleSize"
  ],
  "yandexmidi": [
    "AmplifiersTuner.ErrorParsingConfig",
    "AmplifiersTuner.ErrorWhenApplyingConfig",
    "MidiAlienSpectrogram.ErrorWhenReadingBizierCurve",
    "MidiAnimationLoader.LoadPatternFailed",
    "MidiBlinkSpectrogram.ErrorWhenChoosingBlinkingPixels",
    "MidiDeviceStateHandler.ErrorWhenParsingConfig",
    "MidiLocalDataLoader.loadScenarioLocalAnimations",
    "YandexMidiLedFrameBuffer.DisplayError",
    "YandexMidiNcpFactory.BadPcbaId"
  ],
  "yandexmini": [
    "SensorCalibrationValues.EmptyNvramValue",
    "SensorCalibrationValues.LoadFromNvram.LoadOffsetFailed",
    "SensorCalibrationValues.LoadFromNvram.LoadXtalkFailed",
    "SensorCalibrationValues.NvramIoctlGetFailed",
    "SensorCalibrationValues.OpenNvramFailed",
    "TOFHandler.InitGestures.Exception",
    "TOFHandler.SetCalibrationValues.Exception",
    "TOFHandler.VL53L0XSensorInit.Exception",
    "YandexMiniDirectiveObserver.ThereminVoxFromInternalSet",
    "YandexMiniLedController.InvalidLedCircleSize",
    "YandexMiniLedController.LightInitFailed",
    "YandexMiniLedController.LightShowFailed"
  ],
  "yandexmini_2": [
    "DeviceStateHandler.CreateDirectivePattern.Exception",
    "DeviceStateHandler.InvalidTimerState",
    "DeviceStateHandler.UnexpectedBehaviour",
    "DrawSegmentAnimationParser.CantParseJson",
    "DrawSegmentAnimationParser.InvalidPayload",
    "SlidingWindowCounter.BackendConfig.InvalidJson",
    "VolumeConfigChanger.BackendConfig.InvalidJson",
    "YandexMini2LedController.InvalidLedCircleSize",
    "YandexMini2VolumeManager.VolumeSettings.InvalidMaxVolume"
  ],
  "yandexmodule_2": [
    "MetricsCollectorImpl.ReadEmmcLifetimeFailed",
    "MetricsCollectorImpl.ReadEmmcPreEolFailed"
  ],
  "yandexstation": [
    "EncoderInput.BadState",
    "MetricsCollectorImpl.ConvertCounterToIntFailed",
    "MetricsCollectorImpl.ConvertI2CAddressToIntFailed",
    "MetricsCollectorImpl.GetLmkEvents.Exception",
    "MetricsCollectorImpl.GetProp.Exception",
    "YandexStationAudioDevice.TinyAlsaRead.Failed",
    "YandexStationAudioDevice.TinyAlsaRecover.Failed",
    "YandexStationAudioDevice.VqeQueueOverflow"
  ],
  "yandexstation_2": [
    "AliceDialogErrorRenderer.Exception",
    "AudioInputController.UnknownLoopbackSource",
    "CacheManager.Clear.Exception",
    "CacheManager.EmptyCacheWhenDirectoryNotEmpty",
    "ConfigUtils.UnexpectedClockSize",
    "DemoModeFrontLedHandler.Exception",
    "DemoModeFrontLedHandler.ReadGif.Exception",
    "DemoModeFrontLedHandler.StartBootAnimation.Exception",
    "DeviceStateHandler.AnimateDeviceState.Exception",
    "DeviceStateHandler.SpectrogramConfig.InvalidJson",
    "DeviceStateHandler.processDeviceConfig.LedConfig.InvalidJson",
    "DeviceStateHandler.processSystemConfig.DeviceStateHandlerConfig.InvalidJson",
    "DeviceStateHandler.processSystemConfig.LedConfig.InvalidJson",
    "DrawLedScreenDirectiveObserver.AbsentAnimationSequence",
    "DrawLedScreenDirectiveObserver.DownloadAnimationFailed",
    "DrawLedScreenDirectiveObserver.InvalidDirectiveFrontalLedImageUrl",
    "DrawLedScreenDirectiveObserver.InvalidDirectiveJson",
    "DrawLedScreenDirectiveObserver.MoreThanOneEndlessAnimation",
    "DrawLedScreenDirectiveObserver.ReadGifFailed",
    "EncryptionKeyReworker.BurnKeys.BurnFailed",
    "EncryptionKeyReworker.BurnKeys.OpenFailed",
    "EncryptionKeyReworker.GetKeys.Non200Response",
    "EncryptionKeyReworker.GetKeys.SignFailed",
    "EncryptionKeyReworker.HDCP1_4KeyEmpty",
    "EncryptionKeyReworker.HDCP2_2KeyEmpty",
    "EncryptionKeyReworker.ParseKeys.InvalidJson",
    "EncryptionKeyReworker.ReportKeysSet.404Response",
    "EncryptionKeyReworker.ReportKeysSet.Non200Response",
    "EncryptionKeyReworker.ReportKeysSet.SignFailed",
    "EncryptionKeyReworker.UnknownKeyType",
    "EncryptionKeyReworker.WidevineKeyEmpty",
    "FramebufferLedController.InvalidSysfsNode",
    "FramebufferLedController.ListDirFailed",
    "FramebufferLedController.ReadFailed",
    "LedDevicesImpl.BrightnessConfig.InvalidJson",
    "LedDevicesImpl.FrontalControllerConfig.InvalidJson",
    "LedDirectiveObserver.MakeGifAnimation.Exception",
    "MediaStateLedPlayer.OnMediaError.Exception",
    "MediaStateLedPlayer.PlayFrontalAnimation.Exception",
    "MetricsCollectorImpl.InitHwMonitorsFailed",
    "MetricsCollectorImpl.ReadEmmcLifetimeFailed",
    "MetricsCollectorImpl.ReadEmmcPreEolFailed",
    "MicsStateLedPlayer.OnMuted.Exception",
    "MicsStateLedPlayer.OnUnmuted.Exception",
    "RcuVolumeFrontalAnimation.ReadGifFailed",
    "Station2AudioReader.Exception",
    "Station2AudioReader.ReadFailed",
    "TinyAlsaControlEnum.ControlCaptureFailed",
    "TinyAlsaControlEnum.ControlSetFailed",
    "TinyAlsaMixer.MixerOpenFailed",
    "TinyAlsaMixer.UnknownLoopbackSource",
    "YandexStation2AudioDevice.SetAffinityFailed",
    "YandexStation2AudioDevice.VqeQueueOverflow",
    "YandexStation2BluetoothObserver.OnSourceConnected.Exception",
    "YandexStation2BluetoothObserver.OnSourceDisconnected.Exception"
  ],
  "zigbee": [
    "Ezsp.LogErrorStatus",
    "IASZoneCapability.EnrollFailed",
    "IASZoneCapability.GetEui64Failed",
    "IASZoneCapability.WriteFailed",
    "MfgTestClient.BadZigbeeModuleType",
    "MfgTestClient.FrameReceivedAfterTimeout",
    "MfgTestClient.FrameValueCorrupted",
    "MfgTestClient.InvalidPacketId",
    "MfgTestClient.LogicError",
    "ZigbeeDevice.LoadFailed",
    "zigbee.NCP.Error",
    "zigbee.NCP.GetApsFrameCounterFailed",
    "zigbee.NCP.GetNwkFrameCounterFailed",
    "zigbee.NCP.RetryUnicastFailed",
    "zigbee.Network.BindFailed",
    "zigbee.Network.FailedToHandleZclMessage",
    "zigbee.Network.FailedToRequestActiveEndpoints",
    "zigbee.Network.FailedToRequestSimpleDescriptor",
    "zigbee.Network.UnknownNodeId",
    "zigbee.Network.ZclSendFailed"
  ],
  "zigbee_capability": [
    "ZigbeeCapability.BadFirmwareFile",
    "ZigbeeCapability.EnableNetworkDirective.ParseFailed",
    "ZigbeeCapability.EnableNetworkDirective.UnsupportedProtocol",
    "ZigbeeCapability.EnterBootloaderFailed",
    "ZigbeeCapability.FailedToInitNetwork",
    "ZigbeeCapability.FailedToInitWifiDiscovery",
    "ZigbeeCapability.FailedToStopNetwork",
    "ZigbeeCapability.FinishDiscoveryDirective.ParseFailed",
    "ZigbeeCapability.ForgetDevicesDirective.ParseFailed",
    "ZigbeeCapability.LoadNetworkFromFilesystemFailed",
    "ZigbeeCapability.NCPInitFailed",
    "ZigbeeCapability.NetworkNotInitialized",
    "ZigbeeCapability.NoFirmwareUpdate",
    "ZigbeeCapability.OpenNetworkFailed",
    "ZigbeeCapability.RestoreNetworksDirective.ParseFailed",
    "ZigbeeCapability.SaveNetworkFailed",
    "ZigbeeCapability.StartDiscoveryDirective.ParseFailed",
    "ZigbeeCapability.StartDiscoveryDirective.UnsupportedProtocol",
    "ZigbeeCapability.StartTuyaBroadcastDirective.ParseFailed"
  ],
  "zip": [
    "Zip.ArchiveNotUnixCompatible",
    "Zip.CreateOutFileFail",
    "Zip.CreateSymlinkFail"
  ]
}