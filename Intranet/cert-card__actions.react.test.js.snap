// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Action button should contain a proper content 1`] = `
<cert-card__actions
  actionError={
    Object {
      "id": "",
      "text": "",
    }
  }
  cert={
    Object {
      "available_actions": Array [
        Object {
          "id": "unhold",
          "name": Object {
            "ru": "Разморозить",
          },
        },
      ],
      "id": 11,
    }
  }
  isActionInProgress={false}
  isAdditionalFieldsConfigLoading={false}
  onActionClick={[MockFunction]}
  onReissueButtonClick={[MockFunction]}
  onTooltipOutsideClick={[MockFunction]}
>
  <div
    className="cert-card__actions"
    data-lego="react"
    style={Object {}}
  >
    <button2
      disabled={false}
      key="unhold"
      mix={
        Object {
          "block": "cert-card",
          "elem": "button",
          "mods": Object {},
        }
      }
      onClick={[Function]}
      size="s"
      tabIndex={0}
      theme="normal"
      tone="default"
      view="default"
    >
      <button
        aria-disabled="false"
        aria-pressed="false"
        autoComplete="off"
        className="control button2 button2_view_default button2_tone_default button2_size_s button2_theme_normal cert-card__button"
        data-lego="react"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyPress={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        style={Object {}}
        tabIndex={0}
        type="button"
      >
        <button2__text
          key="text"
        >
          <span
            className="button2__text"
            data-lego="react"
            style={Object {}}
          >
            Разморозить
          </span>
        </button2__text>
      </button>
    </button2>
  </div>
</cert-card__actions>
`;

exports[`Action button should show an error tooltip 1`] = `
<cert-card__actions
  actionError={
    Object {
      "id": "unhold",
      "text": "error-text",
    }
  }
  cert={
    Object {
      "available_actions": Array [
        Object {
          "id": "unhold",
          "name": Object {
            "ru": "Разморозить",
          },
        },
      ],
      "id": 11,
    }
  }
  isActionInProgress={false}
  isAdditionalFieldsConfigLoading={false}
  onActionClick={[MockFunction]}
  onReissueButtonClick={[MockFunction]}
  onTooltipOutsideClick={[MockFunction]}
>
  <div
    className="cert-card__actions"
    data-lego="react"
    style={Object {}}
  >
    <button2
      disabled={false}
      key="unhold"
      mix={
        Object {
          "block": "cert-card",
          "elem": "button",
          "mods": Object {},
        }
      }
      onClick={[Function]}
      size="s"
      tabIndex={0}
      theme="normal"
      tone="default"
      view="default"
    >
      <button
        aria-disabled="false"
        aria-pressed="false"
        autoComplete="off"
        className="control button2 button2_view_default button2_tone_default button2_size_s button2_theme_normal cert-card__button"
        data-lego="react"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyPress={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        style={Object {}}
        tabIndex={0}
        type="button"
      >
        <button2__text
          key="text"
        >
          <span
            className="button2__text"
            data-lego="react"
            style={Object {}}
          >
            Разморозить
          </span>
        </button2__text>
      </button>
    </button2>
    <tooltip
      anchor={[Function]}
      autoclosable={true}
      key="tooltip"
      mix={
        Object {
          "block": "cert-card",
          "elem": "action-error-tooltip",
          "mods": Object {},
        }
      }
      onOutsideClick={[MockFunction]}
      size="s"
      tail={true}
      theme="error"
      to="left"
      view="classic"
      visible={true}
    >
      <popup2
        anchor={[Function]}
        autoclosable={true}
        directions={
          Array [
            "left-center",
          ]
        }
        mix={
          Array [
            Object {
              "block": "tooltip",
              "mods": Object {
                "__entities": Object {
                  "autoclosable": Object {
                    "tooltip$undefined": true,
                  },
                  "hovered": Object {
                    "tooltip$undefined": true,
                  },
                  "size": Object {
                    "tooltip$undefined": true,
                  },
                  "theme": Object {
                    "tooltip$undefined": true,
                  },
                  "tone": Object {
                    "tooltip$undefined": true,
                  },
                  "view": Object {
                    "tooltip$undefined": true,
                  },
                },
                "autoclosable": true,
                "hovered": false,
                "size": "s",
                "theme": "error",
                "tone": undefined,
                "view": "classic",
              },
            },
            Object {
              "block": "cert-card",
              "elem": "action-error-tooltip",
              "mods": Object {},
            },
          ]
        }
        onAfterClose={[Function]}
        onAfterOpen={[Function]}
        onBeforeClose={[Function]}
        onBeforeOpen={[Function]}
        onMouseOver={[Function]}
        onOutsideClick={[MockFunction]}
        secondaryOffset={0}
        tailOffset={0}
        target="anchor"
        theme="normal"
        view="classic"
        visible={true}
        zIndexGroupLevel={0}
      />
    </tooltip>
  </div>
</cert-card__actions>
`;

exports[`Reissue button should contain a proper content 1`] = `
<cert-card__actions
  actionError={
    Object {
      "id": "",
      "text": "",
    }
  }
  additionalFieldsConfigError=""
  cert={
    Object {
      "available_actions": Array [],
      "id": 11,
      "type": "host",
    }
  }
  isActionInProgress={false}
  isAdditionalFieldsConfigLoading={false}
  onActionClick={[MockFunction]}
  onReissueButtonClick={[MockFunction]}
  onTooltipOutsideClick={[MockFunction]}
>
  <div
    className="cert-card__actions"
    data-lego="react"
    style={Object {}}
  >
    <button2
      disabled={false}
      key="reissue"
      mix={
        Object {
          "block": "cert-card",
          "elem": "button",
          "mods": Object {
            "type": "reissue",
          },
        }
      }
      onClick={[MockFunction]}
      size="s"
      tabIndex={0}
      theme="normal"
      tone="default"
      view="default"
    >
      <button
        aria-disabled="false"
        aria-pressed="false"
        autoComplete="off"
        className="control button2 button2_view_default button2_tone_default button2_size_s button2_theme_normal cert-card__button cert-card__button_type_reissue"
        data-lego="react"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyPress={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        style={Object {}}
        tabIndex={0}
        type="button"
      >
        <button2__text
          key="text"
        >
          <span
            className="button2__text"
            data-lego="react"
            style={Object {}}
          >
            Перезапросить
          </span>
        </button2__text>
      </button>
    </button2>
    <tooltip
      anchor={[Function]}
      autoclosable={true}
      key="additional-fields-config-error-tooltip"
      onOutsideClick={[MockFunction]}
      size="s"
      tail={true}
      theme="error"
      to="left"
      view="classic"
      visible={false}
    >
      <popup2
        anchor={[Function]}
        autoclosable={true}
        directions={
          Array [
            "left-center",
          ]
        }
        mix={
          Array [
            Object {
              "block": "tooltip",
              "mods": Object {
                "__entities": Object {
                  "autoclosable": Object {
                    "tooltip$undefined": true,
                  },
                  "hovered": Object {
                    "tooltip$undefined": true,
                  },
                  "size": Object {
                    "tooltip$undefined": true,
                  },
                  "theme": Object {
                    "tooltip$undefined": true,
                  },
                  "tone": Object {
                    "tooltip$undefined": true,
                  },
                  "view": Object {
                    "tooltip$undefined": true,
                  },
                },
                "autoclosable": true,
                "hovered": false,
                "size": "s",
                "theme": "error",
                "tone": undefined,
                "view": "classic",
              },
            },
          ]
        }
        onAfterClose={[Function]}
        onAfterOpen={[Function]}
        onBeforeClose={[Function]}
        onBeforeOpen={[Function]}
        onMouseOver={[Function]}
        onOutsideClick={[MockFunction]}
        secondaryOffset={0}
        tailOffset={0}
        target="anchor"
        theme="normal"
        view="classic"
        visible={false}
        zIndexGroupLevel={0}
      />
    </tooltip>
  </div>
</cert-card__actions>
`;

exports[`Reissue button should show an error tooltip 1`] = `
<cert-card__actions
  actionError={
    Object {
      "id": "",
      "text": "",
    }
  }
  additionalFieldsConfigError="Some error"
  cert={
    Object {
      "available_actions": Array [],
      "id": 11,
      "type": "host",
    }
  }
  isActionInProgress={false}
  isAdditionalFieldsConfigLoading={false}
  onActionClick={[MockFunction]}
  onReissueButtonClick={[MockFunction]}
  onTooltipOutsideClick={[MockFunction]}
>
  <div
    className="cert-card__actions"
    data-lego="react"
    style={Object {}}
  >
    <button2
      disabled={false}
      key="reissue"
      mix={
        Object {
          "block": "cert-card",
          "elem": "button",
          "mods": Object {
            "type": "reissue",
          },
        }
      }
      onClick={[MockFunction]}
      size="s"
      tabIndex={0}
      theme="normal"
      tone="default"
      view="default"
    >
      <button
        aria-disabled="false"
        aria-pressed="false"
        autoComplete="off"
        className="control button2 button2_view_default button2_tone_default button2_size_s button2_theme_normal cert-card__button cert-card__button_type_reissue"
        data-lego="react"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyPress={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        style={Object {}}
        tabIndex={0}
        type="button"
      >
        <button2__text
          key="text"
        >
          <span
            className="button2__text"
            data-lego="react"
            style={Object {}}
          >
            Перезапросить
          </span>
        </button2__text>
      </button>
    </button2>
    <tooltip
      anchor={[Function]}
      autoclosable={true}
      key="additional-fields-config-error-tooltip"
      onOutsideClick={[MockFunction]}
      size="s"
      tail={true}
      theme="error"
      to="left"
      view="classic"
      visible={true}
    >
      <popup2
        anchor={[Function]}
        autoclosable={true}
        directions={
          Array [
            "left-center",
          ]
        }
        mix={
          Array [
            Object {
              "block": "tooltip",
              "mods": Object {
                "__entities": Object {
                  "autoclosable": Object {
                    "tooltip$undefined": true,
                  },
                  "hovered": Object {
                    "tooltip$undefined": true,
                  },
                  "size": Object {
                    "tooltip$undefined": true,
                  },
                  "theme": Object {
                    "tooltip$undefined": true,
                  },
                  "tone": Object {
                    "tooltip$undefined": true,
                  },
                  "view": Object {
                    "tooltip$undefined": true,
                  },
                },
                "autoclosable": true,
                "hovered": false,
                "size": "s",
                "theme": "error",
                "tone": undefined,
                "view": "classic",
              },
            },
          ]
        }
        onAfterClose={[Function]}
        onAfterOpen={[Function]}
        onBeforeClose={[Function]}
        onBeforeOpen={[Function]}
        onMouseOver={[Function]}
        onOutsideClick={[MockFunction]}
        secondaryOffset={0}
        tailOffset={0}
        target="anchor"
        theme="normal"
        view="classic"
        visible={true}
        zIndexGroupLevel={0}
      />
    </tooltip>
  </div>
</cert-card__actions>
`;
