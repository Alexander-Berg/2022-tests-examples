{
  comment: ""
  engine: qloud
  objectId: tools.cab-back.testing
  settings:
  {
    esShipAccessLog: true
    deployHook: ""
    esIndexTtl: 5
    cluster: qloud
  }
  userEnvironmentMap: {}
  components:
  [
    {
      secrets:
      [
        {
          used: true
          target: POSTGRESQL_PASSWORD
          objectId: secret.cab-postgresql-password-testing
        }
      ]
      componentName: backend
      environmentVariables:
      {
        UWSGI_WORKERS: "4"
        FETCH_MODE: parallel
      }
      instanceGroups:
      [
        {
          units: 1
          backup: false
          location: SASOVO
          weight: 1
        }
      ]
      componentType: docker-image
      sandboxResources: []
      overlays: []
      properties:
      {
        constraintId: constraint.standard
        qloudInitPolicy: stable
        stdout: json
        hardwareSegment: tools
        httpCheckOn: "true"
        useDockerUserGroup: "false"
        preAuthenticate: "false"
        size: t1_medium
        deployType: tools
        network: CAB_TEST_NETS
        deployPolicy: InPlace
        isolationGroup: root
        diskSize: "10"
        maxFails: "0"
        tcpPort: "80"
        units: "0"
        unistatPath: /unistat
        hash: sha256:a112908c1d09af57810837d8cf9df05802ad6a4e733c73b308d2dc35a1f8750f
        repository: registry.yandex.net/tools/cab:0.3.68
        allowPortoInteraction: "false"
        componentEnvironment:
          '''
          UWSGI_WORKERS=4
          FETCH_MODE=parallel
          '''
        failTimeout: "0"
        dnsCache: "true"
        usePortoIsolation: "true"
        path: ""
        deployBatchSize: "1"
        isolationUser: root
        unistatPort: "80"
        generateQloudPeers: "false"
        useHttps: "false"
        unistat: "false"
        dnsNat64: "false"
        deployInterval: "0"
        stderr: json
        dontWaitNetwork: "false"
        minPrepared: "50"
        qloudInitVersion: "333"
        ediskSize: "0"
      }
    }
  ]
  userEnvironment: ""
  routeSettings:
  [
    {
      proxyNextUpstreamTimeout: 0
      defaultProxyReadTimeout: "5"
      defaultProxyWriteTimeout: "5"
      defaultProxyConnectTimeout: 60ms
      proxyPolicy: round_robin
      proxyNextUpstreamTries: 0
      proxyConnectTimeout: 300ms
      componentName: backend
      preAuthenticate: false
      defaultProxyNextUpstream: error timeout
      wallarm: false
      defaultProxyNextUpstreamTimeout: 10
      defaultProxyPolicy: round_robin
      location: /
      upstreamPath: /
      proxyWriteTimeout: "60"
      proxyNextUpstream: error timeout
      defaultProxyNextUpstreamTries: 3
      geo: true
      yandexErrorPage: INHERITED
      proxyReadTimeout: "60"
    }
  ]
}
