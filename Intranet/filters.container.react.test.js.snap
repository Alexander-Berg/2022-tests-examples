// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FiltersContainer component applies all the filters on revert changes button click 1`] = `
<filters.container
  additionalFiltersKeys={
    Array [
      "ca_name",
      "requester",
      "host",
      "serial_number",
      "abc_service",
    ]
  }
  disableScroll={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
  enableScroll={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
  filterQueryStr={[MockFunction]}
  filtersKeys={
    Array [
      "type",
      "status",
      "user",
      "common_name",
      "ca_name",
      "requester",
      "host",
      "serial_number",
      "abc_service",
    ]
  }
  getFilters={
    [MockFunction] {
      "calls": Array [
        Array [],
        Array [],
        Array [],
        Array [],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "host",
            "requester": "requester",
            "serial_number": "serial_number",
            "status": "status",
            "type": "type",
            "user": "user",
          },
        },
        Object {
          "isThrow": false,
          "value": Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "host",
            "requester": "requester",
            "serial_number": "serial_number",
            "status": "status",
            "type": "type",
            "user": "user",
          },
        },
        Object {
          "isThrow": false,
          "value": Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "host",
            "requester": "requester",
            "serial_number": "serial_number",
            "status": "status",
            "type": "type",
            "user": "user",
          },
        },
        Object {
          "isThrow": false,
          "value": Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "host",
            "requester": "requester",
            "serial_number": "serial_number",
            "status": "status",
            "type": "type",
            "user": "user",
          },
        },
      ],
    }
  }
  onApplyClick={[MockFunction]}
  onClearClick={[MockFunction]}
  onFilterChange={[MockFunction]}
  onToggleAdditionalFiltersClick={[MockFunction]}
  updateQueryStr={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "common_name": "brand new common name",
          },
        ],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
>
  <filters
    additionalFiltersAppliedNum={5}
    filters={
      Object {
        "abc_service": "abc_service",
        "ca_name": "ca_name",
        "common_name": "common_name",
        "host": "host",
        "requester": "requester",
        "serial_number": "serial_number",
        "status": "status",
        "type": "type",
        "user": "user",
      }
    }
    getOnFilterChange={[Function]}
    isAdditionalFiltersVisible={false}
    onApplyClick={[Function]}
    onClearClick={[Function]}
    onToggleAdditionalFiltersClick={[Function]}
  >
    <div
      className="ta-component filters"
      data-lego="react"
      style={Object {}}
    >
      <filters__main
        additionalFiltersAppliedNum={5}
        filters={
          Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "host",
            "requester": "requester",
            "serial_number": "serial_number",
            "status": "status",
            "type": "type",
            "user": "user",
          }
        }
        getOnFilterChange={[Function]}
        isAdditionalFiltersVisible={false}
        key="main"
        onApplyClick={[Function]}
        onClearClick={[Function]}
        onToggleAdditionalFiltersClick={[Function]}
      >
        <div
          className="filters__main"
          data-lego="react"
          style={Object {}}
        >
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/cert_types/",
              }
            }
            key="filter-type"
            onChange={[Function]}
            placeholder="Тип"
            quick={true}
            single={true}
            text=""
            title=""
            type="suggest"
            value="type"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_quick"
              data-lego="react"
              style={Object {}}
            >
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/cert_types/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Тип"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "type",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/cert_types/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq67"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Тип"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "type",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq67"
                                placeholder="Тип"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq67"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Тип"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq67"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Тип"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq67"
                            onChange={[Function]}
                            placeholder="Тип"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq68",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/statuses/",
              }
            }
            key="filter-status"
            onChange={[Function]}
            placeholder="Статус"
            quick={true}
            single={true}
            text=""
            title=""
            type="suggest"
            value="status"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_quick"
              data-lego="react"
              style={Object {}}
            >
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/statuses/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Статус"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "status",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/statuses/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq69"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Статус"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "status",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq69"
                                placeholder="Статус"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq69"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Статус"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq69"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Статус"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq69"
                            onChange={[Function]}
                            placeholder="Статус"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq70",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/users/",
              }
            }
            key="filter-owner"
            onChange={[Function]}
            placeholder="Владелец"
            quick={true}
            single={true}
            type="suggest"
            value="user"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_quick"
              data-lego="react"
              style={Object {}}
            >
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/users/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Владелец"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "user",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/users/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq71"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Владелец"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "user",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq71"
                                placeholder="Владелец"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq71"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Владелец"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq71"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Владелец"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq71"
                            onChange={[Function]}
                            placeholder="Владелец"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq72",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            key="filter-cn"
            onChange={[Function]}
            placeholder="Common name"
            quick={true}
            type="textinput"
            value="common_name"
          >
            <div
              className="filters__filter filters__filter_quick filters__filter_type_textinput"
              data-lego="react"
              style={Object {}}
            >
              <textinput
                innerRef={[Function]}
                key="textinput"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "textinput",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Common name"
                size="m"
                text="common_name"
                theme="normal"
                type="text"
                view="classic"
              >
                <span
                  className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m filters__textinput"
                  data-lego="react"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  style={Object {}}
                >
                  <textinput__control
                    innerRef={[Function]}
                    key="control"
                    onChange={[Function]}
                    placeholder="Common name"
                    type="text"
                    value="common_name"
                  >
                    <input
                      className="textinput__control"
                      data-lego="react"
                      onChange={[Function]}
                      placeholder="Common name"
                      style={Object {}}
                      type="text"
                      value="common_name"
                    />
                  </textinput__control>
                  <textinput__box
                    key="box"
                  >
                    <span
                      className="textinput__box"
                      data-lego="react"
                      style={Object {}}
                    />
                  </textinput__box>
                </span>
              </textinput>
            </div>
          </filters__filter>
          <button2
            checked={false}
            key="button"
            mix={
              Object {
                "block": "filters",
                "elem": "toggle-additional",
                "mods": Object {},
              }
            }
            onClick={[Function]}
            size="m"
            tabIndex={0}
            theme="normal"
            type="check"
            view="classic"
          >
            <button
              aria-disabled="false"
              aria-pressed="false"
              autoComplete="off"
              className="control button2 button2_view_classic button2_size_m button2_theme_normal button2_type_check filters__toggle-additional"
              data-lego="react"
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyPress={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onMouseUp={[Function]}
              style={Object {}}
              tabIndex={0}
              type="button"
            >
              <button2__text
                key="text"
              >
                <span
                  className="button2__text"
                  data-lego="react"
                  style={Object {}}
                >
                  <filters__ticker
                    value={5}
                  >
                    <span
                      className="filters__ticker"
                      data-lego="react"
                      style={Object {}}
                    >
                      5
                    </span>
                  </filters__ticker>
                  Фильтр
                </span>
              </button2__text>
            </button>
          </button2>
        </div>
      </filters__main>
    </div>
  </filters>
</filters.container>
`;

exports[`FiltersContainer component discards all the filters on revert changes button click 1`] = `
<filters.container
  additionalFiltersKeys={
    Array [
      "ca_name",
      "requester",
      "host",
      "serial_number",
      "abc_service",
    ]
  }
  disableScroll={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
  enableScroll={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
  filterQueryStr={
    [MockFunction] {
      "calls": Array [
        Array [
          [Function],
        ],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
  filtersKeys={
    Array [
      "type",
      "status",
      "user",
      "common_name",
      "ca_name",
      "requester",
      "host",
      "serial_number",
      "abc_service",
    ]
  }
  getFilters={
    [MockFunction] {
      "calls": Array [
        Array [],
        Array [],
        Array [],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "host",
            "requester": "requester",
            "serial_number": "serial_number",
            "status": "status",
            "type": "type",
            "user": "user",
          },
        },
        Object {
          "isThrow": false,
          "value": Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "host",
            "requester": "requester",
            "serial_number": "serial_number",
            "status": "status",
            "type": "type",
            "user": "user",
          },
        },
        Object {
          "isThrow": false,
          "value": Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "host",
            "requester": "requester",
            "serial_number": "serial_number",
            "status": "status",
            "type": "type",
            "user": "user",
          },
        },
      ],
    }
  }
  onApplyClick={[MockFunction]}
  onClearClick={[MockFunction]}
  onFilterChange={[MockFunction]}
  onToggleAdditionalFiltersClick={[MockFunction]}
  updateQueryStr={[MockFunction]}
>
  <filters
    additionalFiltersAppliedNum={5}
    filters={
      Object {
        "abc_service": "abc_service",
        "ca_name": "ca_name",
        "common_name": "common_name",
        "host": "host",
        "requester": "requester",
        "serial_number": "serial_number",
        "status": "status",
        "type": "type",
        "user": "user",
      }
    }
    getOnFilterChange={[Function]}
    isAdditionalFiltersVisible={false}
    onApplyClick={[Function]}
    onClearClick={[Function]}
    onToggleAdditionalFiltersClick={[Function]}
  >
    <div
      className="ta-component filters"
      data-lego="react"
      style={Object {}}
    >
      <filters__main
        additionalFiltersAppliedNum={5}
        filters={
          Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "host",
            "requester": "requester",
            "serial_number": "serial_number",
            "status": "status",
            "type": "type",
            "user": "user",
          }
        }
        getOnFilterChange={[Function]}
        isAdditionalFiltersVisible={false}
        key="main"
        onApplyClick={[Function]}
        onClearClick={[Function]}
        onToggleAdditionalFiltersClick={[Function]}
      >
        <div
          className="filters__main"
          data-lego="react"
          style={Object {}}
        >
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/cert_types/",
              }
            }
            key="filter-type"
            onChange={[Function]}
            placeholder="Тип"
            quick={true}
            single={true}
            text=""
            title=""
            type="suggest"
            value="type"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_quick"
              data-lego="react"
              style={Object {}}
            >
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/cert_types/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Тип"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "type",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/cert_types/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq53"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Тип"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "type",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq53"
                                placeholder="Тип"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq53"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Тип"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq53"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Тип"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq53"
                            onChange={[Function]}
                            placeholder="Тип"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq54",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/statuses/",
              }
            }
            key="filter-status"
            onChange={[Function]}
            placeholder="Статус"
            quick={true}
            single={true}
            text=""
            title=""
            type="suggest"
            value="status"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_quick"
              data-lego="react"
              style={Object {}}
            >
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/statuses/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Статус"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "status",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/statuses/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq55"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Статус"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "status",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq55"
                                placeholder="Статус"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq55"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Статус"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq55"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Статус"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq55"
                            onChange={[Function]}
                            placeholder="Статус"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq56",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/users/",
              }
            }
            key="filter-owner"
            onChange={[Function]}
            placeholder="Владелец"
            quick={true}
            single={true}
            type="suggest"
            value="user"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_quick"
              data-lego="react"
              style={Object {}}
            >
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/users/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Владелец"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "user",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/users/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq57"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Владелец"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "user",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq57"
                                placeholder="Владелец"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq57"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Владелец"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq57"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Владелец"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq57"
                            onChange={[Function]}
                            placeholder="Владелец"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq58",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            key="filter-cn"
            onChange={[Function]}
            placeholder="Common name"
            quick={true}
            type="textinput"
            value="common_name"
          >
            <div
              className="filters__filter filters__filter_quick filters__filter_type_textinput"
              data-lego="react"
              style={Object {}}
            >
              <textinput
                innerRef={[Function]}
                key="textinput"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "textinput",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Common name"
                size="m"
                text="common_name"
                theme="normal"
                type="text"
                view="classic"
              >
                <span
                  className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m filters__textinput"
                  data-lego="react"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  style={Object {}}
                >
                  <textinput__control
                    innerRef={[Function]}
                    key="control"
                    onChange={[Function]}
                    placeholder="Common name"
                    type="text"
                    value="common_name"
                  >
                    <input
                      className="textinput__control"
                      data-lego="react"
                      onChange={[Function]}
                      placeholder="Common name"
                      style={Object {}}
                      type="text"
                      value="common_name"
                    />
                  </textinput__control>
                  <textinput__box
                    key="box"
                  >
                    <span
                      className="textinput__box"
                      data-lego="react"
                      style={Object {}}
                    />
                  </textinput__box>
                </span>
              </textinput>
            </div>
          </filters__filter>
          <button2
            checked={false}
            key="button"
            mix={
              Object {
                "block": "filters",
                "elem": "toggle-additional",
                "mods": Object {},
              }
            }
            onClick={[Function]}
            size="m"
            tabIndex={0}
            theme="normal"
            type="check"
            view="classic"
          >
            <button
              aria-disabled="false"
              aria-pressed="false"
              autoComplete="off"
              className="control button2 button2_view_classic button2_size_m button2_theme_normal button2_type_check filters__toggle-additional"
              data-lego="react"
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyPress={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onMouseUp={[Function]}
              style={Object {}}
              tabIndex={0}
              type="button"
            >
              <button2__text
                key="text"
              >
                <span
                  className="button2__text"
                  data-lego="react"
                  style={Object {}}
                >
                  <filters__ticker
                    value={5}
                  >
                    <span
                      className="filters__ticker"
                      data-lego="react"
                      style={Object {}}
                    >
                      5
                    </span>
                  </filters__ticker>
                  Фильтр
                </span>
              </button2__text>
            </button>
          </button2>
        </div>
      </filters__main>
    </div>
  </filters>
</filters.container>
`;

exports[`FiltersContainer component does not update url when addition filters are show 1`] = `
<filters.container
  additionalFiltersKeys={
    Array [
      "ca_name",
      "requester",
      "host",
      "serial_number",
      "abc_service",
    ]
  }
  disableScroll={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
  enableScroll={[MockFunction]}
  filterQueryStr={[MockFunction]}
  filtersKeys={
    Array [
      "type",
      "status",
      "user",
      "common_name",
      "ca_name",
      "requester",
      "host",
      "serial_number",
      "abc_service",
    ]
  }
  getFilters={
    [MockFunction] {
      "calls": Array [
        Array [],
        Array [],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "host",
            "requester": "requester",
            "serial_number": "serial_number",
            "status": "status",
            "type": "type",
            "user": "user",
          },
        },
        Object {
          "isThrow": false,
          "value": Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "host",
            "requester": "requester",
            "serial_number": "serial_number",
            "status": "status",
            "type": "type",
            "user": "user",
          },
        },
      ],
    }
  }
  onApplyClick={[MockFunction]}
  onClearClick={[MockFunction]}
  onFilterChange={[MockFunction]}
  onToggleAdditionalFiltersClick={[MockFunction]}
  updateQueryStr={[MockFunction]}
>
  <filters
    additionalFiltersAppliedNum={5}
    filters={
      Object {
        "abc_service": "abc_service",
        "ca_name": "ca_name",
        "common_name": "common_name",
        "host": "host",
        "requester": "requester",
        "serial_number": "serial_number",
        "status": "status",
        "type": "type",
        "user": "user",
      }
    }
    getOnFilterChange={[Function]}
    isAdditionalFiltersVisible={true}
    onApplyClick={[Function]}
    onClearClick={[Function]}
    onToggleAdditionalFiltersClick={[Function]}
  >
    <div
      className="ta-component filters"
      data-lego="react"
      style={Object {}}
    >
      <filters__main
        additionalFiltersAppliedNum={5}
        filters={
          Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "host",
            "requester": "requester",
            "serial_number": "serial_number",
            "status": "status",
            "type": "type",
            "user": "user",
          }
        }
        getOnFilterChange={[Function]}
        isAdditionalFiltersVisible={true}
        key="main"
        onApplyClick={[Function]}
        onClearClick={[Function]}
        onToggleAdditionalFiltersClick={[Function]}
      >
        <div
          className="filters__main"
          data-lego="react"
          style={Object {}}
        >
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/cert_types/",
              }
            }
            key="filter-type"
            onChange={[Function]}
            placeholder="Тип"
            quick={true}
            single={true}
            text=""
            title=""
            type="suggest"
            value="type"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_quick"
              data-lego="react"
              style={Object {}}
            >
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/cert_types/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Тип"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "type",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/cert_types/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq39"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Тип"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "type",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq39"
                                placeholder="Тип"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq39"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Тип"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq39"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Тип"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq39"
                            onChange={[Function]}
                            placeholder="Тип"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq40",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/statuses/",
              }
            }
            key="filter-status"
            onChange={[Function]}
            placeholder="Статус"
            quick={true}
            single={true}
            text=""
            title=""
            type="suggest"
            value="status"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_quick"
              data-lego="react"
              style={Object {}}
            >
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/statuses/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Статус"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "status",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/statuses/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq41"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Статус"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "status",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq41"
                                placeholder="Статус"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq41"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Статус"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq41"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Статус"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq41"
                            onChange={[Function]}
                            placeholder="Статус"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq42",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/users/",
              }
            }
            key="filter-owner"
            onChange={[Function]}
            placeholder="Владелец"
            quick={true}
            single={true}
            type="suggest"
            value="user"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_quick"
              data-lego="react"
              style={Object {}}
            >
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/users/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Владелец"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "user",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/users/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq43"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Владелец"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "user",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq43"
                                placeholder="Владелец"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq43"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Владелец"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq43"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Владелец"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq43"
                            onChange={[Function]}
                            placeholder="Владелец"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq44",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            key="filter-cn"
            onChange={[Function]}
            placeholder="Common name"
            quick={true}
            type="textinput"
            value="common_name"
          >
            <div
              className="filters__filter filters__filter_quick filters__filter_type_textinput"
              data-lego="react"
              style={Object {}}
            >
              <textinput
                innerRef={[Function]}
                key="textinput"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "textinput",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Common name"
                size="m"
                text="common_name"
                theme="normal"
                type="text"
                view="classic"
              >
                <span
                  className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m filters__textinput"
                  data-lego="react"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  style={Object {}}
                >
                  <textinput__control
                    innerRef={[Function]}
                    key="control"
                    onChange={[Function]}
                    placeholder="Common name"
                    type="text"
                    value="common_name"
                  >
                    <input
                      className="textinput__control"
                      data-lego="react"
                      onChange={[Function]}
                      placeholder="Common name"
                      style={Object {}}
                      type="text"
                      value="common_name"
                    />
                  </textinput__control>
                  <textinput__box
                    key="box"
                  >
                    <span
                      className="textinput__box"
                      data-lego="react"
                      style={Object {}}
                    />
                  </textinput__box>
                </span>
              </textinput>
            </div>
          </filters__filter>
          <button2
            checked={true}
            key="button"
            mix={
              Object {
                "block": "filters",
                "elem": "toggle-additional",
                "mods": Object {},
              }
            }
            onClick={[Function]}
            size="m"
            tabIndex={0}
            theme="normal"
            type="check"
            view="classic"
          >
            <button
              aria-disabled="false"
              aria-pressed="true"
              autoComplete="off"
              className="control button2 button2_view_classic button2_size_m button2_theme_normal button2_checked_yes button2_type_check filters__toggle-additional"
              data-lego="react"
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyPress={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onMouseUp={[Function]}
              style={Object {}}
              tabIndex={0}
              type="button"
            >
              <button2__text
                key="text"
              >
                <span
                  className="button2__text"
                  data-lego="react"
                  style={Object {}}
                >
                  <filters__ticker
                    value={5}
                  >
                    <span
                      className="filters__ticker"
                      data-lego="react"
                      style={Object {}}
                    >
                      5
                    </span>
                  </filters__ticker>
                  Фильтр
                </span>
              </button2__text>
            </button>
          </button2>
        </div>
      </filters__main>
      <filters__paranja
        key="paranja"
      >
        <div
          className="filters__paranja"
          data-lego="react"
          style={Object {}}
        />
      </filters__paranja>
      <filters__additional
        additionalFiltersAppliedNum={5}
        filters={
          Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "host",
            "requester": "requester",
            "serial_number": "serial_number",
            "status": "status",
            "type": "type",
            "user": "user",
          }
        }
        getOnFilterChange={[Function]}
        isAdditionalFiltersVisible={true}
        key="additional"
        onApplyClick={[Function]}
        onClearClick={[Function]}
        onToggleAdditionalFiltersClick={[Function]}
      >
        <div
          className="filters__additional"
          data-lego="react"
          style={Object {}}
        >
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/users/",
              }
            }
            has-title={true}
            key="filter-issuer"
            onChange={[Function]}
            placeholder="Выберите"
            single={true}
            title="Запросивший"
            type="suggest"
            value="requester"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_has-title"
              data-lego="react"
              style={Object {}}
            >
              <filters__filter-title
                key="title"
              >
                <div
                  className="filters__filter-title"
                  data-lego="react"
                  style={Object {}}
                >
                  Запросивший
                </div>
              </filters__filter-title>
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/users/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Выберите"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "requester",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/users/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq45"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Выберите"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "requester",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq45"
                                placeholder="Выберите"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq45"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Выберите"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq45"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Выберите"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq45"
                            onChange={[Function]}
                            placeholder="Выберите"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq46",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/hosts/",
              }
            }
            has-title={true}
            key="filter-host"
            onChange={[Function]}
            placeholder="Выберите"
            single={true}
            title="Хост"
            type="suggest"
            value="host"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_has-title"
              data-lego="react"
              style={Object {}}
            >
              <filters__filter-title
                key="title"
              >
                <div
                  className="filters__filter-title"
                  data-lego="react"
                  style={Object {}}
                >
                  Хост
                </div>
              </filters__filter-title>
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/hosts/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Выберите"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "host",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/hosts/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq47"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Выберите"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "host",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq47"
                                placeholder="Выберите"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq47"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Выберите"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq47"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Выберите"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq47"
                            onChange={[Function]}
                            placeholder="Выберите"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq48",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/ca_names/",
              }
            }
            has-title={true}
            key="filter-can"
            onChange={[Function]}
            placeholder="Выберите"
            single={true}
            title="CA Name"
            type="suggest"
            value="ca_name"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_has-title"
              data-lego="react"
              style={Object {}}
            >
              <filters__filter-title
                key="title"
              >
                <div
                  className="filters__filter-title"
                  data-lego="react"
                  style={Object {}}
                >
                  CA Name
                </div>
              </filters__filter-title>
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/ca_names/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Выберите"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "ca_name",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/ca_names/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq49"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Выберите"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "ca_name",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq49"
                                placeholder="Выберите"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq49"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Выберите"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq49"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Выберите"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq49"
                            onChange={[Function]}
                            placeholder="Выберите"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq50",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            has-title={true}
            key="filter-sn"
            onChange={[Function]}
            title="Серийный номер"
            type="textinput"
            value="serial_number"
          >
            <div
              className="filters__filter filters__filter_type_textinput filters__filter_has-title"
              data-lego="react"
              style={Object {}}
            >
              <filters__filter-title
                key="title"
              >
                <div
                  className="filters__filter-title"
                  data-lego="react"
                  style={Object {}}
                >
                  Серийный номер
                </div>
              </filters__filter-title>
              <textinput
                innerRef={[Function]}
                key="textinput"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "textinput",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                size="m"
                text="serial_number"
                theme="normal"
                type="text"
                view="classic"
              >
                <span
                  className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m filters__textinput"
                  data-lego="react"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  style={Object {}}
                >
                  <textinput__control
                    innerRef={[Function]}
                    key="control"
                    onChange={[Function]}
                    type="text"
                    value="serial_number"
                  >
                    <input
                      className="textinput__control"
                      data-lego="react"
                      onChange={[Function]}
                      style={Object {}}
                      type="text"
                      value="serial_number"
                    />
                  </textinput__control>
                  <textinput__box
                    key="box"
                  >
                    <span
                      className="textinput__box"
                      data-lego="react"
                      style={Object {}}
                    />
                  </textinput__box>
                </span>
              </textinput>
            </div>
          </filters__filter>
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/abc_services/",
              }
            }
            has-title={true}
            key="filter-abc"
            onChange={[Function]}
            placeholder="Выберите"
            single={true}
            title="ABC сервис"
            type="suggest"
            value="abc_service"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_has-title"
              data-lego="react"
              style={Object {}}
            >
              <filters__filter-title
                key="title"
              >
                <div
                  className="filters__filter-title"
                  data-lego="react"
                  style={Object {}}
                >
                  ABC сервис
                </div>
              </filters__filter-title>
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/abc_services/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Выберите"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "abc_service",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/abc_services/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq51"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Выберите"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "abc_service",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq51"
                                placeholder="Выберите"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq51"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Выберите"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq51"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Выберите"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq51"
                            onChange={[Function]}
                            placeholder="Выберите"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq52",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__controls
            key="controls"
            onApplyClick={[Function]}
            onClearClick={[Function]}
          >
            <div
              className="filters__controls"
              data-lego="react"
              style={Object {}}
            >
              <button2
                key="apply"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "apply",
                    "mods": Object {},
                  }
                }
                onClick={[Function]}
                size="m"
                tabIndex={0}
                theme="action"
                view="classic"
              >
                <button
                  aria-disabled="false"
                  aria-pressed="false"
                  autoComplete="off"
                  className="control button2 button2_view_classic button2_size_m button2_theme_action filters__apply"
                  data-lego="react"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyPress={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  style={Object {}}
                  tabIndex={0}
                  type="button"
                >
                  <button2__text
                    key="text"
                  >
                    <span
                      className="button2__text"
                      data-lego="react"
                      style={Object {}}
                    >
                      Применить
                    </span>
                  </button2__text>
                </button>
              </button2>
              <button2
                key="clear"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "clear",
                    "mods": Object {},
                  }
                }
                onClick={[Function]}
                size="m"
                tabIndex={0}
                theme="clear"
                view="classic"
              >
                <button
                  aria-disabled="false"
                  aria-pressed="false"
                  autoComplete="off"
                  className="control button2 button2_view_classic button2_size_m button2_theme_clear filters__clear"
                  data-lego="react"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyPress={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  style={Object {}}
                  tabIndex={0}
                  type="button"
                >
                  <button2__text
                    key="text"
                  >
                    <span
                      className="button2__text"
                      data-lego="react"
                      style={Object {}}
                    >
                      Сбросить фильтр
                    </span>
                  </button2__text>
                </button>
              </button2>
            </div>
          </filters__controls>
        </div>
      </filters__additional>
    </div>
  </filters>
</filters.container>
`;

exports[`FiltersContainer component renders correctly when full data is provided 1`] = `
<filters.container
  additionalFiltersKeys={
    Array [
      "ca_name",
      "requester",
      "host",
      "serial_number",
      "abc_service",
    ]
  }
  disableScroll={[MockFunction]}
  enableScroll={[MockFunction]}
  filterQueryStr={[MockFunction]}
  filtersKeys={
    Array [
      "type",
      "status",
      "user",
      "common_name",
      "ca_name",
      "requester",
      "host",
      "serial_number",
      "abc_service",
    ]
  }
  getFilters={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "host",
            "requester": "requester",
            "serial_number": "serial_number",
            "status": "status",
            "type": "type",
            "user": "user",
          },
        },
      ],
    }
  }
  onApplyClick={[MockFunction]}
  onClearClick={[MockFunction]}
  onFilterChange={[MockFunction]}
  onToggleAdditionalFiltersClick={[MockFunction]}
  updateQueryStr={[MockFunction]}
>
  <filters
    additionalFiltersAppliedNum={5}
    filters={
      Object {
        "abc_service": "abc_service",
        "ca_name": "ca_name",
        "common_name": "common_name",
        "host": "host",
        "requester": "requester",
        "serial_number": "serial_number",
        "status": "status",
        "type": "type",
        "user": "user",
      }
    }
    getOnFilterChange={[Function]}
    isAdditionalFiltersVisible={false}
    onApplyClick={[Function]}
    onClearClick={[Function]}
    onToggleAdditionalFiltersClick={[Function]}
  >
    <div
      className="ta-component filters"
      data-lego="react"
      style={Object {}}
    >
      <filters__main
        additionalFiltersAppliedNum={5}
        filters={
          Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "host",
            "requester": "requester",
            "serial_number": "serial_number",
            "status": "status",
            "type": "type",
            "user": "user",
          }
        }
        getOnFilterChange={[Function]}
        isAdditionalFiltersVisible={false}
        key="main"
        onApplyClick={[Function]}
        onClearClick={[Function]}
        onToggleAdditionalFiltersClick={[Function]}
      >
        <div
          className="filters__main"
          data-lego="react"
          style={Object {}}
        >
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/cert_types/",
              }
            }
            key="filter-type"
            onChange={[Function]}
            placeholder="Тип"
            quick={true}
            single={true}
            text=""
            title=""
            type="suggest"
            value="type"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_quick"
              data-lego="react"
              style={Object {}}
            >
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/cert_types/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Тип"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "type",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/cert_types/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq1"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Тип"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "type",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq1"
                                placeholder="Тип"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq1"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Тип"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq1"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Тип"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq1"
                            onChange={[Function]}
                            placeholder="Тип"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq2",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/statuses/",
              }
            }
            key="filter-status"
            onChange={[Function]}
            placeholder="Статус"
            quick={true}
            single={true}
            text=""
            title=""
            type="suggest"
            value="status"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_quick"
              data-lego="react"
              style={Object {}}
            >
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/statuses/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Статус"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "status",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/statuses/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq3"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Статус"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "status",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq3"
                                placeholder="Статус"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq3"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Статус"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq3"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Статус"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq3"
                            onChange={[Function]}
                            placeholder="Статус"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq4",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/users/",
              }
            }
            key="filter-owner"
            onChange={[Function]}
            placeholder="Владелец"
            quick={true}
            single={true}
            type="suggest"
            value="user"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_quick"
              data-lego="react"
              style={Object {}}
            >
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/users/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Владелец"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "user",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/users/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq5"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Владелец"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "user",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq5"
                                placeholder="Владелец"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq5"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Владелец"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq5"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Владелец"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq5"
                            onChange={[Function]}
                            placeholder="Владелец"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq6",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            key="filter-cn"
            onChange={[Function]}
            placeholder="Common name"
            quick={true}
            type="textinput"
            value="common_name"
          >
            <div
              className="filters__filter filters__filter_quick filters__filter_type_textinput"
              data-lego="react"
              style={Object {}}
            >
              <textinput
                innerRef={[Function]}
                key="textinput"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "textinput",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Common name"
                size="m"
                text="common_name"
                theme="normal"
                type="text"
                view="classic"
              >
                <span
                  className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m filters__textinput"
                  data-lego="react"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  style={Object {}}
                >
                  <textinput__control
                    innerRef={[Function]}
                    key="control"
                    onChange={[Function]}
                    placeholder="Common name"
                    type="text"
                    value="common_name"
                  >
                    <input
                      className="textinput__control"
                      data-lego="react"
                      onChange={[Function]}
                      placeholder="Common name"
                      style={Object {}}
                      type="text"
                      value="common_name"
                    />
                  </textinput__control>
                  <textinput__box
                    key="box"
                  >
                    <span
                      className="textinput__box"
                      data-lego="react"
                      style={Object {}}
                    />
                  </textinput__box>
                </span>
              </textinput>
            </div>
          </filters__filter>
          <button2
            checked={false}
            key="button"
            mix={
              Object {
                "block": "filters",
                "elem": "toggle-additional",
                "mods": Object {},
              }
            }
            onClick={[Function]}
            size="m"
            tabIndex={0}
            theme="normal"
            type="check"
            view="classic"
          >
            <button
              aria-disabled="false"
              aria-pressed="false"
              autoComplete="off"
              className="control button2 button2_view_classic button2_size_m button2_theme_normal button2_type_check filters__toggle-additional"
              data-lego="react"
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyPress={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onMouseUp={[Function]}
              style={Object {}}
              tabIndex={0}
              type="button"
            >
              <button2__text
                key="text"
              >
                <span
                  className="button2__text"
                  data-lego="react"
                  style={Object {}}
                >
                  <filters__ticker
                    value={5}
                  >
                    <span
                      className="filters__ticker"
                      data-lego="react"
                      style={Object {}}
                    >
                      5
                    </span>
                  </filters__ticker>
                  Фильтр
                </span>
              </button2__text>
            </button>
          </button2>
        </div>
      </filters__main>
    </div>
  </filters>
</filters.container>
`;

exports[`FiltersContainer component renders correctly when partial applied filters num is 0 1`] = `
<filters.container
  additionalFiltersAppliedNum={0}
  additionalFiltersKeys={
    Array [
      "ca_name",
      "requester",
      "host",
      "serial_number",
      "abc_service",
    ]
  }
  disableScroll={[MockFunction]}
  enableScroll={[MockFunction]}
  filterQueryStr={[MockFunction]}
  filtersKeys={
    Array [
      "type",
      "status",
      "user",
      "common_name",
      "ca_name",
      "requester",
      "host",
      "serial_number",
      "abc_service",
    ]
  }
  getFilters={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "host",
            "requester": "requester",
            "serial_number": "serial_number",
            "status": "status",
            "type": "type",
            "user": "user",
          },
        },
      ],
    }
  }
  onApplyClick={[MockFunction]}
  onClearClick={[MockFunction]}
  onFilterChange={[MockFunction]}
  onToggleAdditionalFiltersClick={[MockFunction]}
  updateQueryStr={[MockFunction]}
>
  <filters
    additionalFiltersAppliedNum={5}
    filters={
      Object {
        "abc_service": "abc_service",
        "ca_name": "ca_name",
        "common_name": "common_name",
        "host": "host",
        "requester": "requester",
        "serial_number": "serial_number",
        "status": "status",
        "type": "type",
        "user": "user",
      }
    }
    getOnFilterChange={[Function]}
    isAdditionalFiltersVisible={false}
    onApplyClick={[Function]}
    onClearClick={[Function]}
    onToggleAdditionalFiltersClick={[Function]}
  >
    <div
      className="ta-component filters"
      data-lego="react"
      style={Object {}}
    >
      <filters__main
        additionalFiltersAppliedNum={5}
        filters={
          Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "host",
            "requester": "requester",
            "serial_number": "serial_number",
            "status": "status",
            "type": "type",
            "user": "user",
          }
        }
        getOnFilterChange={[Function]}
        isAdditionalFiltersVisible={false}
        key="main"
        onApplyClick={[Function]}
        onClearClick={[Function]}
        onToggleAdditionalFiltersClick={[Function]}
      >
        <div
          className="filters__main"
          data-lego="react"
          style={Object {}}
        >
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/cert_types/",
              }
            }
            key="filter-type"
            onChange={[Function]}
            placeholder="Тип"
            quick={true}
            single={true}
            text=""
            title=""
            type="suggest"
            value="type"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_quick"
              data-lego="react"
              style={Object {}}
            >
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/cert_types/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Тип"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "type",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/cert_types/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq13"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Тип"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "type",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq13"
                                placeholder="Тип"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq13"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Тип"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq13"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Тип"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq13"
                            onChange={[Function]}
                            placeholder="Тип"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq14",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/statuses/",
              }
            }
            key="filter-status"
            onChange={[Function]}
            placeholder="Статус"
            quick={true}
            single={true}
            text=""
            title=""
            type="suggest"
            value="status"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_quick"
              data-lego="react"
              style={Object {}}
            >
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/statuses/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Статус"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "status",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/statuses/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq15"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Статус"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "status",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq15"
                                placeholder="Статус"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq15"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Статус"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq15"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Статус"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq15"
                            onChange={[Function]}
                            placeholder="Статус"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq16",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/users/",
              }
            }
            key="filter-owner"
            onChange={[Function]}
            placeholder="Владелец"
            quick={true}
            single={true}
            type="suggest"
            value="user"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_quick"
              data-lego="react"
              style={Object {}}
            >
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/users/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Владелец"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "user",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/users/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq17"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Владелец"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "user",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq17"
                                placeholder="Владелец"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq17"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Владелец"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq17"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Владелец"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq17"
                            onChange={[Function]}
                            placeholder="Владелец"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq18",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            key="filter-cn"
            onChange={[Function]}
            placeholder="Common name"
            quick={true}
            type="textinput"
            value="common_name"
          >
            <div
              className="filters__filter filters__filter_quick filters__filter_type_textinput"
              data-lego="react"
              style={Object {}}
            >
              <textinput
                innerRef={[Function]}
                key="textinput"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "textinput",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Common name"
                size="m"
                text="common_name"
                theme="normal"
                type="text"
                view="classic"
              >
                <span
                  className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m filters__textinput"
                  data-lego="react"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  style={Object {}}
                >
                  <textinput__control
                    innerRef={[Function]}
                    key="control"
                    onChange={[Function]}
                    placeholder="Common name"
                    type="text"
                    value="common_name"
                  >
                    <input
                      className="textinput__control"
                      data-lego="react"
                      onChange={[Function]}
                      placeholder="Common name"
                      style={Object {}}
                      type="text"
                      value="common_name"
                    />
                  </textinput__control>
                  <textinput__box
                    key="box"
                  >
                    <span
                      className="textinput__box"
                      data-lego="react"
                      style={Object {}}
                    />
                  </textinput__box>
                </span>
              </textinput>
            </div>
          </filters__filter>
          <button2
            checked={false}
            key="button"
            mix={
              Object {
                "block": "filters",
                "elem": "toggle-additional",
                "mods": Object {},
              }
            }
            onClick={[Function]}
            size="m"
            tabIndex={0}
            theme="normal"
            type="check"
            view="classic"
          >
            <button
              aria-disabled="false"
              aria-pressed="false"
              autoComplete="off"
              className="control button2 button2_view_classic button2_size_m button2_theme_normal button2_type_check filters__toggle-additional"
              data-lego="react"
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyPress={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onMouseUp={[Function]}
              style={Object {}}
              tabIndex={0}
              type="button"
            >
              <button2__text
                key="text"
              >
                <span
                  className="button2__text"
                  data-lego="react"
                  style={Object {}}
                >
                  <filters__ticker
                    value={5}
                  >
                    <span
                      className="filters__ticker"
                      data-lego="react"
                      style={Object {}}
                    >
                      5
                    </span>
                  </filters__ticker>
                  Фильтр
                </span>
              </button2__text>
            </button>
          </button2>
        </div>
      </filters__main>
    </div>
  </filters>
</filters.container>
`;

exports[`FiltersContainer component renders correctly when partial data is provided 1`] = `
<filters.container
  additionalFiltersKeys={
    Array [
      "ca_name",
      "requester",
      "host",
      "serial_number",
      "abc_service",
    ]
  }
  disableScroll={[MockFunction]}
  enableScroll={[MockFunction]}
  filterQueryStr={[MockFunction]}
  filtersKeys={
    Array [
      "type",
      "status",
      "user",
      "common_name",
      "ca_name",
      "requester",
      "host",
      "serial_number",
      "abc_service",
    ]
  }
  getFilters={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "",
            "requester": "requester",
            "serial_number": "",
            "status": "status",
            "type": "type",
            "user": "user",
          },
        },
      ],
    }
  }
  onApplyClick={[MockFunction]}
  onClearClick={[MockFunction]}
  onFilterChange={[MockFunction]}
  onToggleAdditionalFiltersClick={[MockFunction]}
  updateQueryStr={[MockFunction]}
>
  <filters
    additionalFiltersAppliedNum={3}
    filters={
      Object {
        "abc_service": "abc_service",
        "ca_name": "ca_name",
        "common_name": "common_name",
        "host": "",
        "requester": "requester",
        "serial_number": "",
        "status": "status",
        "type": "type",
        "user": "user",
      }
    }
    getOnFilterChange={[Function]}
    isAdditionalFiltersVisible={false}
    onApplyClick={[Function]}
    onClearClick={[Function]}
    onToggleAdditionalFiltersClick={[Function]}
  >
    <div
      className="ta-component filters"
      data-lego="react"
      style={Object {}}
    >
      <filters__main
        additionalFiltersAppliedNum={3}
        filters={
          Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "",
            "requester": "requester",
            "serial_number": "",
            "status": "status",
            "type": "type",
            "user": "user",
          }
        }
        getOnFilterChange={[Function]}
        isAdditionalFiltersVisible={false}
        key="main"
        onApplyClick={[Function]}
        onClearClick={[Function]}
        onToggleAdditionalFiltersClick={[Function]}
      >
        <div
          className="filters__main"
          data-lego="react"
          style={Object {}}
        >
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/cert_types/",
              }
            }
            key="filter-type"
            onChange={[Function]}
            placeholder="Тип"
            quick={true}
            single={true}
            text=""
            title=""
            type="suggest"
            value="type"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_quick"
              data-lego="react"
              style={Object {}}
            >
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/cert_types/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Тип"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "type",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/cert_types/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq7"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Тип"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "type",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq7"
                                placeholder="Тип"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq7"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Тип"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq7"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Тип"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq7"
                            onChange={[Function]}
                            placeholder="Тип"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq8",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/statuses/",
              }
            }
            key="filter-status"
            onChange={[Function]}
            placeholder="Статус"
            quick={true}
            single={true}
            text=""
            title=""
            type="suggest"
            value="status"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_quick"
              data-lego="react"
              style={Object {}}
            >
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/statuses/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Статус"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "status",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/statuses/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq9"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Статус"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "status",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq9"
                                placeholder="Статус"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq9"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Статус"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq9"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Статус"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq9"
                            onChange={[Function]}
                            placeholder="Статус"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq10",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/users/",
              }
            }
            key="filter-owner"
            onChange={[Function]}
            placeholder="Владелец"
            quick={true}
            single={true}
            type="suggest"
            value="user"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_quick"
              data-lego="react"
              style={Object {}}
            >
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/users/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Владелец"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "user",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/users/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq11"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Владелец"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "user",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq11"
                                placeholder="Владелец"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq11"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Владелец"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq11"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Владелец"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq11"
                            onChange={[Function]}
                            placeholder="Владелец"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq12",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            key="filter-cn"
            onChange={[Function]}
            placeholder="Common name"
            quick={true}
            type="textinput"
            value="common_name"
          >
            <div
              className="filters__filter filters__filter_quick filters__filter_type_textinput"
              data-lego="react"
              style={Object {}}
            >
              <textinput
                innerRef={[Function]}
                key="textinput"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "textinput",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Common name"
                size="m"
                text="common_name"
                theme="normal"
                type="text"
                view="classic"
              >
                <span
                  className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m filters__textinput"
                  data-lego="react"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  style={Object {}}
                >
                  <textinput__control
                    innerRef={[Function]}
                    key="control"
                    onChange={[Function]}
                    placeholder="Common name"
                    type="text"
                    value="common_name"
                  >
                    <input
                      className="textinput__control"
                      data-lego="react"
                      onChange={[Function]}
                      placeholder="Common name"
                      style={Object {}}
                      type="text"
                      value="common_name"
                    />
                  </textinput__control>
                  <textinput__box
                    key="box"
                  >
                    <span
                      className="textinput__box"
                      data-lego="react"
                      style={Object {}}
                    />
                  </textinput__box>
                </span>
              </textinput>
            </div>
          </filters__filter>
          <button2
            checked={false}
            key="button"
            mix={
              Object {
                "block": "filters",
                "elem": "toggle-additional",
                "mods": Object {},
              }
            }
            onClick={[Function]}
            size="m"
            tabIndex={0}
            theme="normal"
            type="check"
            view="classic"
          >
            <button
              aria-disabled="false"
              aria-pressed="false"
              autoComplete="off"
              className="control button2 button2_view_classic button2_size_m button2_theme_normal button2_type_check filters__toggle-additional"
              data-lego="react"
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyPress={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onMouseUp={[Function]}
              style={Object {}}
              tabIndex={0}
              type="button"
            >
              <button2__text
                key="text"
              >
                <span
                  className="button2__text"
                  data-lego="react"
                  style={Object {}}
                >
                  <filters__ticker
                    value={3}
                  >
                    <span
                      className="filters__ticker"
                      data-lego="react"
                      style={Object {}}
                    >
                      3
                    </span>
                  </filters__ticker>
                  Фильтр
                </span>
              </button2__text>
            </button>
          </button2>
        </div>
      </filters__main>
    </div>
  </filters>
</filters.container>
`;

exports[`FiltersContainer component shows and hides additional menu 1`] = `
<filters.container
  additionalFiltersKeys={
    Array [
      "ca_name",
      "requester",
      "host",
      "serial_number",
      "abc_service",
    ]
  }
  disableScroll={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
  enableScroll={[MockFunction]}
  filterQueryStr={[MockFunction]}
  filtersKeys={
    Array [
      "type",
      "status",
      "user",
      "common_name",
      "ca_name",
      "requester",
      "host",
      "serial_number",
      "abc_service",
    ]
  }
  getFilters={
    [MockFunction] {
      "calls": Array [
        Array [],
        Array [],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "host",
            "requester": "requester",
            "serial_number": "serial_number",
            "status": "status",
            "type": "type",
            "user": "user",
          },
        },
        Object {
          "isThrow": false,
          "value": Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "host",
            "requester": "requester",
            "serial_number": "serial_number",
            "status": "status",
            "type": "type",
            "user": "user",
          },
        },
      ],
    }
  }
  onApplyClick={[MockFunction]}
  onClearClick={[MockFunction]}
  onFilterChange={[MockFunction]}
  onToggleAdditionalFiltersClick={[MockFunction]}
  updateQueryStr={[MockFunction]}
>
  <filters
    additionalFiltersAppliedNum={5}
    filters={
      Object {
        "abc_service": "abc_service",
        "ca_name": "ca_name",
        "common_name": "common_name",
        "host": "host",
        "requester": "requester",
        "serial_number": "serial_number",
        "status": "status",
        "type": "type",
        "user": "user",
      }
    }
    getOnFilterChange={[Function]}
    isAdditionalFiltersVisible={true}
    onApplyClick={[Function]}
    onClearClick={[Function]}
    onToggleAdditionalFiltersClick={[Function]}
  >
    <div
      className="ta-component filters"
      data-lego="react"
      style={Object {}}
    >
      <filters__main
        additionalFiltersAppliedNum={5}
        filters={
          Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "host",
            "requester": "requester",
            "serial_number": "serial_number",
            "status": "status",
            "type": "type",
            "user": "user",
          }
        }
        getOnFilterChange={[Function]}
        isAdditionalFiltersVisible={true}
        key="main"
        onApplyClick={[Function]}
        onClearClick={[Function]}
        onToggleAdditionalFiltersClick={[Function]}
      >
        <div
          className="filters__main"
          data-lego="react"
          style={Object {}}
        >
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/cert_types/",
              }
            }
            key="filter-type"
            onChange={[Function]}
            placeholder="Тип"
            quick={true}
            single={true}
            text=""
            title=""
            type="suggest"
            value="type"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_quick"
              data-lego="react"
              style={Object {}}
            >
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/cert_types/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Тип"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "type",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/cert_types/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq19"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Тип"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "type",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq19"
                                placeholder="Тип"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq19"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Тип"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq19"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Тип"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq19"
                            onChange={[Function]}
                            placeholder="Тип"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq20",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/statuses/",
              }
            }
            key="filter-status"
            onChange={[Function]}
            placeholder="Статус"
            quick={true}
            single={true}
            text=""
            title=""
            type="suggest"
            value="status"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_quick"
              data-lego="react"
              style={Object {}}
            >
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/statuses/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Статус"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "status",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/statuses/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq21"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Статус"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "status",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq21"
                                placeholder="Статус"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq21"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Статус"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq21"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Статус"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq21"
                            onChange={[Function]}
                            placeholder="Статус"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq22",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/users/",
              }
            }
            key="filter-owner"
            onChange={[Function]}
            placeholder="Владелец"
            quick={true}
            single={true}
            type="suggest"
            value="user"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_quick"
              data-lego="react"
              style={Object {}}
            >
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/users/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Владелец"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "user",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/users/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq23"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Владелец"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "user",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq23"
                                placeholder="Владелец"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq23"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Владелец"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq23"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Владелец"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq23"
                            onChange={[Function]}
                            placeholder="Владелец"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq24",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            key="filter-cn"
            onChange={[Function]}
            placeholder="Common name"
            quick={true}
            type="textinput"
            value="common_name"
          >
            <div
              className="filters__filter filters__filter_quick filters__filter_type_textinput"
              data-lego="react"
              style={Object {}}
            >
              <textinput
                innerRef={[Function]}
                key="textinput"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "textinput",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Common name"
                size="m"
                text="common_name"
                theme="normal"
                type="text"
                view="classic"
              >
                <span
                  className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m filters__textinput"
                  data-lego="react"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  style={Object {}}
                >
                  <textinput__control
                    innerRef={[Function]}
                    key="control"
                    onChange={[Function]}
                    placeholder="Common name"
                    type="text"
                    value="common_name"
                  >
                    <input
                      className="textinput__control"
                      data-lego="react"
                      onChange={[Function]}
                      placeholder="Common name"
                      style={Object {}}
                      type="text"
                      value="common_name"
                    />
                  </textinput__control>
                  <textinput__box
                    key="box"
                  >
                    <span
                      className="textinput__box"
                      data-lego="react"
                      style={Object {}}
                    />
                  </textinput__box>
                </span>
              </textinput>
            </div>
          </filters__filter>
          <button2
            checked={true}
            key="button"
            mix={
              Object {
                "block": "filters",
                "elem": "toggle-additional",
                "mods": Object {},
              }
            }
            onClick={[Function]}
            size="m"
            tabIndex={0}
            theme="normal"
            type="check"
            view="classic"
          >
            <button
              aria-disabled="false"
              aria-pressed="true"
              autoComplete="off"
              className="control button2 button2_view_classic button2_size_m button2_theme_normal button2_checked_yes button2_type_check filters__toggle-additional"
              data-lego="react"
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyPress={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onMouseUp={[Function]}
              style={Object {}}
              tabIndex={0}
              type="button"
            >
              <button2__text
                key="text"
              >
                <span
                  className="button2__text"
                  data-lego="react"
                  style={Object {}}
                >
                  <filters__ticker
                    value={5}
                  >
                    <span
                      className="filters__ticker"
                      data-lego="react"
                      style={Object {}}
                    >
                      5
                    </span>
                  </filters__ticker>
                  Фильтр
                </span>
              </button2__text>
            </button>
          </button2>
        </div>
      </filters__main>
      <filters__paranja
        key="paranja"
      >
        <div
          className="filters__paranja"
          data-lego="react"
          style={Object {}}
        />
      </filters__paranja>
      <filters__additional
        additionalFiltersAppliedNum={5}
        filters={
          Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "host",
            "requester": "requester",
            "serial_number": "serial_number",
            "status": "status",
            "type": "type",
            "user": "user",
          }
        }
        getOnFilterChange={[Function]}
        isAdditionalFiltersVisible={true}
        key="additional"
        onApplyClick={[Function]}
        onClearClick={[Function]}
        onToggleAdditionalFiltersClick={[Function]}
      >
        <div
          className="filters__additional"
          data-lego="react"
          style={Object {}}
        >
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/users/",
              }
            }
            has-title={true}
            key="filter-issuer"
            onChange={[Function]}
            placeholder="Выберите"
            single={true}
            title="Запросивший"
            type="suggest"
            value="requester"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_has-title"
              data-lego="react"
              style={Object {}}
            >
              <filters__filter-title
                key="title"
              >
                <div
                  className="filters__filter-title"
                  data-lego="react"
                  style={Object {}}
                >
                  Запросивший
                </div>
              </filters__filter-title>
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/users/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Выберите"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "requester",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/users/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq25"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Выберите"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "requester",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq25"
                                placeholder="Выберите"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq25"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Выберите"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq25"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Выберите"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq25"
                            onChange={[Function]}
                            placeholder="Выберите"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq26",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/hosts/",
              }
            }
            has-title={true}
            key="filter-host"
            onChange={[Function]}
            placeholder="Выберите"
            single={true}
            title="Хост"
            type="suggest"
            value="host"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_has-title"
              data-lego="react"
              style={Object {}}
            >
              <filters__filter-title
                key="title"
              >
                <div
                  className="filters__filter-title"
                  data-lego="react"
                  style={Object {}}
                >
                  Хост
                </div>
              </filters__filter-title>
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/hosts/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Выберите"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "host",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/hosts/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq27"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Выберите"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "host",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq27"
                                placeholder="Выберите"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq27"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Выберите"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq27"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Выберите"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq27"
                            onChange={[Function]}
                            placeholder="Выберите"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq28",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/ca_names/",
              }
            }
            has-title={true}
            key="filter-can"
            onChange={[Function]}
            placeholder="Выберите"
            single={true}
            title="CA Name"
            type="suggest"
            value="ca_name"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_has-title"
              data-lego="react"
              style={Object {}}
            >
              <filters__filter-title
                key="title"
              >
                <div
                  className="filters__filter-title"
                  data-lego="react"
                  style={Object {}}
                >
                  CA Name
                </div>
              </filters__filter-title>
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/ca_names/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Выберите"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "ca_name",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/ca_names/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq29"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Выберите"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "ca_name",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq29"
                                placeholder="Выберите"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq29"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Выберите"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq29"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Выберите"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq29"
                            onChange={[Function]}
                            placeholder="Выберите"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq30",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            has-title={true}
            key="filter-sn"
            onChange={[Function]}
            title="Серийный номер"
            type="textinput"
            value="serial_number"
          >
            <div
              className="filters__filter filters__filter_type_textinput filters__filter_has-title"
              data-lego="react"
              style={Object {}}
            >
              <filters__filter-title
                key="title"
              >
                <div
                  className="filters__filter-title"
                  data-lego="react"
                  style={Object {}}
                >
                  Серийный номер
                </div>
              </filters__filter-title>
              <textinput
                innerRef={[Function]}
                key="textinput"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "textinput",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                size="m"
                text="serial_number"
                theme="normal"
                type="text"
                view="classic"
              >
                <span
                  className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m filters__textinput"
                  data-lego="react"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  style={Object {}}
                >
                  <textinput__control
                    innerRef={[Function]}
                    key="control"
                    onChange={[Function]}
                    type="text"
                    value="serial_number"
                  >
                    <input
                      className="textinput__control"
                      data-lego="react"
                      onChange={[Function]}
                      style={Object {}}
                      type="text"
                      value="serial_number"
                    />
                  </textinput__control>
                  <textinput__box
                    key="box"
                  >
                    <span
                      className="textinput__box"
                      data-lego="react"
                      style={Object {}}
                    />
                  </textinput__box>
                </span>
              </textinput>
            </div>
          </filters__filter>
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/abc_services/",
              }
            }
            has-title={true}
            key="filter-abc"
            onChange={[Function]}
            placeholder="Выберите"
            single={true}
            title="ABC сервис"
            type="suggest"
            value="abc_service"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_has-title"
              data-lego="react"
              style={Object {}}
            >
              <filters__filter-title
                key="title"
              >
                <div
                  className="filters__filter-title"
                  data-lego="react"
                  style={Object {}}
                >
                  ABC сервис
                </div>
              </filters__filter-title>
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/abc_services/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Выберите"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "abc_service",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/abc_services/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq31"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Выберите"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "abc_service",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq31"
                                placeholder="Выберите"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq31"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Выберите"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq31"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Выберите"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq31"
                            onChange={[Function]}
                            placeholder="Выберите"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq32",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__controls
            key="controls"
            onApplyClick={[Function]}
            onClearClick={[Function]}
          >
            <div
              className="filters__controls"
              data-lego="react"
              style={Object {}}
            >
              <button2
                key="apply"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "apply",
                    "mods": Object {},
                  }
                }
                onClick={[Function]}
                size="m"
                tabIndex={0}
                theme="action"
                view="classic"
              >
                <button
                  aria-disabled="false"
                  aria-pressed="false"
                  autoComplete="off"
                  className="control button2 button2_view_classic button2_size_m button2_theme_action filters__apply"
                  data-lego="react"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyPress={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  style={Object {}}
                  tabIndex={0}
                  type="button"
                >
                  <button2__text
                    key="text"
                  >
                    <span
                      className="button2__text"
                      data-lego="react"
                      style={Object {}}
                    >
                      Применить
                    </span>
                  </button2__text>
                </button>
              </button2>
              <button2
                key="clear"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "clear",
                    "mods": Object {},
                  }
                }
                onClick={[Function]}
                size="m"
                tabIndex={0}
                theme="clear"
                view="classic"
              >
                <button
                  aria-disabled="false"
                  aria-pressed="false"
                  autoComplete="off"
                  className="control button2 button2_view_classic button2_size_m button2_theme_clear filters__clear"
                  data-lego="react"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyPress={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  style={Object {}}
                  tabIndex={0}
                  type="button"
                >
                  <button2__text
                    key="text"
                  >
                    <span
                      className="button2__text"
                      data-lego="react"
                      style={Object {}}
                    >
                      Сбросить фильтр
                    </span>
                  </button2__text>
                </button>
              </button2>
            </div>
          </filters__controls>
        </div>
      </filters__additional>
    </div>
  </filters>
</filters.container>
`;

exports[`FiltersContainer component shows and hides additional menu 2`] = `
<filters.container
  additionalFiltersKeys={
    Array [
      "ca_name",
      "requester",
      "host",
      "serial_number",
      "abc_service",
    ]
  }
  disableScroll={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
  enableScroll={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
  filterQueryStr={[MockFunction]}
  filtersKeys={
    Array [
      "type",
      "status",
      "user",
      "common_name",
      "ca_name",
      "requester",
      "host",
      "serial_number",
      "abc_service",
    ]
  }
  getFilters={
    [MockFunction] {
      "calls": Array [
        Array [],
        Array [],
        Array [],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "host",
            "requester": "requester",
            "serial_number": "serial_number",
            "status": "status",
            "type": "type",
            "user": "user",
          },
        },
        Object {
          "isThrow": false,
          "value": Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "host",
            "requester": "requester",
            "serial_number": "serial_number",
            "status": "status",
            "type": "type",
            "user": "user",
          },
        },
        Object {
          "isThrow": false,
          "value": Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "host",
            "requester": "requester",
            "serial_number": "serial_number",
            "status": "status",
            "type": "type",
            "user": "user",
          },
        },
      ],
    }
  }
  onApplyClick={[MockFunction]}
  onClearClick={[MockFunction]}
  onFilterChange={[MockFunction]}
  onToggleAdditionalFiltersClick={[MockFunction]}
  updateQueryStr={[MockFunction]}
>
  <filters
    additionalFiltersAppliedNum={5}
    filters={
      Object {
        "abc_service": "abc_service",
        "ca_name": "ca_name",
        "common_name": "common_name",
        "host": "host",
        "requester": "requester",
        "serial_number": "serial_number",
        "status": "status",
        "type": "type",
        "user": "user",
      }
    }
    getOnFilterChange={[Function]}
    isAdditionalFiltersVisible={false}
    onApplyClick={[Function]}
    onClearClick={[Function]}
    onToggleAdditionalFiltersClick={[Function]}
  >
    <div
      className="ta-component filters"
      data-lego="react"
      style={Object {}}
    >
      <filters__main
        additionalFiltersAppliedNum={5}
        filters={
          Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "host",
            "requester": "requester",
            "serial_number": "serial_number",
            "status": "status",
            "type": "type",
            "user": "user",
          }
        }
        getOnFilterChange={[Function]}
        isAdditionalFiltersVisible={false}
        key="main"
        onApplyClick={[Function]}
        onClearClick={[Function]}
        onToggleAdditionalFiltersClick={[Function]}
      >
        <div
          className="filters__main"
          data-lego="react"
          style={Object {}}
        >
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/cert_types/",
              }
            }
            key="filter-type"
            onChange={[Function]}
            placeholder="Тип"
            quick={true}
            single={true}
            text=""
            title=""
            type="suggest"
            value="type"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_quick"
              data-lego="react"
              style={Object {}}
            >
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/cert_types/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Тип"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "type",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/cert_types/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq19"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Тип"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "type",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq19"
                                placeholder="Тип"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq19"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Тип"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq19"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Тип"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq19"
                            onChange={[Function]}
                            placeholder="Тип"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq20",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/statuses/",
              }
            }
            key="filter-status"
            onChange={[Function]}
            placeholder="Статус"
            quick={true}
            single={true}
            text=""
            title=""
            type="suggest"
            value="status"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_quick"
              data-lego="react"
              style={Object {}}
            >
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/statuses/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Статус"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "status",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/statuses/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq21"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Статус"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "status",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq21"
                                placeholder="Статус"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq21"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Статус"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq21"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Статус"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq21"
                            onChange={[Function]}
                            placeholder="Статус"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq22",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/users/",
              }
            }
            key="filter-owner"
            onChange={[Function]}
            placeholder="Владелец"
            quick={true}
            single={true}
            type="suggest"
            value="user"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_quick"
              data-lego="react"
              style={Object {}}
            >
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/users/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Владелец"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "user",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/users/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq23"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Владелец"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "user",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq23"
                                placeholder="Владелец"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq23"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Владелец"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq23"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Владелец"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq23"
                            onChange={[Function]}
                            placeholder="Владелец"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq24",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            key="filter-cn"
            onChange={[Function]}
            placeholder="Common name"
            quick={true}
            type="textinput"
            value="common_name"
          >
            <div
              className="filters__filter filters__filter_quick filters__filter_type_textinput"
              data-lego="react"
              style={Object {}}
            >
              <textinput
                innerRef={[Function]}
                key="textinput"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "textinput",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Common name"
                size="m"
                text="common_name"
                theme="normal"
                type="text"
                view="classic"
              >
                <span
                  className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m filters__textinput"
                  data-lego="react"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  style={Object {}}
                >
                  <textinput__control
                    innerRef={[Function]}
                    key="control"
                    onChange={[Function]}
                    placeholder="Common name"
                    type="text"
                    value="common_name"
                  >
                    <input
                      className="textinput__control"
                      data-lego="react"
                      onChange={[Function]}
                      placeholder="Common name"
                      style={Object {}}
                      type="text"
                      value="common_name"
                    />
                  </textinput__control>
                  <textinput__box
                    key="box"
                  >
                    <span
                      className="textinput__box"
                      data-lego="react"
                      style={Object {}}
                    />
                  </textinput__box>
                </span>
              </textinput>
            </div>
          </filters__filter>
          <button2
            checked={false}
            key="button"
            mix={
              Object {
                "block": "filters",
                "elem": "toggle-additional",
                "mods": Object {},
              }
            }
            onClick={[Function]}
            size="m"
            tabIndex={0}
            theme="normal"
            type="check"
            view="classic"
          >
            <button
              aria-disabled="false"
              aria-pressed="false"
              autoComplete="off"
              className="control button2 button2_view_classic button2_size_m button2_theme_normal button2_type_check filters__toggle-additional"
              data-lego="react"
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyPress={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onMouseUp={[Function]}
              style={Object {}}
              tabIndex={0}
              type="button"
            >
              <button2__text
                key="text"
              >
                <span
                  className="button2__text"
                  data-lego="react"
                  style={Object {}}
                >
                  <filters__ticker
                    value={5}
                  >
                    <span
                      className="filters__ticker"
                      data-lego="react"
                      style={Object {}}
                    >
                      5
                    </span>
                  </filters__ticker>
                  Фильтр
                </span>
              </button2__text>
            </button>
          </button2>
        </div>
      </filters__main>
    </div>
  </filters>
</filters.container>
`;

exports[`FiltersContainer component updates url on plain text input filter changes 1`] = `
<filters.container
  additionalFiltersKeys={
    Array [
      "ca_name",
      "requester",
      "host",
      "serial_number",
      "abc_service",
    ]
  }
  disableScroll={[MockFunction]}
  enableScroll={[MockFunction]}
  filterQueryStr={[MockFunction]}
  filtersKeys={
    Array [
      "type",
      "status",
      "user",
      "common_name",
      "ca_name",
      "requester",
      "host",
      "serial_number",
      "abc_service",
    ]
  }
  getFilters={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "host",
            "requester": "requester",
            "serial_number": "serial_number",
            "status": "status",
            "type": "type",
            "user": "user",
          },
        },
      ],
    }
  }
  onApplyClick={[MockFunction]}
  onClearClick={[MockFunction]}
  onFilterChange={[MockFunction]}
  onToggleAdditionalFiltersClick={[MockFunction]}
  updateQueryStr={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "common_name": "brand new common name",
          },
        ],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
>
  <filters
    additionalFiltersAppliedNum={5}
    filters={
      Object {
        "abc_service": "abc_service",
        "ca_name": "ca_name",
        "common_name": "common_name",
        "host": "host",
        "requester": "requester",
        "serial_number": "serial_number",
        "status": "status",
        "type": "type",
        "user": "user",
      }
    }
    getOnFilterChange={[Function]}
    isAdditionalFiltersVisible={false}
    onApplyClick={[Function]}
    onClearClick={[Function]}
    onToggleAdditionalFiltersClick={[Function]}
  >
    <div
      className="ta-component filters"
      data-lego="react"
      style={Object {}}
    >
      <filters__main
        additionalFiltersAppliedNum={5}
        filters={
          Object {
            "abc_service": "abc_service",
            "ca_name": "ca_name",
            "common_name": "common_name",
            "host": "host",
            "requester": "requester",
            "serial_number": "serial_number",
            "status": "status",
            "type": "type",
            "user": "user",
          }
        }
        getOnFilterChange={[Function]}
        isAdditionalFiltersVisible={false}
        key="main"
        onApplyClick={[Function]}
        onClearClick={[Function]}
        onToggleAdditionalFiltersClick={[Function]}
      >
        <div
          className="filters__main"
          data-lego="react"
          style={Object {}}
        >
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/cert_types/",
              }
            }
            key="filter-type"
            onChange={[Function]}
            placeholder="Тип"
            quick={true}
            single={true}
            text=""
            title=""
            type="suggest"
            value="type"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_quick"
              data-lego="react"
              style={Object {}}
            >
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/cert_types/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Тип"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "type",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/cert_types/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq33"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Тип"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "type",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq33"
                                placeholder="Тип"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq33"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Тип"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq33"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Тип"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq33"
                            onChange={[Function]}
                            placeholder="Тип"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq34",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/statuses/",
              }
            }
            key="filter-status"
            onChange={[Function]}
            placeholder="Статус"
            quick={true}
            single={true}
            text=""
            title=""
            type="suggest"
            value="status"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_quick"
              data-lego="react"
              style={Object {}}
            >
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/statuses/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Статус"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "status",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/statuses/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq35"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Статус"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "status",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq35"
                                placeholder="Статус"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq35"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Статус"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq35"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Статус"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq35"
                            onChange={[Function]}
                            placeholder="Статус"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq36",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            dataprovider={
              Object {
                "pathname": "/api/frontend/suggest/users/",
              }
            }
            key="filter-owner"
            onChange={[Function]}
            placeholder="Владелец"
            quick={true}
            single={true}
            type="suggest"
            value="user"
          >
            <div
              className="filters__filter filters__filter_type_suggest filters__filter_quick"
              data-lego="react"
              style={Object {}}
            >
              <ta-suggest
                dataprovider={
                  Object {
                    "pathname": "/api/frontend/suggest/users/",
                  }
                }
                key="suggest"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "suggest-control",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Владелец"
                single={true}
                size="m"
                theme="normal"
                value={
                  Array [
                    "user",
                  ]
                }
              >
                <div
                  className="ta-component ta-suggest ta-suggest_size_m ta-suggest_load ta-suggest_single filters__suggest-control"
                  data-lego="react"
                  style={Object {}}
                >
                  <ta-suggest-control
                    dataprovider={
                      Object {
                        "pathname": "/api/frontend/suggest/users/",
                      }
                    }
                    empty={true}
                    fetchData={[Function]}
                    id="uniq37"
                    key="control"
                    mix={
                      Object {
                        "block": "ta-suggest",
                        "elem": "control",
                        "mods": Object {},
                      }
                    }
                    onChange={[Function]}
                    onSelect={[Function]}
                    placeholder="Владелец"
                    single={true}
                    size="m"
                    theme="normal"
                    value={
                      Array [
                        "user",
                      ]
                    }
                  >
                    <textinput
                      attrs={
                        Object {
                          "onClick": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <span
                              class="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                              data-lego="react"
                            >
                              <span
                                class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                              <input
                                autocomplete="off"
                                class="textinput__control"
                                data-lego="react"
                                id="uniq37"
                                placeholder="Владелец"
                                type="text"
                                value=""
                              />
                              <span
                                class="textinput__box"
                                data-lego="react"
                              />
                              <span
                                class="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                              />
                              <div
                                class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                data-lego="react"
                              />
                            </span>,
                          },
                        }
                      }
                      autocomplete={false}
                      content={true}
                      hasClear={true}
                      iconRight={
                        <icon
                          glyph="type-arrow"
                        />
                      }
                      id="uniq37"
                      innerRef={[Function]}
                      mix={
                        Array [
                          Object {
                            "block": "ta-suggest-control",
                            "mods": Object {
                              "__entities": Object {
                                "focused": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "load": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "open": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                                "size": Object {
                                  "ta-suggest-control$undefined": true,
                                },
                              },
                              "focused": false,
                              "load": false,
                              "open": false,
                              "size": "m",
                            },
                          },
                          Object {
                            "block": "ta-suggest",
                            "elem": "control",
                            "mods": Object {},
                          },
                        ]
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Владелец"
                      size="m"
                      text=""
                      theme="normal"
                      tone="default"
                      type="text"
                      view="classic"
                    >
                      <span
                        className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_m ta-suggest__control"
                        data-lego="react"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        style={Object {}}
                      >
                        <textinput__icon
                          key="right"
                          side="right"
                        >
                          <icon
                            glyph="type-arrow"
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {
                                    "__entities": Object {
                                      "side": Object {
                                        "textinput$icon": true,
                                      },
                                    },
                                    "side": "right",
                                  },
                                },
                                undefined,
                              ]
                            }
                          >
                            <span
                              className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 13 8"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                />
                              </svg>
                            </span>
                          </icon>
                        </textinput__icon>
                        <textinput__control
                          autoComplete="off"
                          id="uniq37"
                          innerRef={[Function]}
                          key="control"
                          onChange={[Function]}
                          placeholder="Владелец"
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="textinput__control"
                            data-lego="react"
                            id="uniq37"
                            onChange={[Function]}
                            placeholder="Владелец"
                            style={Object {}}
                            type="text"
                            value=""
                          />
                        </textinput__control>
                        <textinput__box
                          key="box"
                        >
                          <span
                            className="textinput__box"
                            data-lego="react"
                            style={Object {}}
                          />
                        </textinput__box>
                        <textinput__clear
                          key="clear"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          size="m"
                          theme="normal"
                          view="classic"
                          visible=""
                        >
                          <icon
                            attrs={
                              Object {
                                "onBlur": [Function],
                                "onClick": [Function],
                                "onFocus": [Function],
                                "onKeyDown": [Function],
                                "onKeyUp": [Function],
                                "onMouseDown": [Function],
                                "onMouseEnter": [Function],
                                "onMouseLeave": [Function],
                                "onMouseUp": [Function],
                              }
                            }
                            mix={
                              Array [
                                Object {
                                  "block": "textinput",
                                  "elem": "clear",
                                  "mods": Object {
                                    "__entities": Object {
                                      "disabled": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "focused": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "hovered": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "pressed": Object {
                                        "control$undefined": true,
                                        "textinput$clear": true,
                                      },
                                      "theme": Object {
                                        "textinput$clear": true,
                                      },
                                      "visible": Object {
                                        "textinput$clear": true,
                                      },
                                    },
                                    "disabled": false,
                                    "focused": false,
                                    "hovered": false,
                                    "pressed": false,
                                    "theme": "normal",
                                    "visible": false,
                                  },
                                },
                                Object {
                                  "block": "textinput",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="m"
                            type="cross"
                          >
                            <span
                              className="icon icon_type_cross icon_size_m textinput__clear textinput__clear_theme_normal textinput__icon"
                              data-lego="react"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              style={Object {}}
                            />
                          </icon>
                        </textinput__clear>
                        <ta-loading-progress
                          loadings={1}
                          mix={
                            Object {
                              "block": "ta-suggest-control",
                              "elem": "spin",
                              "mods": Object {},
                            }
                          }
                        >
                          <div
                            className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                            data-lego="react"
                            style={Object {}}
                          />
                        </ta-loading-progress>
                        <ta-suggest-control__popup
                          data={Array []}
                          getInputRef={[Function]}
                          init={false}
                          onCloseToListScrollEnd={[Function]}
                          onItemSelect={[Function]}
                          onOutsideClick={[Function]}
                          open={false}
                          size="m"
                        >
                          <popup2
                            anchor={[Function]}
                            attrs={
                              Object {
                                "onMouseDown": [Function],
                              }
                            }
                            autoclosable={true}
                            directions={
                              Array [
                                "bottom-left",
                                "top-left",
                              ]
                            }
                            mainOffset={2}
                            mix={
                              Array [
                                Object {
                                  "block": "ta-suggest-control",
                                  "elem": "popup",
                                  "mods": Object {
                                    "init": false,
                                    "size": "m",
                                  },
                                },
                                Object {
                                  "block": "uniq38",
                                  "mods": Object {},
                                },
                              ]
                            }
                            onAfterClose={[Function]}
                            onAfterOpen={[Function]}
                            onBeforeClose={[Function]}
                            onBeforeOpen={[Function]}
                            onOutsideClick={[Function]}
                            secondaryOffset={0}
                            tailOffset={0}
                            target="anchor"
                            theme="normal"
                            view="classic"
                            visible={false}
                            zIndexGroupLevel={0}
                          />
                        </ta-suggest-control__popup>
                      </span>
                    </textinput>
                  </ta-suggest-control>
                  <ta-suggest__footer
                    key="footer"
                    onClick={[Function]}
                    onItemDelete={[Function]}
                    values={Array []}
                  >
                    <div
                      className="ta-component ta-suggest__footer"
                      data-lego="react"
                      onMouseDown={[Function]}
                      style={Object {}}
                    />
                  </ta-suggest__footer>
                </div>
              </ta-suggest>
            </div>
          </filters__filter>
          <filters__filter
            key="filter-cn"
            onChange={[Function]}
            placeholder="Common name"
            quick={true}
            type="textinput"
            value="common_name"
          >
            <div
              className="filters__filter filters__filter_quick filters__filter_type_textinput"
              data-lego="react"
              style={Object {}}
            >
              <textinput
                innerRef={[Function]}
                key="textinput"
                mix={
                  Object {
                    "block": "filters",
                    "elem": "textinput",
                    "mods": Object {},
                  }
                }
                onChange={[Function]}
                placeholder="Common name"
                size="m"
                text="common_name"
                theme="normal"
                type="text"
                view="classic"
              >
                <span
                  className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m filters__textinput"
                  data-lego="react"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  style={Object {}}
                >
                  <textinput__control
                    innerRef={[Function]}
                    key="control"
                    onChange={[Function]}
                    placeholder="Common name"
                    type="text"
                    value="common_name"
                  >
                    <input
                      className="textinput__control"
                      data-lego="react"
                      onChange={[Function]}
                      placeholder="Common name"
                      style={Object {}}
                      type="text"
                      value="common_name"
                    />
                  </textinput__control>
                  <textinput__box
                    key="box"
                  >
                    <span
                      className="textinput__box"
                      data-lego="react"
                      style={Object {}}
                    />
                  </textinput__box>
                </span>
              </textinput>
            </div>
          </filters__filter>
          <button2
            checked={false}
            key="button"
            mix={
              Object {
                "block": "filters",
                "elem": "toggle-additional",
                "mods": Object {},
              }
            }
            onClick={[Function]}
            size="m"
            tabIndex={0}
            theme="normal"
            type="check"
            view="classic"
          >
            <button
              aria-disabled="false"
              aria-pressed="false"
              autoComplete="off"
              className="control button2 button2_view_classic button2_size_m button2_theme_normal button2_type_check filters__toggle-additional"
              data-lego="react"
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyPress={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onMouseUp={[Function]}
              style={Object {}}
              tabIndex={0}
              type="button"
            >
              <button2__text
                key="text"
              >
                <span
                  className="button2__text"
                  data-lego="react"
                  style={Object {}}
                >
                  <filters__ticker
                    value={5}
                  >
                    <span
                      className="filters__ticker"
                      data-lego="react"
                      style={Object {}}
                    >
                      5
                    </span>
                  </filters__ticker>
                  Фильтр
                </span>
              </button2__text>
            </button>
          </button2>
        </div>
      </filters__main>
    </div>
  </filters>
</filters.container>
`;
