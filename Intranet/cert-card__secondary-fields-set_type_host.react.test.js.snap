// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should contain a proper content 1`] = `
<cert-card__secondary-fields-set
  cert={
    Object {
      "abcServiceId": "100500",
      "added": "2018-06-28T19:37:53+03:00",
      "available_actions": Array [],
      "common_name": "remnev.ru",
      "id": "100500",
      "issued": "2018-06-28T19:37:53+03:00",
      "priv_key_deleted_at": "2018-06-28T19:37:53+03:00",
      "requester": "remnev",
      "tags": Array [
        Object {
          "is_active": true,
          "name": "a",
        },
        Object {
          "is_active": false,
          "name": "b",
        },
      ],
      "used_template": "template",
    }
  }
  onAbcServiceTooltipOutsideClick={[MockFunction]}
  type="host"
>
  <div
    className="cert-card__secondary-fields-set cert-card__secondary-fields-set_type_host"
    data-lego="react"
    style={Object {}}
  >
    <cert-card__fields
      fields={
        Array [
          Object {
            "data": Object {
              "cert": Object {
                "abcServiceId": "100500",
                "added": "2018-06-28T19:37:53+03:00",
                "available_actions": Array [],
                "common_name": "remnev.ru",
                "id": "100500",
                "issued": "2018-06-28T19:37:53+03:00",
                "priv_key_deleted_at": "2018-06-28T19:37:53+03:00",
                "requester": "remnev",
                "tags": Array [
                  Object {
                    "is_active": true,
                    "name": "a",
                  },
                  Object {
                    "is_active": false,
                    "name": "b",
                  },
                ],
                "used_template": "template",
              },
              "onAbcServiceTooltipOutsideClick": [MockFunction],
              "type": "host",
            },
            "slug": "issuee-abc-service",
            "type": "abc-service",
          },
          Object {
            "data": Array [],
            "slug": "hosts",
            "type": "list",
          },
        ]
      }
      key="fields-only-for-host"
    >
      <div
        className="cert-card__fields"
        data-lego="react"
        style={Object {}}
      >
        <cert-card__field
          fieldKey="issuee-abc-service"
          fieldVal={
            Object {
              "cert": Object {
                "abcServiceId": "100500",
                "added": "2018-06-28T19:37:53+03:00",
                "available_actions": Array [],
                "common_name": "remnev.ru",
                "id": "100500",
                "issued": "2018-06-28T19:37:53+03:00",
                "priv_key_deleted_at": "2018-06-28T19:37:53+03:00",
                "requester": "remnev",
                "tags": Array [
                  Object {
                    "is_active": true,
                    "name": "a",
                  },
                  Object {
                    "is_active": false,
                    "name": "b",
                  },
                ],
                "used_template": "template",
              },
              "onAbcServiceTooltipOutsideClick": [MockFunction],
              "type": "host",
            }
          }
          key="issuee-abc-service"
          type="abc-service"
        >
          <div
            className="cert-card__field"
            data-lego="react"
            style={Object {}}
          >
            <cert-card__field-key
              key="key"
              slug="issuee-abc-service"
            >
              <span
                className="cert-card__field-key"
                data-lego="react"
                style={Object {}}
              >
                ABC сервис
              </span>
            </cert-card__field-key>
            <cert-card__field-val
              data={
                Object {
                  "cert": Object {
                    "abcServiceId": "100500",
                    "added": "2018-06-28T19:37:53+03:00",
                    "available_actions": Array [],
                    "common_name": "remnev.ru",
                    "id": "100500",
                    "issued": "2018-06-28T19:37:53+03:00",
                    "priv_key_deleted_at": "2018-06-28T19:37:53+03:00",
                    "requester": "remnev",
                    "tags": Array [
                      Object {
                        "is_active": true,
                        "name": "a",
                      },
                      Object {
                        "is_active": false,
                        "name": "b",
                      },
                    ],
                    "used_template": "template",
                  },
                  "onAbcServiceTooltipOutsideClick": [MockFunction],
                  "type": "host",
                }
              }
              key="val"
              type="abc-service"
            >
              <span
                className="cert-card__field-val cert-card__field-val_type_abc-service"
                data-lego="react"
                style={Object {}}
              >
                <ta-suggest
                  dataprovider={
                    Object {
                      "pathname": "/api/frontend/suggest/abc_services/",
                    }
                  }
                  disabled={true}
                  key="suggest"
                  onChange={[Function]}
                  placeholder="Выберите"
                  single={true}
                  size="s"
                  theme="normal"
                  value={Array []}
                >
                  <div
                    className="ta-component ta-suggest ta-suggest_size_s ta-suggest_single"
                    data-lego="react"
                    style={Object {}}
                  >
                    <ta-suggest-control
                      dataprovider={
                        Object {
                          "pathname": "/api/frontend/suggest/abc_services/",
                        }
                      }
                      disabled={true}
                      empty={true}
                      fetchData={[Function]}
                      id="uniq1"
                      key="control"
                      mix={
                        Object {
                          "block": "ta-suggest",
                          "elem": "control",
                          "mods": Object {},
                        }
                      }
                      onChange={[Function]}
                      onSelect={[Function]}
                      placeholder="Выберите"
                      single={true}
                      size="s"
                      theme="normal"
                      value={Array []}
                    >
                      <textinput
                        attrs={
                          Object {
                            "onClick": [Function],
                            "onMouseDown": [Function],
                            "ref": Object {
                              "current": <span
                                class="control textinput control_disabled_yes textinput_disabled_yes textinput_theme_normal textinput_view_classic textinput_size_s textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_s ta-suggest__control"
                                data-lego="react"
                              >
                                <span
                                  class="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                  data-lego="react"
                                >
                                  <svg
                                    focusable="false"
                                    height="0"
                                    viewBox="0 0 13 8"
                                    width="0"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                    />
                                  </svg>
                                </span>
                                <input
                                  autocomplete="off"
                                  class="textinput__control"
                                  data-lego="react"
                                  disabled=""
                                  id="uniq1"
                                  placeholder="Выберите"
                                  type="text"
                                  value=""
                                />
                                <span
                                  class="textinput__box"
                                  data-lego="react"
                                />
                                <span
                                  class="icon icon_type_cross icon_size_s icon_disabled textinput__clear textinput__clear_disabled_yes textinput__clear_theme_normal textinput__icon"
                                  data-lego="react"
                                />
                                <div
                                  class="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                                  data-lego="react"
                                />
                              </span>,
                            },
                          }
                        }
                        autocomplete={false}
                        content={true}
                        disabled={true}
                        hasClear={true}
                        iconRight={
                          <icon
                            glyph="type-arrow"
                          />
                        }
                        id="uniq1"
                        innerRef={[Function]}
                        mix={
                          Array [
                            Object {
                              "block": "ta-suggest-control",
                              "mods": Object {
                                "__entities": Object {
                                  "focused": Object {
                                    "ta-suggest-control$undefined": true,
                                  },
                                  "load": Object {
                                    "ta-suggest-control$undefined": true,
                                  },
                                  "open": Object {
                                    "ta-suggest-control$undefined": true,
                                  },
                                  "size": Object {
                                    "ta-suggest-control$undefined": true,
                                  },
                                },
                                "focused": false,
                                "load": false,
                                "open": false,
                                "size": "s",
                              },
                            },
                            Object {
                              "block": "ta-suggest",
                              "elem": "control",
                              "mods": Object {},
                            },
                          ]
                        }
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        placeholder="Выберите"
                        size="s"
                        text=""
                        theme="normal"
                        tone="default"
                        type="text"
                        view="classic"
                      >
                        <span
                          className="control textinput control_disabled_yes textinput_disabled_yes textinput_theme_normal textinput_view_classic textinput_size_s textinput_has-icon_yes textinput_has-clear_yes ta-suggest-control ta-suggest-control_size_s ta-suggest__control"
                          data-lego="react"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          style={Object {}}
                        >
                          <textinput__icon
                            key="right"
                            side="right"
                          >
                            <icon
                              glyph="type-arrow"
                              mix={
                                Array [
                                  Object {
                                    "block": "textinput",
                                    "elem": "icon",
                                    "mods": Object {
                                      "__entities": Object {
                                        "side": Object {
                                          "textinput$icon": true,
                                        },
                                      },
                                      "side": "right",
                                    },
                                  },
                                  undefined,
                                ]
                              }
                            >
                              <span
                                className="icon icon_glyph_type-arrow icon_has-glyph_yes textinput__icon textinput__icon_side_right"
                                data-lego="react"
                                style={Object {}}
                              >
                                <svg
                                  focusable="false"
                                  height="0"
                                  viewBox="0 0 13 8"
                                  width="0"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.3 1L6.5 5.7 1.7 1l-.7.7L6.5 7 12 1.7l-.7-.7z"
                                  />
                                </svg>
                              </span>
                            </icon>
                          </textinput__icon>
                          <textinput__control
                            autoComplete="off"
                            disabled={true}
                            id="uniq1"
                            innerRef={[Function]}
                            key="control"
                            placeholder="Выберите"
                            type="text"
                            value=""
                          >
                            <input
                              autoComplete="off"
                              className="textinput__control"
                              data-lego="react"
                              disabled={true}
                              id="uniq1"
                              placeholder="Выберите"
                              style={Object {}}
                              type="text"
                              value=""
                            />
                          </textinput__control>
                          <textinput__box
                            key="box"
                          >
                            <span
                              className="textinput__box"
                              data-lego="react"
                              style={Object {}}
                            />
                          </textinput__box>
                          <textinput__clear
                            disabled={true}
                            key="clear"
                            onClick={[Function]}
                            onMouseDown={[Function]}
                            size="s"
                            theme="normal"
                            view="classic"
                            visible=""
                          >
                            <icon
                              attrs={
                                Object {
                                  "onBlur": undefined,
                                  "onClick": undefined,
                                  "onFocus": undefined,
                                  "onKeyDown": undefined,
                                  "onKeyUp": undefined,
                                  "onMouseDown": undefined,
                                  "onMouseEnter": undefined,
                                  "onMouseLeave": undefined,
                                  "onMouseUp": undefined,
                                }
                              }
                              disabled={true}
                              mix={
                                Array [
                                  Object {
                                    "block": "textinput",
                                    "elem": "clear",
                                    "mods": Object {
                                      "__entities": Object {
                                        "disabled": Object {
                                          "control$undefined": true,
                                          "textinput$clear": true,
                                        },
                                        "focused": Object {
                                          "control$undefined": true,
                                          "textinput$clear": true,
                                        },
                                        "hovered": Object {
                                          "control$undefined": true,
                                          "textinput$clear": true,
                                        },
                                        "pressed": Object {
                                          "control$undefined": true,
                                          "textinput$clear": true,
                                        },
                                        "theme": Object {
                                          "textinput$clear": true,
                                        },
                                        "visible": Object {
                                          "textinput$clear": true,
                                        },
                                      },
                                      "disabled": "yes",
                                      "focused": undefined,
                                      "hovered": undefined,
                                      "pressed": undefined,
                                      "theme": "normal",
                                      "visible": false,
                                    },
                                  },
                                  Object {
                                    "block": "textinput",
                                    "elem": "icon",
                                    "mods": Object {},
                                  },
                                ]
                              }
                              size="s"
                              type="cross"
                            >
                              <span
                                className="icon icon_type_cross icon_size_s icon_disabled textinput__clear textinput__clear_disabled_yes textinput__clear_theme_normal textinput__icon"
                                data-lego="react"
                                style={Object {}}
                              />
                            </icon>
                          </textinput__clear>
                          <ta-loading-progress
                            loadings={1}
                            mix={
                              Object {
                                "block": "ta-suggest-control",
                                "elem": "spin",
                                "mods": Object {},
                              }
                            }
                          >
                            <div
                              className="ta-component ta-loading-progress ta-loading-progress_progress ta-suggest-control__spin"
                              data-lego="react"
                              style={Object {}}
                            />
                          </ta-loading-progress>
                          <ta-suggest-control__popup
                            data={Array []}
                            getInputRef={[Function]}
                            init={false}
                            onCloseToListScrollEnd={[Function]}
                            onItemSelect={[Function]}
                            onOutsideClick={[Function]}
                            open={false}
                            size="s"
                          >
                            <popup2
                              anchor={[Function]}
                              attrs={
                                Object {
                                  "onMouseDown": [Function],
                                }
                              }
                              autoclosable={true}
                              directions={
                                Array [
                                  "bottom-left",
                                  "top-left",
                                ]
                              }
                              mainOffset={2}
                              mix={
                                Array [
                                  Object {
                                    "block": "ta-suggest-control",
                                    "elem": "popup",
                                    "mods": Object {
                                      "init": false,
                                      "size": "s",
                                    },
                                  },
                                  Object {
                                    "block": "uniq2",
                                    "mods": Object {},
                                  },
                                ]
                              }
                              onAfterClose={[Function]}
                              onAfterOpen={[Function]}
                              onBeforeClose={[Function]}
                              onBeforeOpen={[Function]}
                              onOutsideClick={[Function]}
                              secondaryOffset={0}
                              tailOffset={0}
                              target="anchor"
                              theme="normal"
                              view="classic"
                              visible={false}
                              zIndexGroupLevel={0}
                            />
                          </ta-suggest-control__popup>
                        </span>
                      </textinput>
                    </ta-suggest-control>
                    <ta-suggest__footer
                      key="footer"
                      onClick={[Function]}
                      onItemDelete={[Function]}
                      values={Array []}
                    >
                      <div
                        className="ta-component ta-suggest__footer"
                        data-lego="react"
                        onMouseDown={[Function]}
                        style={Object {}}
                      />
                    </ta-suggest__footer>
                  </div>
                </ta-suggest>
                <tooltip
                  anchor={[Function]}
                  autoclosable={true}
                  key="tooltip"
                  onOutsideClick={[MockFunction]}
                  size="s"
                  tail={true}
                  theme="error"
                  to="left"
                  view="classic"
                  visible={false}
                >
                  <popup2
                    anchor={[Function]}
                    autoclosable={true}
                    directions={
                      Array [
                        "left-center",
                      ]
                    }
                    mix={
                      Array [
                        Object {
                          "block": "tooltip",
                          "mods": Object {
                            "__entities": Object {
                              "autoclosable": Object {
                                "tooltip$undefined": true,
                              },
                              "hovered": Object {
                                "tooltip$undefined": true,
                              },
                              "size": Object {
                                "tooltip$undefined": true,
                              },
                              "theme": Object {
                                "tooltip$undefined": true,
                              },
                              "tone": Object {
                                "tooltip$undefined": true,
                              },
                              "view": Object {
                                "tooltip$undefined": true,
                              },
                            },
                            "autoclosable": true,
                            "hovered": false,
                            "size": "s",
                            "theme": "error",
                            "tone": undefined,
                            "view": "classic",
                          },
                        },
                      ]
                    }
                    onAfterClose={[Function]}
                    onAfterOpen={[Function]}
                    onBeforeClose={[Function]}
                    onBeforeOpen={[Function]}
                    onMouseOver={[Function]}
                    onOutsideClick={[MockFunction]}
                    secondaryOffset={0}
                    tailOffset={0}
                    target="anchor"
                    theme="normal"
                    view="classic"
                    visible={false}
                    zIndexGroupLevel={0}
                  />
                </tooltip>
              </span>
            </cert-card__field-val>
          </div>
        </cert-card__field>
        <cert-card__field
          fieldKey="hosts"
          fieldVal={Array []}
          key="hosts"
          type="list"
        >
          <div
            className="cert-card__field"
            data-lego="react"
            style={Object {}}
          >
            <cert-card__field-key
              key="key"
              slug="hosts"
            >
              <span
                className="cert-card__field-key"
                data-lego="react"
                style={Object {}}
              >
                Хосты
              </span>
            </cert-card__field-key>
            <cert-card__field-val
              data={Array []}
              key="val"
              type="list"
            >
              <span
                className="cert-card__field-val cert-card__field-val_type_list"
                data-lego="react"
                style={Object {}}
              >
                —
              </span>
            </cert-card__field-val>
          </div>
        </cert-card__field>
      </div>
    </cert-card__fields>
    <cert-card__fields
      fields={
        Array [
          Object {
            "data": "remnev.ru",
            "slug": "cn",
            "type": "text",
          },
          Object {
            "data": "100500",
            "slug": "id",
            "type": "text",
          },
        ]
      }
      key="fields-one"
    >
      <div
        className="cert-card__fields"
        data-lego="react"
        style={Object {}}
      >
        <cert-card__field
          fieldKey="cn"
          fieldVal="remnev.ru"
          key="cn"
          type="text"
        >
          <div
            className="cert-card__field"
            data-lego="react"
            style={Object {}}
          >
            <cert-card__field-key
              key="key"
              slug="cn"
            >
              <span
                className="cert-card__field-key"
                data-lego="react"
                style={Object {}}
              >
                CN
              </span>
            </cert-card__field-key>
            <cert-card__field-val
              data="remnev.ru"
              key="val"
              type="text"
            >
              <span
                className="cert-card__field-val cert-card__field-val_type_text"
                data-lego="react"
                style={Object {}}
              >
                remnev.ru
              </span>
            </cert-card__field-val>
          </div>
        </cert-card__field>
        <cert-card__field
          fieldKey="id"
          fieldVal="100500"
          key="id"
          type="text"
        >
          <div
            className="cert-card__field"
            data-lego="react"
            style={Object {}}
          >
            <cert-card__field-key
              key="key"
              slug="id"
            >
              <span
                className="cert-card__field-key"
                data-lego="react"
                style={Object {}}
              >
                ID
              </span>
            </cert-card__field-key>
            <cert-card__field-val
              data="100500"
              key="val"
              type="text"
            >
              <span
                className="cert-card__field-val cert-card__field-val_type_text"
                data-lego="react"
                style={Object {}}
              >
                100500
              </span>
            </cert-card__field-val>
          </div>
        </cert-card__field>
      </div>
    </cert-card__fields>
    <cert-card__fields
      fields={
        Array [
          Object {
            "data": undefined,
            "slug": "issuer",
            "type": "user",
          },
          Object {
            "data": "2018-06-28T19:37:53+03:00",
            "slug": "issued-at",
            "type": "date",
          },
          Object {
            "data": "2018-06-28T19:37:53+03:00",
            "slug": "granted-at",
            "type": "date",
          },
          Object {
            "data": "2018-06-28T19:37:53+03:00",
            "slug": "private-key-deleted-at",
            "type": "date",
          },
          Object {
            "data": undefined,
            "slug": "ticket",
            "type": "ticket",
          },
        ]
      }
      key="fields-two"
    >
      <div
        className="cert-card__fields"
        data-lego="react"
        style={Object {}}
      >
        <cert-card__field
          fieldKey="issuer"
          key="issuer"
          type="user"
        >
          <div
            className="cert-card__field"
            data-lego="react"
            style={Object {}}
          >
            <cert-card__field-key
              key="key"
              slug="issuer"
            >
              <span
                className="cert-card__field-key"
                data-lego="react"
                style={Object {}}
              >
                Запросивший
              </span>
            </cert-card__field-key>
            <cert-card__field-val
              key="val"
              type="user"
            >
              <span
                className="cert-card__field-val cert-card__field-val_type_user"
                data-lego="react"
                style={Object {}}
              >
                —
              </span>
            </cert-card__field-val>
          </div>
        </cert-card__field>
        <cert-card__field
          fieldKey="issued-at"
          fieldVal="2018-06-28T19:37:53+03:00"
          key="issued-at"
          type="date"
        >
          <div
            className="cert-card__field"
            data-lego="react"
            style={Object {}}
          >
            <cert-card__field-key
              key="key"
              slug="issued-at"
            >
              <span
                className="cert-card__field-key"
                data-lego="react"
                style={Object {}}
              >
                Дата запроса
              </span>
            </cert-card__field-key>
            <cert-card__field-val
              data="2018-06-28T19:37:53+03:00"
              key="val"
              type="date"
            >
              <span
                className="cert-card__field-val cert-card__field-val_type_date"
                data-lego="react"
                style={Object {}}
              >
                28 Jun 2018, 19:37
              </span>
            </cert-card__field-val>
          </div>
        </cert-card__field>
        <cert-card__field
          fieldKey="granted-at"
          fieldVal="2018-06-28T19:37:53+03:00"
          key="granted-at"
          type="date"
        >
          <div
            className="cert-card__field"
            data-lego="react"
            style={Object {}}
          >
            <cert-card__field-key
              key="key"
              slug="granted-at"
            >
              <span
                className="cert-card__field-key"
                data-lego="react"
                style={Object {}}
              >
                Когда выдан
              </span>
            </cert-card__field-key>
            <cert-card__field-val
              data="2018-06-28T19:37:53+03:00"
              key="val"
              type="date"
            >
              <span
                className="cert-card__field-val cert-card__field-val_type_date"
                data-lego="react"
                style={Object {}}
              >
                28 Jun 2018, 19:37
              </span>
            </cert-card__field-val>
          </div>
        </cert-card__field>
        <cert-card__field
          fieldKey="private-key-deleted-at"
          fieldVal="2018-06-28T19:37:53+03:00"
          key="private-key-deleted-at"
          type="date"
        >
          <div
            className="cert-card__field"
            data-lego="react"
            style={Object {}}
          >
            <cert-card__field-key
              key="key"
              slug="private-key-deleted-at"
            >
              <span
                className="cert-card__field-key"
                data-lego="react"
                style={Object {}}
              >
                Дата удаления приватного ключа
              </span>
            </cert-card__field-key>
            <cert-card__field-val
              data="2018-06-28T19:37:53+03:00"
              key="val"
              type="date"
            >
              <span
                className="cert-card__field-val cert-card__field-val_type_date"
                data-lego="react"
                style={Object {}}
              >
                28 Jun 2018, 19:37
              </span>
            </cert-card__field-val>
          </div>
        </cert-card__field>
        <cert-card__field
          fieldKey="ticket"
          key="ticket"
          type="ticket"
        >
          <div
            className="cert-card__field"
            data-lego="react"
            style={Object {}}
          >
            <cert-card__field-key
              key="key"
              slug="ticket"
            >
              <span
                className="cert-card__field-key"
                data-lego="react"
                style={Object {}}
              >
                Тикет
              </span>
            </cert-card__field-key>
            <cert-card__field-val
              key="val"
              type="ticket"
            >
              <span
                className="cert-card__field-val cert-card__field-val_type_ticket"
                data-lego="react"
                style={Object {}}
              >
                —
              </span>
            </cert-card__field-val>
          </div>
        </cert-card__field>
      </div>
    </cert-card__fields>
    <cert-card__fields
      fields={
        Array [
          Object {
            "data": "template",
            "slug": "template",
            "type": "text",
          },
          Object {
            "data": Array [
              Object {
                "is_active": true,
                "name": "a",
              },
              Object {
                "is_active": false,
                "name": "b",
              },
            ],
            "slug": "tags",
            "type": "tags",
          },
        ]
      }
      key="fields-four"
    >
      <div
        className="cert-card__fields"
        data-lego="react"
        style={Object {}}
      >
        <cert-card__field
          fieldKey="template"
          fieldVal="template"
          key="template"
          type="text"
        >
          <div
            className="cert-card__field"
            data-lego="react"
            style={Object {}}
          >
            <cert-card__field-key
              key="key"
              slug="template"
            >
              <span
                className="cert-card__field-key"
                data-lego="react"
                style={Object {}}
              >
                Шаблон
              </span>
            </cert-card__field-key>
            <cert-card__field-val
              data="template"
              key="val"
              type="text"
            >
              <span
                className="cert-card__field-val cert-card__field-val_type_text"
                data-lego="react"
                style={Object {}}
              >
                template
              </span>
            </cert-card__field-val>
          </div>
        </cert-card__field>
        <cert-card__field
          fieldKey="tags"
          fieldVal={
            Array [
              Object {
                "is_active": true,
                "name": "a",
              },
              Object {
                "is_active": false,
                "name": "b",
              },
            ]
          }
          key="tags"
          type="tags"
        >
          <div
            className="cert-card__field"
            data-lego="react"
            style={Object {}}
          >
            <cert-card__field-key
              key="key"
              slug="tags"
            >
              <span
                className="cert-card__field-key"
                data-lego="react"
                style={Object {}}
              >
                Теги
              </span>
            </cert-card__field-key>
            <cert-card__field-val
              data={
                Array [
                  Object {
                    "is_active": true,
                    "name": "a",
                  },
                  Object {
                    "is_active": false,
                    "name": "b",
                  },
                ]
              }
              key="val"
              type="tags"
            >
              <span
                className="cert-card__field-val cert-card__field-val_type_tags"
                data-lego="react"
                style={Object {}}
              >
                a
              </span>
            </cert-card__field-val>
          </div>
        </cert-card__field>
      </div>
    </cert-card__fields>
  </div>
</cert-card__secondary-fields-set>
`;
