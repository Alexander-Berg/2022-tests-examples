syntax = "proto3";

package Tasklet.Test;

import "tasklet/api/mem.proto";
import "tasklet/api/sched.proto";
import "tasklet/api/tasklet.proto";

message Input {
  int32 a = 1;
  int32 b = 2;
}

message Output {
  int32 c = 1;
}

message SumTask {
  option (tasklet.tasklet_interface) = true;
  Input input = 1 [(tasklet.input) = true];
  Output output = 2 [(tasklet.output) = true];
  tasklet.Requirements requirements = 3;
}

message ProductTask {
  option (tasklet.tasklet_interface) = true;
  Input input = 1 [(tasklet.input) = true];
  Output output = 2 [(tasklet.output) = true];
  tasklet.Requirements requirements = 3;
}

message CompareTask {
  option (tasklet.tasklet_interface) = true;
  Input input = 1 [(tasklet.input) = true];
  Output output = 2 [(tasklet.output) = true];
  tasklet.Requirements requirements = 3;
}

// XXX automagically inject default ctx ???

message AwaitContext {
  option (tasklet.context) = true;
  option (tasklet.py_adapter) = "tasklet.domain.adapter:Context";
  string id = 1 [(tasklet.inject) = true];
  tasklet.SchedulerService sched = 2 [(tasklet.inject) = true];
  tasklet.MemoryService mem = 3 [(tasklet.inject) = true];
}

message AwaitTask {
  option (tasklet.tasklet_interface) = true;
  Input input = 1 [(tasklet.input) = true];
  Output output = 2 [(tasklet.output) = true];
  tasklet.Requirements requirements = 3;
  AwaitContext ctx = 4;
}

message CheckIdInput {
  bool is_child = 1;
}

message CheckIdOutput {
  string result = 2;
}

message CheckIdTask {
  option (tasklet.tasklet_interface) = true;
  CheckIdInput input = 1 [(tasklet.input) = true];
  CheckIdOutput output = 2 [(tasklet.output) = true];
  tasklet.Requirements requirements = 3;
  AwaitContext ctx = 4;
}
