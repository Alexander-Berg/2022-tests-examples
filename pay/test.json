{
  "meta": {
    "name": "Generate MonthClosing Nirvana Graph",
    "versionNumber": "1.0",
    "description": "",
    "deterministic": false,
    "processorCode": "job",
    "processorOperationCode": "run",
    "owner": "electricsheep"
  },
  "inputs": [
    {
      "name": "executable",
      "description": "",
      "dataTypes": [
        "executable"
      ],
      "lowerBound": 1,
      "upperBound": 1,
      "processingHints": []
    },
    {
      "name": "tasks.json",
      "description": "",
      "dataTypes": [
        "json"
      ],
      "lowerBound": 1,
      "upperBound": 1,
      "processingHints": [],
      "fileName": "parameters.json"
    },
    {
      "name": "test_graph_override.json",
      "description": "",
      "dataTypes": [
        "json"
      ],
      "lowerBound": 0,
      "upperBound": 1,
      "processingHints": [],
      "fileName": "test_graph_override.json"
    },
    {
      "name": "config.json",
      "description": "",
      "dataTypes": [
        "json"
      ],
      "lowerBound": 1,
      "upperBound": 1,
      "processingHints": []
    }
  ],
  "outputs": [
    {
      "name": "workflow_instance.json",
      "description": "",
      "dataType": "json",
      "processingHints": [],
      "optional": false,
      "snapshot": false
    },
    {
      "name": "workflow.json",
      "description": "",
      "dataType": "json",
      "processingHints": [],
      "optional": false,
      "snapshot": false
    }
  ],
  "parameters": [
    {
      "parameter": "job-command",
      "description": "Job command line template. The template is written in [Freemarker Template Language](http://freemarker.org), using square bracket syntax.\n* Substitute absolute paths to input data with `${input[\"<input's name>\"]}`.\n* Substitute absolute paths to output data with `${output[\"<output's name>\"]}`.\n* Substitute required options' values with `${param[\"<option's name>\"]}`.\n* Substitute optional options' values with `${param[\"<option's name>\"]!<default value>}`.\n* Remember to quote options of type `String` when passing them as command line arguments:\n  * Shell-quote a single command line argument using `${param[\"string option\"].bash}`.\n  * Shell-quote a string of command line arguments using `${param[\"string option\"].args}`.\n* If you need pipes (`|`) and redirection (`< > >>`):\n  * Write `bash -c '<your command>'`\n  * OR Write a [ba]sh script, specify it as the job's binary (`job-binary-url`) and run it as `./your_script_name`.\n* See https://nda.ya.ru/3QnJYz for more information.",
      "type": "string",
      "required": true,
      "defaultValue": "${input[\"executable\"]}",
      "cacheInsensitive": false
    },
    {
      "parameter": "gpu-type",
      "description": "Type of GPU required for the job to run. Defaults to `No GPU` (`NONE`).",
      "type": "enum",
      "required": false,
      "defaultValue": "NONE",
      "extra": {
        "items": [
          {
            "label": "No GPU",
            "value": "NONE"
          },
          {
            "label": "Any GPU",
            "value": "ANY"
          },
          {
            "label": "CUDA GPU",
            "value": "CUDA_ANY"
          },
          {
            "label": "CUDA 2.0 GPU",
            "value": "CUDA_2_0"
          },
          {
            "label": "CUDA 2.1 GPU",
            "value": "CUDA_2_1"
          },
          {
            "label": "CUDA 3.0 GPU",
            "value": "CUDA_3_0"
          },
          {
            "label": "CUDA 3.2 GPU",
            "value": "CUDA_3_2"
          },
          {
            "label": "CUDA 3.5 GPU",
            "value": "CUDA_3_5"
          },
          {
            "label": "CUDA 3.7 GPU",
            "value": "CUDA_3_7"
          },
          {
            "label": "CUDA 5.0 GPU",
            "value": "CUDA_5_0"
          },
          {
            "label": "CUDA 5.2 GPU",
            "value": "CUDA_5_2"
          },
          {
            "label": "CUDA 6.1 GPU",
            "value": "CUDA_6_1"
          }
        ],
        "@type": "DumpedParameterTypeSpecificEnum"
      },
      "cacheInsensitive": false
    },
    {
      "parameter": "nirvana_token",
      "description": "",
      "type": "secret",
      "required": true,
      "label": "Nirvana OAuth token",
      "tooltip": "",
      "cacheInsensitive": false
    },
    {
      "parameter": "nirvana_token_name",
      "description": "",
      "type": "string",
      "required": true,
      "defaultValue": "robot_test_mnclose_nirvana_token",
      "label": "Nirvana OAuth secret name",
      "tooltip": "",
      "cacheInsensitive": false
    },
    {
      "parameter": "nirvana_server",
      "type": "string",
      "required": true,
      "defaultValue": "test.nirvana.yandex-team.ru",
      "label": "Nirvana server",
      "tooltip": "",
      "cacheInsensitive": false
    },
    {
      "parameter": "month",
      "type": "string",
      "required": true,
      "label": "Month, 08.19",
      "tooltip": "",
      "cacheInsensitive": false
    },
    {
      "parameter": "generation",
      "type": "integer",
      "required": true,
      "defaultValue": 0,
      "label": "Generation",
      "cacheInsensitive": false
    },
    {
      "parameter": "project_id",
      "description": "",
      "type": "string",
      "required": false,
      "label": "Project Id",
      "cacheInsensitive": false
    },
    {
      "parameter": "workflow_label",
      "type": "string",
      "required": false,
      "label": "Workflow label",
      "cacheInsensitive": false
    },
    {
      "parameter": "workflow_id",
      "description": "",
      "type": "string",
      "required": false,
      "label": "Workflow Id",
      "cacheInsensitive": false
    },
    {
      "parameter": "fcm_environment",
      "type": "enum",
      "required": true,
      "defaultValue": "test",
      "label": "FCM Environment (prod - прод, test - тест)",
      "tooltip": "",
      "cacheInsensitive": false,
      "extra": {
        "items": [
          {
            "label": "dev",
            "value": "dev"
          },
          {
            "label": "test",
            "value": "test"
          },
          {
            "label": "prod",
            "value": "prod"
          }
        ],
        "@type": "DumpedParameterTypeSpecificEnum"
      }
    },
    {
      "parameter": "fcm_tvm_src_id",
      "type": "integer",
      "required": true,
      "defaultValue": 2015305,
      "label": "FCM TVM Source Id (2015311 - прод, 2015305 - тест)",
      "cacheInsensitive": false
    },
    {
      "parameter": "fcm_tvm_dst_id",
      "type": "integer",
      "required": true,
      "defaultValue": 2014198,
      "label": "FCM TVM Destination Id (2014200 - прод, 2014198 - тест)",
      "cacheInsensitive": false
    },
    {
      "parameter": "fcm_tvm_token_name",
      "type": "string",
      "required": true,
      "defaultValue": "fcm_mnclose_nirvana_intergation_test_tvm_secret",
      "label": "FCM TVM Token name",
      "tooltip": "Имя секрета с TVM токеном",
      "cacheInsensitive": false
    },
    {
      "parameter": "startrek_token_name",
      "type": "string",
      "required": true,
      "defaultValue": "robot_test_mnclose_st_token",
      "label": "StarTrek OAuth secret name",
      "cacheInsensitive": false
    },
    {
      "parameter": "startrek_environment",
      "type": "enum",
      "required": true,
      "defaultValue": "SANDBOX",
      "label": "StarTrek environment (PRODUCTION - прод, SANDBOX - тест)",
      "cacheInsensitive": false,
      "extra": {
        "items": [
          {
            "label": "SANDBOX",
            "value": "SANDBOX"
          },
          {
            "label": "PRODUCTION",
            "value": "PRODUCTION"
          }
        ],
        "@type": "DumpedParameterTypeSpecificEnum"
      }
    },
    {
      "parameter": "startrek_notify_recipients",
      "type": "multiple_strings",
      "required": true,
      "label": "Список получателей оповещений о тикетах в StarTrek",
      "cacheInsensitive": false
    },
    {
      "parameter": "with_offsets",
      "description": "",
      "type": "boolean",
      "required": true,
      "defaultValue": false,
      "label": "create offset operations",
      "tooltip": "",
      "cacheInsensitive": false
    },
    {
      "parameter": "execution_timestamp",
      "description": "",
      "type": "date",
      "required": true,
      "label": "execution_timestamp",
      "tooltip": "",
      "cacheInsensitive": false
    },
    {
      "parameter": "arcadia_revision",
      "description": "",
      "type": "integer",
      "required": false,
      "label": "arcadia_revision",
      "tooltip": "",
      "cacheInsensitive": false
    },
    {
      "parameter": "checkout_arcadia_from_url",
      "description": "",
      "type": "string",
      "required": false,
      "label": "checkout_arcadia_from_url",
      "tooltip": "",
      "cacheInsensitive": false
    },
    {
      "parameter": "tariff_cluster",
      "description": "",
      "type": "enum",
      "required": true,
      "defaultValue": "hahn",
      "extra": {
        "items": [
          {
            "label": "hahn",
            "value": "hahn"
          },
          {
            "label": "arnold",
            "value": "arnold"
          }
        ],
        "@type": "DumpedParameterTypeSpecificEnum"
      },
      "label": "tariff_cluster",
      "tooltip": "",
      "cacheInsensitive": false
    }
  ],
  "permissions": [
    {
      "action": "execute",
      "roles": [
        {
          "role": "nirvana.operation.billing"
        }
      ]
    },
    {
      "action": "read",
      "roles": [
        {
          "role": "nirvana.user.yandex.staff"
        }
      ]
    },
    {
      "action": "modify",
      "roles": [
        {
          "role": "nirvana.operation.billing"
        }
      ]
    }
  ]
}