{
    "layer_spec" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyResource",
                        "checksum": "EMPTY:",
                        "url": "raw:some_data"
                    }
                ]
            }
        }
    },
    "layer_bad_name_spec" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyResource",
                        "checksum": "MD5:e6ce355228c4bed4f872b1347cd308df",
                        "url": "rbtorrent:12ba69cf9cb210ada9721c6073f47806ed3ae2ab"
                    }
                ]
            }
        }
    },
    "other_layer_spec" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 2,
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyResource",
                        "checksum": "EMPTY:",
                        "url": "raw:some_other_data"
                    }
                ]
            }
        }
    },
    "static_resource_spec" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "resources": {
                "static_resources": [
                    {
                        "id": "MyResource",
                        "verification": {
                            "checksum": "EMPTY:",
                            "check_period_ms": 180000
                        },
                        "url": "raw:some_data"
                    }
                ]
            }
        }
    },
    "volume_spec" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "resources": {
                "layers": [
                    {
                        "id": "Layer_TestVolumeSpec_resource",
                        "checksum": "MD5:b7e9081350a579d73d52f60d6fd11d11",
                        "url": "local:layer_small_data_0/layer.tar.gz"
                    }
                ],
                "static_resources": [
                    {
                        "id": "MyResource",
                        "url": "raw:some_data",
                        "verification": {
                            "checksum": "EMPTY:",
                            "check_period_ms": 180000
                        }
                    }
                ]
            },
            "volumes": [
                {
                    "id": "TestVolumeSpec_volume",
                    "generic": {
                        "layer_refs": ["Layer_TestVolumeSpec_resource"]
                    },
                    "static_resources": [
                        {
                            "resource_ref": "MyResource",
                            "volume_relative_mount_point": "/static_resource"
                        }
                    ]
                }
            ]
        }
    },
    "workload_spec" : {
        "spec_timestamp": 1,
        "resource_requests": {
            "memory_guarantee": 33554432,
            "memory_limit": 67108864,
            "vcpu_guarantee": 200,
            "vcpu_limit": 400
        },
        "ip6_address_allocations": [
            {
                "transient_fqdn": "man3-0442-1.man3-0442-node-hume.man-pre.yp-c.yandex.net",
                "labels": {
                    "attributes": [
                        {
                            "key": "label_key",
                            "value": "label_value"
                        }
                    ]
                },
                "persistent_fqdn": "man3-0442-node-hume.man-pre.yp-c.yandex.net",
                "vlan_id": "backbone",
                "address": "2a02:6b8:c0a:1808:10d:2342:42d5:0",
                "internet_address": {
                    "id": "test_id",
                    "ip4_address": "ip4_test"
                },
                "virtual_services": [
                    {
                        "ip6_addresses": [
                            "ip6_test1",
                            "ip6_test2"
                        ],
                        "ip4_addresses": [
                            "ip4_test1",
                            "ip4_test2"
                        ]
                    },
                    {
                        "ip6_addresses": [
                            "ip6_test3"
                        ],
                        "ip4_addresses": [
                            "ip4_test3"
                        ]
                    }
                ]
            },
            {
                "transient_fqdn": "fb-man3-0442-1.man3-0442-node-hume.man-pre.yp-c.yandex.net",
                "persistent_fqdn": "fb-man3-0442-node-hume.man-pre.yp-c.yandex.net",
                "vlan_id": "fastbone",
                "address": "2a02:6b8:fc12:1808:10d:2342:b557:0"
            }
        ],
        "disk_volume_allocations": [
            {
                "id": "pod-agent-test-stage-on-sas-test-allocation",
                "labels": {},
                "capacity": 5368709120,
                "resource_id": "disk-place-sas2-6807-search-yandex-net",
                "volume_id": "824bf042-ca1ceb9f-4aaff001-ac035535",
                "device": "/place",
                "read_bandwidth_guarantee": 0,
                "read_bandwidth_limit": 0,
                "write_bandwidth_guarantee": 0,
                "write_bandwidth_limit": 0,
                "read_operation_rate_guarantee": 0,
                "read_operation_rate_limit": 0,
                "write_operation_rate_guarantee": 0,
                "write_operation_rate_limit": 0
            },
            {
                "id": "pod_agent",
                "labels": {
                    "attributes": [
                        {
                            "key": "used_by_infra",
                            "value": "%true"
                        }
                    ]
                },
                "capacity": 1073741824,
                "resource_id": "disk-place-sas2-6807-search-yandex-net",
                "volume_id": "824bf043-8c3e41b-867308fc-1130aa43",
                "device": "/place",
                "read_bandwidth_guarantee": 0,
                "read_bandwidth_limit": 0,
                "write_bandwidth_guarantee": 0,
                "write_bandwidth_limit": 0,
                "read_operation_rate_guarantee": 0,
                "read_operation_rate_limit": 0,
                "write_operation_rate_guarantee": 0,
                "write_operation_rate_limit": 0
            }
        ],
        "pod_dynamic_attributes": {
            "labels": {
                "attributes": [
                    {
                        "key": "label_key",
                        "value": "label_value"
                    }
                ]
            },
            "annotations": {
                "attributes": [{
                    "key": "annot_key",
                    "value": "annot_value"
                }]
            }
        },
        "node_entry": {
            "cpu": {
                "total_capacity": 56,
                "cpu_to_vcpu_factor": 0.7
            }
        },
        "immutable_meta": {
            "node_meta": {
                "fqdn": "node_fqdn",
                "cluster": "yp_master_fqdn",
                "dc": "data_center"
            },
            "pod_id": "yp_pod_id"
        },
        "spec": {
            "revision": 1,
            "id": "TestWorkloadSpec",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise/layer.tar"
                    },
                    {
                        "id": "Layer_MyData1",
                        "checksum": "MD5:b7e9081350a579d73d52f60d6fd11d11",
                        "url": "local:layer_small_data_0/layer.tar.gz"
                    },
                    {
                        "id": "Layer_MyData2",
                        "checksum": "MD5:2ef98e53a267b3852e0a32c1d55e627b",
                        "url": "local:layer_small_data_1/layer.tar.gz"
                    }
                ]
            },
            "volumes": [
                {
                    "id": "test_volume",
                    "generic": {
                        "layer_refs": ["Layer_MyData1", "Layer_MyData2"]
                    }
                }
            ],
            "boxes": [
                {
                    "id": "test_box",
                    "specific_type": "user_box",
                    "compute_resources": {
                        "memory_guarantee": 33554432,
                        "memory_limit": 67108864,
                        "vcpu_guarantee": 200,
                        "vcpu_limit": 400
                    },
                    "rootfs": {
                        "quota_bytes": 268435456,
                        "layer_refs": ["Layer_MyRootFS"]
                    },
                    "volumes": [
                        {
                            "volume_ref": "test_volume",
                            "mount_point": "/data",
                            "mode": 1
                        }
                    ]
                }
            ],
            "workloads": [
                {
                    "id": "MyWorkload",
                    "init": [
                        {
                            "compute_resources": {
                                "memory_guarantee": 33554432,
                                "memory_limit": 33554432,
                                "anonymous_memory_limit": 33554432
                            },
                            "command_line": "bash -c 'env | grep -c -e TVMTOOL_LOCAL_AUTHTOKEN -e Var; echo init > init.txt'"
                        },
                        {
                            "compute_resources": {
                                "memory_guarantee": 33554432,
                                "memory_limit": 33554432,
                                "anonymous_memory_limit": 33554432
                            },
                            "command_line": "bash -c \"cp init.txt init2.txt; cat init2.txt\""
                        }
                    ],
                    "stop_policy": {
                        "container": {
                            "command_line": "bash -c 'env | grep -c -e TVMTOOL_LOCAL_AUTHTOKEN -e Var; echo stop'"
                        },
                        "max_tries": 3
                    },
                    "destroy_policy": {
                        "container": {
                            "command_line": "bash -c 'env | grep -c -e TVMTOOL_LOCAL_AUTHTOKEN -e Var; echo destroy'"
                        },
                        "max_tries": 3
                    },
                    "readiness_check": {
                        "container": {
                            "compute_resources": {
                                "memory_guarantee": 33554432,
                                "memory_limit": 33554432,
                                "anonymous_memory_limit": 33554432
                            },
                            "command_line": "bash -c 'env | grep -c -e TVMTOOL_LOCAL_AUTHTOKEN -e Var; echo readiness'"
                        }
                    },
                    "liveness_check": {
                        "container": {
                            "compute_resources": {
                                "memory_guarantee": 33554432,
                                "memory_limit": 33554432,
                                "anonymous_memory_limit": 33554432
                            },
                            "command_line": "bash -c 'env | grep -c -e TVMTOOL_LOCAL_AUTHTOKEN -e Var; echo liveness'"
                        }
                    },
                    "env": [
                        {
                            "name": "Var1Name",
                            "value": {
                                "literal_env": {
                                    "value": "Var1Value"
                                }
                            }
                        },
                        {
                            "name": "Var2Name",
                            "value": {
                                "literal_env": {
                                    "value": "Var2\";===Value"
                                }
                            }
                        }
                    ],
                    "box_ref": "test_box",
                    "start": {
                        "compute_resources": {
                            "vcpu_guarantee": 50,
                            "vcpu_limit": 50,
                            "memory_guarantee": 33554432,
                            "memory_limit": 33554432,
                            "anonymous_memory_limit": 33554432,
                            "io_limit": [
                                {
                                    "raw": "/tmp",
                                    "type": 0,
                                    "value": 20000
                                },
                                {
                                    "raw": "/tmp",
                                    "type": 1,
                                    "value": 20000
                                }
                            ],
                            "io_ops_limit": [
                               {
                                    "raw": "/tmp",
                                    "type": 1,
                                    "value": 20000
                                },
                                {
                                    "raw": "/tmp",
                                    "type": 0,
                                    "value": 20000
                                }
                            ]
                        },
                        "command_line": "bash -c \"env | grep -c -e TVMTOOL_LOCAL_AUTHTOKEN -e Var; cat /data/my_file.txt /data/test_file.txt; sleep 60\""
                    }
                }
            ],
            "mutable_workloads": [
                {
                    "workload_ref": "MyWorkload",
                    "target_state": 0
                }
            ]
        }
    },
    "workload_extended_spec" : {
        "spec_timestamp": 1,
        "resource_requests": {
            "memory_guarantee": 33554432,
            "memory_limit": 67108864,
            "vcpu_guarantee": 200,
            "vcpu_limit": 400
        },
        "ip6_address_allocations": [
            {
                "transient_fqdn": "man3-0442-1.man3-0442-node-hume.man-pre.yp-c.yandex.net",
                "labels": {
                    "attributes": [
                        {
                            "key": "label_key",
                            "value": "label_value"
                        }
                    ]
                },
                "persistent_fqdn": "man3-0442-node-hume.man-pre.yp-c.yandex.net",
                "vlan_id": "backbone",
                "address": "2a02:6b8:c0a:1808:10d:2342:42d5:0",
                "internet_address": {
                    "id": "test_id",
                    "ip4_address": "ip4_test"
                },
                "virtual_services": [
                    {
                        "ip6_addresses": [
                            "ip6_test1",
                            "ip6_test2"
                        ],
                        "ip4_addresses": [
                            "ip4_test1",
                            "ip4_test2"
                        ]
                    },
                    {
                        "ip6_addresses": [
                            "ip6_test3"
                        ],
                        "ip4_addresses": [
                            "ip4_test3"
                        ]
                    }
                ]
            },
            {
                "transient_fqdn": "fb-man3-0442-1.man3-0442-node-hume.man-pre.yp-c.yandex.net",
                "persistent_fqdn": "fb-man3-0442-node-hume.man-pre.yp-c.yandex.net",
                "vlan_id": "fastbone",
                "address": "2a02:6b8:fc12:1808:10d:2342:b557:0"
            }
        ],
        "ip6_subnet_allocations": [
            {
                "subnet": "2a02:6b8:c08:c812:0:696:af91:0/112",
                "labels": {
                    "attributes": [
                        {
                            "key": "label_key",
                            "value": "label_value"
                        }
                    ]
                },
                "vlan_id": "backbone"
            }
        ],
        "disk_volume_allocations": [
            {
                "id": "pod-agent-test-stage-on-sas-test-allocation",
                "labels": {},
                "capacity": 5368709120,
                "resource_id": "disk-place-sas2-6807-search-yandex-net",
                "volume_id": "824bf042-ca1ceb9f-4aaff001-ac035535",
                "device": "/place",
                "read_bandwidth_guarantee": 0,
                "read_bandwidth_limit": 0,
                "write_bandwidth_guarantee": 0,
                "write_bandwidth_limit": 0,
                "read_operation_rate_guarantee": 0,
                "read_operation_rate_limit": 0,
                "write_operation_rate_guarantee": 0,
                "write_operation_rate_limit": 0
            },
            {
                "id": "pod_agent",
                "labels": {
                    "attributes": [
                        {
                            "key": "used_by_infra",
                            "value": "%true"
                        }
                    ]
                },
                "capacity": 1073741824,
                "resource_id": "disk-place-sas2-6807-search-yandex-net",
                "volume_id": "824bf043-8c3e41b-867308fc-1130aa43",
                "device": "/place",
                "read_bandwidth_guarantee": 0,
                "read_bandwidth_limit": 0,
                "write_bandwidth_guarantee": 0,
                "write_bandwidth_limit": 0,
                "read_operation_rate_guarantee": 0,
                "read_operation_rate_limit": 0,
                "write_operation_rate_guarantee": 0,
                "write_operation_rate_limit": 0
            }
        ],
        "pod_dynamic_attributes": {
            "labels": {
                "attributes": [
                    {
                        "key": "label_key",
                        "value": "label_value"
                    }
                ]
            },
            "annotations": {
                "attributes": [{
                    "key": "annot_key",
                    "value": "annot_value"
                }]
            }
        },
        "node_entry": {
            "cpu": {
                "total_capacity": 56,
                "cpu_to_vcpu_factor": 0.7
            }
        },
        "immutable_meta": {
            "node_meta": {
                "fqdn": "node_fqdn",
                "cluster": "yp_master_fqdn",
                "dc": "data_center"
            },
            "pod_id": "yp_pod_id"
        },
        "spec": {
            "revision": 1,
            "id": "TestWorkloadSpec",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise/layer.tar"
                    },
                    {
                        "id": "Layer_MyData1",
                        "checksum": "MD5:b7e9081350a579d73d52f60d6fd11d11",
                        "url": "local:layer_small_data_0/layer.tar.gz"
                    },
                    {
                        "id": "Layer_MyData2",
                        "checksum": "MD5:2ef98e53a267b3852e0a32c1d55e627b",
                        "url": "local:layer_small_data_1/layer.tar.gz"
                    }
                ]
            },
            "volumes": [
                {
                    "id": "test_volume",
                    "generic": {
                        "layer_refs": ["Layer_MyData1", "Layer_MyData2"]
                    }
                }
            ],
            "boxes": [
                {
                    "id": "test_box",
                    "specific_type": "user_box",
                    "compute_resources": {
                        "memory_guarantee": 33554432,
                        "memory_limit": 67108864,
                        "vcpu_guarantee": 200,
                        "vcpu_limit": 400
                    },
                    "rootfs": {
                        "quota_bytes": 268435456,
                        "layer_refs": ["Layer_MyRootFS"]
                    },
                    "volumes": [
                        {
                            "volume_ref": "test_volume",
                            "mount_point": "/data",
                            "mode": 1
                        }
                    ]
                }
            ],
            "workloads": [
                {
                    "id": "MyWorkload",
                    "init": [
                        {
                            "compute_resources": {
                                "memory_guarantee": 33554432,
                                "memory_limit": 33554432,
                                "anonymous_memory_limit": 33554432
                            },
                            "command_line": "bash -c 'env | grep -c -e TVMTOOL_LOCAL_AUTHTOKEN -e Var; echo init > init.txt'"
                        },
                        {
                            "compute_resources": {
                                "memory_guarantee": 33554432,
                                "memory_limit": 33554432,
                                "anonymous_memory_limit": 33554432
                            },
                            "command_line": "bash -c \"cp init.txt init2.txt; cat init2.txt\""
                        }
                    ],
                    "stop_policy": {
                        "container": {
                            "command_line": "bash -c 'env | grep -c -e TVMTOOL_LOCAL_AUTHTOKEN -e Var; echo stop'"
                        },
                        "max_tries": 3
                    },
                    "destroy_policy": {
                        "container": {
                            "command_line": "bash -c 'env | grep -c -e TVMTOOL_LOCAL_AUTHTOKEN -e Var; echo destroy'"
                        },
                        "max_tries": 3
                    },
                    "readiness_check": {
                        "container": {
                            "compute_resources": {
                                "memory_guarantee": 33554432,
                                "memory_limit": 33554432,
                                "anonymous_memory_limit": 33554432
                            },
                            "command_line": "bash -c 'env | grep -c -e TVMTOOL_LOCAL_AUTHTOKEN -e Var; echo readiness'"
                        }
                    },
                    "liveness_check": {
                        "container": {
                            "compute_resources": {
                                "memory_guarantee": 33554432,
                                "memory_limit": 33554432,
                                "anonymous_memory_limit": 33554432
                            },
                            "command_line": "bash -c 'env | grep -c -e TVMTOOL_LOCAL_AUTHTOKEN -e Var; echo liveness'"
                        }
                    },
                    "env": [
                        {
                            "name": "Var1Name",
                            "value": {
                                "literal_env": {
                                    "value": "Var1Value"
                                }
                            }
                        },
                        {
                            "name": "Var2Name",
                            "value": {
                                "literal_env": {
                                    "value": "Var2\";===Value"
                                }
                            }
                        }
                    ],
                    "box_ref": "test_box",
                    "start": {
                        "compute_resources": {
                            "vcpu_guarantee": 50,
                            "vcpu_limit": 50,
                            "memory_guarantee": 33554432,
                            "memory_limit": 33554432,
                            "anonymous_memory_limit": 33554432,
                            "io_limit": [
                                {
                                    "raw": "/tmp",
                                    "type": 0,
                                    "value": 20000
                                },
                                {
                                    "raw": "/tmp",
                                    "type": 1,
                                    "value": 20000
                                }
                            ],
                            "io_ops_limit": [
                                {
                                    "raw": "/tmp",
                                    "type": 1,
                                    "value": 20000
                                },
                                {
                                    "raw": "/tmp",
                                    "type": 0,
                                    "value": 20000
                                }
                            ]
                        },
                        "command_line": "bash -c \"env | grep -c -e TVMTOOL_LOCAL_AUTHTOKEN -e Var; cat /data/my_file.txt /data/test_file.txt; sleep 60\""
                    }
                }
            ],
            "mutable_workloads": [
                {
                    "workload_ref": "MyWorkload",
                    "target_state": 0
                }
            ]
        }
    },
    "test_files_spec" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestFiles",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise/layer.tar"
                    }
                ],
                "static_resources": [
                    {

                        "id": "StaticResource_MyData",
                        "verification": {
                            "checksum": "EMPTY:",
                            "check_period_ms": 180000
                        },
                        "files": {
                            "files": [
                                {
                                    "file_name": "file_raw",
                                    "raw_data": "string"
                                },
                                {
                                    "file_name": "file_secret",
                                    "secret_data": {
                                        "id": "MySecret",
                                        "alias": "MySecretAlias"
                                     }
                                },
                                {
                                    "file_name": "file_json",
                                    "multi_secret_data": {
                                        "secret_alias": "MySecretAlias",
                                        "format": 0
                                    }
                                },
                                {
                                    "file_name": "file_java",
                                    "multi_secret_data": {
                                        "secret_alias": "MySecretAlias",
                                        "format": 1
                                    }
                                },
                                {
                                    "file_name": "file_yaml",
                                    "multi_secret_data": {
                                        "secret_alias": "MySecretAlias",
                                        "format": 2
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "boxes": [
                {
                    "id": "test_files_box",
                    "rootfs": {
                        "layer_refs": ["Layer_MyRootFS"]
                    },
                    "static_resources": [
                        {
                            "resource_ref": "StaticResource_MyData",
                            "mount_point": "static_data"
                        }
                    ],
                    "init": [
                        {
                            "command_line": "bash -c 'echo \"file_raw:\"; cat /static_data/file_raw'"
                        },
                        {
                            "command_line": "bash -c 'echo \"file_secret:\"; cat /static_data/file_secret'"
                        },
                        {
                            "command_line": "bash -c 'echo \"file_json:\"; cat /static_data/file_json'"
                        },
                        {
                            "command_line": "bash -c 'echo \"file_java:\"; cat /static_data/file_java'"
                        },
                        {
                            "command_line": "bash -c 'echo \"file_yaml:\"; cat /static_data/file_yaml'"
                        }
                     ]
                }
            ]
        },
        "secrets": [
            {
                "id": "MySecretAlias",
                "values": [
                    {
                        "key": "MySecret",
                        "value": "my_secret"
                    },
                    {
                        "key": "MySecret2",
                        "value": "my_secret2"
                    },
                    {
                        "key": "SecretForEscape",
                        "value": "\\very\nbad!!#value"
                    }
                ]
            }
        ]
    },
    "test_stdout_file_spec" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestStdoutFile",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise/layer.tar"
                    }
                ]
            },
            "boxes": [
                {
                    "id": "test_box",
                    "rootfs": {
                        "layer_refs": ["Layer_MyRootFS"]
                    }
                }
            ],
            "workloads": [
                {
                    "id": "MyWorkload",
                    "box_ref": "test_box",
                    "start": {
                        "command_line": "bash -c 'echo this is an stdout file; sleep 10000'",
                        "stdout_file": "stdout_file"
                    },
                    "readiness_check": {
                        "container": {
                            "command_line": "echo readiness"
                        }
                    }
                }
            ],
            "mutable_workloads": [
                {
                    "workload_ref": "MyWorkload",
                    "target_state": 0
                }
            ]
        }
    },
    "invalid_start_cmd_spec" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestInvalidStartCmd",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise/layer.tar"
                    }
                ]
            },
            "boxes": [
                {
                    "id": "test_box",
                    "rootfs": {
                        "layer_refs": ["Layer_MyRootFS"]
                    }
                }
            ],
            "workloads": [
                {
                    "id": "MyWorkload",
                    "box_ref": "test_box",
                    "start": {
                        "command_line": "wrong_cmd"
                    },
                    "readiness_check": {
                        "container": {
                            "command_line": "echo readiness"
                        }
                    }
                }
            ],
            "mutable_workloads": [
                {
                    "workload_ref": "MyWorkload",
                    "target_state": 0
                }
            ]
        }
    },
    "volume_persistency_spec" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestVolumePersistency",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise/layer.tar"
                    }
                ]
            },
            "boxes": [
                {
                    "id": "test_box",
                    "rootfs": {
                        "layer_refs": ["Layer_MyRootFS"]
                    }
                }
            ],
            "workloads": [
                {
                    "id": "MyWorkload",
                    "init": [
                        {
                            "command_line": "bash -c 'touch test_file_$(date +%s)'"
                        }
                    ],
                    "box_ref": "test_box",
                    "start": {
                        "command_line": "bash -c 'if [ 2 -gt $(ls test_file_* | wc --words) ]; then false; fi'"
                    },
                    "readiness_check": {
                        "container": {
                            "command_line": "echo readiness"
                        }
                    }
                }
            ],
            "mutable_workloads": [
                {
                    "workload_ref": "MyWorkload",
                    "target_state": 0
                }
            ]
        }
    },
    "test_in_container_workload_spec" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestWorkloadSpec",
            "resources": {
                "compute_resources": {
                    "memory_guarantee": 33554432
                },
                "static_resources": [
                    {
                        "id": "Resource_MyData1",
                        "verification": {
                            "checksum": "MD5:ab3c103dfee69624c486b74d3c90db65",
                            "check_period_ms": 180000
                        },
                        "url": "rbtorrent:4be7b762eecbe3f929574d1ac326c90ae28cc5b5"
                    },
                    {
                        "id": "Resource_MyData2",
                        "verification": {
                            "checksum": "MD5:edc3d3797971f12c7f5e1d106dd5cee2",
                            "check_period_ms": 180000
                        },
                        "sky_get": {
                            "resid": "rbtorrent:4b019712f4788cd67d1d218672b302df931d404f",
                            "deduplicate": 1
                        }
                    }
                ],
                "layers": [
                    {
                        "id": "Layer_MyRootFS",
                        "checksum": "MD5:04b5608a052cc3fa1663d20fbc7fedd6",
                        "url": "https://proxy.sandbox.yandex-team.ru/512457792"
                    },
                    {
                        "id": "Layer_MyData1",
                        "checksum": "MD5:b7e9081350a579d73d52f60d6fd11d11",
                        "url": "rbtorrent:3f64511b57514d0b613514fda4728584f3232db6"
                    },
                    {
                        "id": "Layer_MyData2",
                        "checksum": "MD5:2ef98e53a267b3852e0a32c1d55e627b",
                        "url": "https://proxy.sandbox.yandex-team.ru/617090665"
                    },
                    {
                        "id": "Layer_MyData3",
                        "checksum": "MD5:0b5861200dfa88e3afee11896aef420b",
                        "sky_get": {
                            "resid": "rbtorrent:95f8a3e6c9a625b49f6e9bf08d744de5a5b69daa",
                            "deduplicate": 1
                        }
                    }
                ]
            },
            "volumes": [
                {
                    "id": "test_volume",
                    "generic": {
                        "layer_refs": ["Layer_MyData1", "Layer_MyData2", "Layer_MyData3"]
                    }
                }
            ],
            "boxes": [
                {
                    "id": "test_box",
                    "rootfs": {
                        "quota_bytes": 268435456,
                        "layer_refs": ["Layer_MyRootFS"]
                    },
                    "volumes": [
                        {
                            "volume_ref": "test_volume",
                            "mount_point": "/data",
                            "mode": 1
                        }
                    ],
                    "static_resources": [
                        {
                            "resource_ref": "Resource_MyData1",
                            "mount_point": "/data1"
                        },
                        {
                            "resource_ref": "Resource_MyData2",
                            "mount_point": "/data2"
                        }
                    ]
                }
            ],
            "workloads": [
                {
                    "id": "MyWorkload",
                    "init": [
                        {
                            "compute_resources": {
                                "memory_guarantee": 33554432,
                                "memory_limit": 33554432,
                                "anonymous_memory_limit": 33554432
                            },
                            "command_line": "bash -c 'echo init > init.txt'"
                        },
                        {
                            "command_line": "bash -c \"cp init.txt init2.txt; cat init2.txt\""
                        }
                    ],
                    "stop_policy": {
                        "container": {
                            "command_line": "echo stop"
                        },
                        "max_tries": 1000
                    },
                    "readiness_check": {
                        "container": {
                            "compute_resources": {
                                "vcpu_guarantee": 25,
                                "vcpu_limit": 25,
                                "memory_guarantee": 33554432,
                                "memory_limit": 33554432,
                                "anonymous_memory_limit": 33554432
                            },
                            "command_line": "echo readiness"
                        }
                    },
                    "liveness_check": {
                        "container": {
                            "compute_resources": {
                                "vcpu_guarantee": 25,
                                "vcpu_limit": 25,
                                "memory_guarantee": 33554432,
                                "memory_limit": 33554432,
                                "anonymous_memory_limit": 33554432
                            },
                            "command_line": "echo liveness"
                        }
                    },
                    "env": [
                        {
                            "name": "Var1Name",
                            "value": {
                                "literal_env": {
                                    "value": "Var1Value"
                                }
                            }
                        },
                        {
                            "name": "Var2Name",
                            "value": {
                                "literal_env": {
                                    "value": "Var2\";===Value"
                                }
                            }
                        }
                    ],
                    "box_ref": "test_box",
                    "start": {
                        "compute_resources": {
                            "vcpu_guarantee": 50,
                            "vcpu_limit": 50,
                            "memory_guarantee": 33554432,
                            "memory_limit": 33554432,
                            "anonymous_memory_limit": 33554432,
                            "io_limit": [
                                {
                                    "raw": "/tmp",
                                    "type": 0,
                                    "value": 20000
                                },
                                {
                                    "raw": "/tmp",
                                    "type": 1,
                                    "value": 20000
                                }
                            ],
                            "io_ops_limit": [
                               {
                                    "raw": "/tmp",
                                    "type": 1,
                                    "value": 20000
                                },
                                {
                                    "raw": "/tmp",
                                    "type": 0,
                                    "value": 20000
                                }
                            ]
                        },
                        "command_line": "bash -c \"cat /data/my_file.txt /data/test_file.txt; sleep 60\""
                    }
                }
            ],
            "mutable_workloads": [
                {
                    "workload_ref": "MyWorkload",
                    "target_state": 0
                }
            ]
        }
    },
    "workload_update_start_spec" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestWorkloadUpdateStartSpec",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise/layer.tar"
                    }
                ]
            },
            "boxes": [
                {
                    "id": "test_box",
                    "rootfs": {
                        "layer_refs": ["Layer_MyRootFS"]
                    }
                }
            ],
            "workloads": [
                {
                    "id": "MyWorkload",
                    "stop_policy": {
                        "container": {
                            "command_line": "bash -c \"echo stopped > stop_file.txt\""
                        },
                        "max_tries": 1000
                    },
                    "destroy_policy": {
                        "container": {
                            "command_line": "bash -c \"echo destroyed > destroy_file.txt\""
                        },
                        "max_tries": 1000
                    },
                    "box_ref": "test_box",
                    "start": {
                        "command_line": "bash -c \"echo start; sleep 60\""
                    },
                    "readiness_check": {
                        "container": {
                            "command_line": "echo readiness"
                        }
                    }
                }
            ],
            "mutable_workloads": [
                {
                    "workload_ref": "MyWorkload",
                    "target_state": 0
                }
            ]
        }
    },
    "workload_update_end_spec" : {
        "spec_timestamp": 2,
        "spec": {
            "revision": 2,
            "id": "TestWorkloadUpdateEndSpec",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise/layer.tar"
                    }
                ]
            },
            "boxes": [
                {
                    "id": "test_box",
                    "rootfs": {
                        "layer_refs": ["Layer_MyRootFS"]
                    }
                }
            ],
            "workloads": [
                {
                    "id": "MyWorkload",
                    "box_ref": "test_box",
                    "start": {
                        "command_line": "bash -c \"echo start; sleep 60\""
                    },
                    "readiness_check": {
                        "container": {
                            "command_line": "echo readiness"
                        }
                    }
                }
            ],
            "mutable_workloads": [
                {
                    "workload_ref": "MyWorkload",
                    "target_state": 0
                }
            ]
        }
    },
    "workload_remove_end_spec" : {
        "spec_timestamp": 2,
        "spec": {
            "revision": 2,
            "id": "TestWorkloadUpdateEndSpec",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise/layer.tar"
                    }
                ]
            },
            "boxes": [
                {
                    "id": "test_box",
                    "rootfs": {
                        "layer_refs": ["Layer_MyRootFS"]
                    }
                }
            ]
        }
    },
    "selective_rebuild_spec" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestSelectiveRebuildSpec",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise/layer.tar"
                    },
                    {
                        "id": "Layer_MyData1",
                        "checksum": "MD5:b7e9081350a579d73d52f60d6fd11d11",
                        "url": "local:layer_small_data_0/layer.tar.gz"
                    }
                ]
            },
            "volumes": [
                {
                    "id": "test_volume1",
                    "generic": {
                        "layer_refs": ["Layer_MyData1"]
                    }
                },
                {
                    "id": "test_volume2",
                    "generic": {
                        "layer_refs": []
                    }
                }
            ],
            "boxes": [
                {
                    "id": "test_box",
                    "rootfs": {
                        "layer_refs": ["Layer_MyRootFS"]
                    },
                    "volumes": [
                        {
                            "volume_ref": "test_volume1",
                            "mount_point": "/data",
                            "mode": 1
                        }
                    ]
                }
            ],
            "workloads": [
                {
                    "id": "MyWorkload",
                    "stop_policy": {
                        "container": {
                            "command_line": "bash -c \"echo stop1 >> /data/stop_file_1.txt\""
                        },
                        "max_tries": 1000
                    },
                    "box_ref": "test_box",
                    "start": {
                        "command_line": "bash -c \"cat /data/my_file.txt; sleep 60\""
                    },
                    "readiness_check": {
                        "container": {
                            "command_line": "echo readiness"
                        }
                    }
                }
            ],
            "mutable_workloads": [
                {
                    "workload_ref": "MyWorkload",
                    "target_state": 0
                }
            ]
        }
    },
    "remove_spec" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestRemoveSpec",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise/layer.tar"
                    }
                ]
            },
            "volumes": [
                {
                    "id": "test_volume",
                    "generic": {
                        "layer_refs": []
                    }
                }
            ],
            "boxes": [
                {
                    "id": "test_box",
                    "rootfs": {
                        "layer_refs": ["Layer_MyRootFS"]
                    },
                    "volumes": [
                        {
                            "volume_ref": "test_volume",
                            "mount_point": "/persist",
                            "mode": 1
                        }
                    ]
                }
            ],
            "workloads": [
                {
                    "id": "MyWorkload",
                    "stop_policy": {
                        "container": {
                            "command_line": "bash -c \"echo stop > /persist/stop_file.txt\""
                        },
                        "max_tries": 1000
                    },
                    "box_ref": "test_box",
                    "start": {
                        "command_line": "sleep 60"
                    },
                    "readiness_check": {
                        "container": {
                            "command_line": "echo readiness"
                        }
                    }
                }
            ],
            "mutable_workloads": [
                {
                    "workload_ref": "MyWorkload",
                    "target_state": 0
                }
            ]
        }
    },
    "add_with_target_check_spec" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestAddWithTargetCheckSpec",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise/layer.tar"
                    },
                    {
                        "id": "Layer_MyData",
                        "checksum": "MD5:b7e9081350a579d73d52f60d6fd11d11",
                        "url": "local:layer_small_data_0/layer.tar.gz"
                    }
                ]
            },
            "volumes": [
                {
                    "id": "test_volume",
                    "generic": {
                        "layer_refs": ["Layer_MyData"]
                    }
                }
            ],
            "boxes": [
                {
                    "id": "test_box",
                    "rootfs": {
                        "layer_refs": ["Layer_MyRootFS"]
                    },
                    "volumes": [
                        {
                            "volume_ref": "test_volume",
                            "mount_point": "/data",
                            "mode": 1
                        }
                    ]
                }
            ],
            "workloads": [
                {
                    "id": "MyWorkload",
                    "box_ref": "test_box",
                    "start": {
                        "command_line": "bash -c \"cat /data/my_file.txt /data/test_file.txt; sleep 60\""
                    },
                    "readiness_check": {
                        "container": {
                            "command_line": "echo readiness"
                        }
                    }
                }
            ],
            "mutable_workloads": [
                {
                    "workload_ref": "MyWorkload",
                    "target_state": 0
                }
            ]
        }
    },
    "chaos_end_spec" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestChaosEndSpec",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyRootFS_chaos_end",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise_copy/layer.tar"
                    },
                    {
                        "id": "Layer_MyData_chaos_end",
                        "checksum": "MD5:b7e9081350a579d73d52f60d6fd11d11",
                        "url": "local:layer_small_data_0_copy/layer.tar.gz"
                    }
                ]
            },
            "volumes": [
                {
                    "id": "test_volume_chaos_end",
                    "generic": {
                        "layer_refs": ["Layer_MyData_chaos_end"]
                    }
                }
            ],
            "boxes": [
                {
                    "id": "test_box_chaos_end",
                    "rootfs": {
                        "layer_refs": ["Layer_MyRootFS_chaos_end"]
                    },
                    "volumes": [
                        {
                            "volume_ref": "test_volume_chaos_end",
                            "mount_point": "/data",
                            "mode": 1
                        }
                    ]
                }
            ],
            "workloads": [
                {
                    "id": "MyWorkload_chaos_end",
                    "box_ref": "test_box_chaos_end",
                    "start": {
                        "command_line": "bash -c \"cat /data/my_file.txt /data/test_file.txt; sleep 60\""
                    },
                    "readiness_check": {
                        "container": {
                            "command_line": "echo readiness"
                        }
                    }
                }
            ],
            "mutable_workloads": [
                {
                    "workload_ref": "MyWorkload_chaos_end",
                    "target_state": 0
                }
            ]
        }
    },
    "waiting_for_layers_spec" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestWatingForLayersSpec",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise/layer.tar"
                    },
                    {
                        "id": "Layer_MyData",
                        "checksum": "MD5:b7e9081350a579d73d52f60d6fd11d11",
                        "url": "local:layer_small_data_0/layer.tar.gz"
                    }
                ]
            },
            "volumes": [
                {
                    "id": "test_volume",
                    "generic": {
                        "layer_refs": ["Layer_MyData"]
                    }
                }
            ],
            "boxes": [
                {
                    "id": "test_box",
                    "rootfs": {
                        "layer_refs": ["Layer_MyRootFS"]
                    },
                    "volumes": [
                        {
                            "volume_ref": "test_volume",
                            "mount_point": "/data",
                            "mode": 1
                        }
                    ]
                }
            ],
            "workloads": [
                {
                    "id": "MyWorkload",
                    "box_ref": "test_box",
                    "start": {
                        "command_line": "bash -c \"cat /data/my_file.txt /data/test_file.txt; sleep 60\""
                    },
                    "readiness_check": {
                        "container": {
                            "command_line": "echo readiness"
                        }
                    }
                }
            ],
            "mutable_workloads": [
                {
                    "workload_ref": "MyWorkload",
                    "target_state": 0
                }
            ]
        }
    },
    "workload_secret_spec" : {
        "spec_timestamp": 1,
        "spec" : {
            "revision": 1,
            "id": "TestWorkloadSecretSpec",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise/layer.tar"
                    }
                ]
            },
            "boxes": [
                {
                    "id": "test_box",
                    "rootfs": {
                        "layer_refs": ["Layer_MyRootFS"]
                    }
                }
            ],
            "workloads": [
                {
                    "id": "MyWorkload",
                    "box_ref": "test_box",
                    "start": {
                        "command_line": "bash -c \"echo $SECRET_VAR $SECRET_BASE64_DECODED_VAR > $SECRET_FILE_NAME; sleep 60\""
                    },
                    "readiness_check": {
                        "container": {
                            "command_line": "cat $SECRET_FILE_NAME"
                        }
                    },
                    "env": [
                        {
                            "name": "SECRET_VAR",
                            "value": {
                                "secret_env": {
                                    "id": "MySecret",
                                    "alias": "MySecretAlias"
                                }
                            }
                        },
                        {
                            "name": "SECRET_BASE64_DECODED_VAR",
                            "value": {
                                "secret_env": {
                                    "id": "MyBase64Secret",
                                    "alias": "MySecretAlias",

                                    "decode_base64": true
                                }
                            }
                        },
                        {
                            "name": "SECRET_FILE_NAME",
                            "value": {
                                "secret_env": {
                                    "id": "MySecretFileName",
                                    "alias": "MySecretAlias"
                                }
                            }
                        }
                    ]
                }
            ],
            "mutable_workloads": [
                {
                    "workload_ref": "MyWorkload",
                    "target_state": 0
                }
            ]
        },
        "secrets": [
            {
                "id": "MySecretAlias",
                "values": [
                    {
                        "key": "MySecret",
                        "value": "my_secret"
                    },
                    {
                        "key": "MySecretFileName",
                        "value": "my_secret_file"
                    },
                    {
                        "key": "MyBase64Secret",
                        "value": "bXlfYmFzZTY0X3NlY3JldA==",
                        "encoding": "base64"
                    }
                ]
            }
        ]
    },
    "box_init_secret_spec" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestBoxInitSecretSpec",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise/layer.tar"
                    }
                ]
            },
            "boxes": [
                {
                    "id": "test_box",
                    "rootfs": {
                        "layer_refs": ["Layer_MyRootFS"]
                    },
                    "env": [
                        {
                            "name": "SECRET_VAR",
                            "value": {
                                "secret_env": {
                                    "id": "MySecret",
                                    "alias": "MySecretAlias"
                                }
                            }
                        },
                        {
                            "name": "SECRET_FILE_NAME",
                            "value": {
                                "secret_env": {
                                    "id": "MySecretFileName",
                                    "alias": "MySecretAlias"
                                }
                            }
                        }
                    ],
                    "init": [
                        {
                            "command_line": "bash -c \"echo $SECRET_VAR > $SECRET_FILE_NAME\""
                        }
                    ]
                }
            ]
        },
        "secrets": [
            {
                "id": "MySecretAlias",
                "values": [
                    {
                        "key": "MySecret",
                        "value": "my_secret"
                    },
                    {
                        "key": "MySecretFileName",
                        "value": "my_secret_file"
                    }
                ]
            }
        ]
    },
    "box_persist_ip_allocation" : {
        "spec_timestamp": 1,
        "spec": {
            "id": "TestBoxIpAllocationSpec",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_Fake_Rootfs",
                        "checksum": "EMPTY:",
                        "url": "raw:some_data"
                    }
                ]
            },
            "boxes": [
                {
                    "id": "test_box_one",
                    "rootfs": {
                        "layer_refs": ["Layer_Fake_Rootfs"]
                    }
                },
                {
                    "id": "test_box_two",
                    "rootfs": {
                        "layer_refs": ["Layer_Fake_Rootfs"]
                    }
                }
            ]
        },
        "ip6_subnet_allocations": [
            {
                "subnet": "2a02:6b8:c08:c812:0:696:af91:0/112",
                "labels": {
                    "attributes": [
                        {
                            "key": "id",
                            "value": "ARhib3hlc19zdWJuZXQ="
                        }
                    ]
                },
                "vlan_id": "backbone"
            }
        ]
    },
    "layer_tree_merge" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestLayerTreeMergeSpec",
            "resources": {
                "layers": [
                    {
                        "id": "Layer1_MyData1",
                        "checksum": "MD5:b7e9081350a579d73d52f60d6fd11d11",
                        "url": "local:layer_small_data_0_copy/layer.tar.gz"
                    },
                    {
                        "id": "Layer2_MyData1",
                        "checksum": "MD5:b7e9081350a579d73d52f60d6fd11d11",
                        "url": "local:layer_small_data_0_copy/layer.tar.gz"
                    },
                    {
                        "id": "Layer3_MyData1",
                        "checksum": "MD5:b7e9081350a579d73d52f60d6fd11d11",
                        "url": "local:layer_small_data_0_copy/layer.tar.gz"
                    },
                    {
                        "id": "Layer4_MyData1",
                        "checksum": "MD5:b7e9081350a579d73d52f60d6fd11d11",
                        "url": "local:layer_small_data_0_copy/layer.tar.gz"
                    },
                    {
                        "id": "Layer1_MyData2",
                        "checksum": "MD5:2ef98e53a267b3852e0a32c1d55e627b",
                        "url": "local:layer_small_data_1/layer.tar.gz"
                    },
                    {
                        "id": "Layer2_MyData2",
                        "checksum": "MD5:2ef98e53a267b3852e0a32c1d55e627b",
                        "url": "local:layer_small_data_1/layer.tar.gz"
                    },
                    {
                        "id": "Layer3_MyData2",
                        "checksum": "MD5:2ef98e53a267b3852e0a32c1d55e627b",
                        "url": "local:layer_small_data_1/layer.tar.gz"
                    },
                    {
                        "id": "Layer4_MyData2",
                        "checksum": "MD5:2ef98e53a267b3852e0a32c1d55e627b",
                        "url": "local:layer_small_data_1/layer.tar.gz"
                    }
                ]
            }
        }
    },
    "cache_layer_merge" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestCacheLayerMergeSpec",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyData1",
                        "checksum": "MD5:b7e9081350a579d73d52f60d6fd11d11",
                        "url": "local:layer_small_data_0_copy/layer.tar.gz"
                    },
                    {
                        "id": "Layer_MyData2",
                        "checksum": "MD5:2ef98e53a267b3852e0a32c1d55e627b",
                        "url": "local:layer_small_data_1/layer.tar.gz"
                    }
                ]
            }
        },
        "resource_cache_spec": {
            "layers": [
                {
                    "revision": 123,
                    "layer": {
                        "id": "CacheLayer_MyData1",
                        "checksum": "MD5:b7e9081350a579d73d52f60d6fd11d11",
                        "url": "local:layer_small_data_0_copy/layer.tar.gz"
                    }
                },
                {
                    "revision": 9231,
                    "layer": {
                        "id": "CacheLayer_MyData2",
                        "checksum": "MD5:2ef98e53a267b3852e0a32c1d55e627b",
                        "url": "local:layer_small_data_1/layer.tar.gz"
                    }
                }
            ]
        }
    },
    "many_ulimit_spec" : {
        "spec_timestamp": 1,
        "spec" : {
            "revision": 1,
            "id": "TestManyUlimitSpec",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise/layer.tar"
                    }
                ]
            },
            "boxes": [
                {
                    "id": "test_box",
                    "rootfs": {
                        "layer_refs": ["Layer_MyRootFS"]
                    }
                }
            ],
            "workloads": [
                {
                    "id": "MyWorkload",
                    "box_ref": "test_box",
                    "start": {
                        "command_line": "bash -c \"cat /proc/$$/limits | grep core | sed s/' '//g > core.txt; cat /proc/$$/limits | grep locked | sed s/' '//g > memlock.txt; sleep 60\""
                    },
                    "readiness_check": {
                        "container": {
                            "command_line": "cat core.txt memlock.txt"
                        }
                    },
                    "ulimit_soft": [
                        {
                            "name": 1,
                            "value": 1
                        },
                        {
                            "name": 3,
                            "value": 0
                        }
                    ]
                }
            ],
            "mutable_workloads": [
                {
                    "workload_ref": "MyWorkload",
                    "target_state": 0
                }
            ]
        }
    },
    "static_resource_tree_merge" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestStaticResourceTreeMergeSpec",
            "resources": {
                "static_resources": [
                    {
                        "id": "StaticResource1_MyData1",
                        "verification": {
                            "checksum": "MD5:b7e9081350a579d73d52f60d6fd11d11",
                            "check_period_ms": 180000
                        },
                        "url": "local:layer_small_data_0_copy/layer.tar.gz"
                    },
                    {
                        "id": "StaticResource2_MyData1",
                        "verification": {
                            "checksum": "MD5:b7e9081350a579d73d52f60d6fd11d11",
                            "check_period_ms": 180000
                        },
                        "url": "local:layer_small_data_0_copy/layer.tar.gz"
                    },
                    {
                        "id": "StaticResource3_MyData1",
                        "verification": {
                            "checksum": "MD5:b7e9081350a579d73d52f60d6fd11d11",
                            "check_period_ms": 180000
                        },
                        "url": "local:layer_small_data_0_copy/layer.tar.gz"
                    },
                    {
                        "id": "StaticResource4_MyData1",
                        "verification": {
                            "checksum": "MD5:b7e9081350a579d73d52f60d6fd11d11",
                            "check_period_ms": 180000
                        },
                        "url": "local:layer_small_data_0_copy/layer.tar.gz"
                    },
                    {
                        "id": "StaticResource1_MyData2",
                        "verification": {
                            "checksum": "MD5:2ef98e53a267b3852e0a32c1d55e627b",
                            "check_period_ms": 180000
                        },
                        "url": "local:layer_small_data_1/layer.tar.gz"
                    },
                    {
                        "id": "StaticResource2_MyData2",
                        "verification": {
                            "checksum": "MD5:2ef98e53a267b3852e0a32c1d55e627b",
                            "check_period_ms": 180000
                        },
                        "url": "local:layer_small_data_1/layer.tar.gz"
                    },
                    {
                        "id": "StaticResource3_MyData2",
                        "verification": {
                            "checksum": "MD5:2ef98e53a267b3852e0a32c1d55e627b",
                            "check_period_ms": 180000
                        },
                        "url": "local:layer_small_data_1/layer.tar.gz"
                    },
                    {
                        "id": "StaticResource4_MyData2",
                        "verification": {
                            "checksum": "MD5:2ef98e53a267b3852e0a32c1d55e627b",
                            "check_period_ms": 180000
                        },
                        "url": "local:layer_small_data_1/layer.tar.gz"
                    }
                ]
            }
        }
    },
    "cache_static_resource_merge" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestCacheStaticResourceMergeSpec",
            "resources": {
                "static_resources": [
                    {
                        "id": "StaticResource_MyData1",
                        "verification": {
                            "checksum": "MD5:b7e9081350a579d73d52f60d6fd11d11",
                            "check_period_ms": 180000
                        },
                        "url": "local:layer_small_data_0_copy/layer.tar.gz"
                    },
                    {
                        "id": "StaticResource_MyData2",
                        "verification": {
                            "checksum": "MD5:2ef98e53a267b3852e0a32c1d55e627b",
                            "check_period_ms": 180000
                        },
                        "url": "local:layer_small_data_1/layer.tar.gz"
                    }
                ]
            }
        },
        "resource_cache_spec": {
            "static_resources": [
                {
                    "revision": 123,
                    "resource": {
                        "id": "CacheStaticResource_MyData1",
                        "verification": {
                            "checksum": "MD5:b7e9081350a579d73d52f60d6fd11d11",
                            "check_period_ms": 180000
                        },
                        "url": "local:layer_small_data_0_copy/layer.tar.gz"
                    }
                },
                {
                    "revision": 9231,
                    "resource": {
                        "id": "CacheStaticResource_MyData2",
                        "verification": {
                            "checksum": "MD5:2ef98e53a267b3852e0a32c1d55e627b",
                            "check_period_ms": 180000
                        },
                        "url": "local:layer_small_data_1/layer.tar.gz"
                    }
                }
            ]
        }
    },
    "skynet_in_boxes" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestSkynetInBoxes",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_TestSkynetSpec_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise/layer.tar"
                    },
                    {
                        "id": "Layer_TestSkynetSpec_skynet",
                        "checksum": "MD5:244e11638ec8421488858510799c73b6",
                        "url": "https://proxy.sandbox.yandex-team.ru/922226367"
                    }
                ],
               "static_resources": [
                   {
                       "id": "Static_TestBoxSpec_MyData",
                       "verification": {
                            "checksum": "EMPTY:",
                            "check_period_ms": 180000
                        },
                        "url": "raw:some_data"
                    }
                ]
            },
            "boxes": [
                {
                    "id": "TestSkynetSpec_box",
                    "rootfs": {
                        "layer_refs": ["Layer_TestSkynetSpec_MyRootFS", "Layer_TestSkynetSpec_skynet"]
                    },
                    "bind_skynet": true,
                    "static_resources": [
                        {
                            "resource_ref": "Static_TestBoxSpec_MyData",
                            "mount_point": "static_data"
                        }
                    ],
                    "init": [
                        {
                            "command_line": "bash -c 'sky -h 2>&1 | head -n 1 > init.txt'"
                        },
                        {
                            "command_line": "bash -c \"env | grep -c TVMTOOL_LOCAL_AUTHTOKEN; cat init.txt; cat /static_data/raw_file\""
                        }
                    ]
                }
            ]
        }
    },
    "box_with_ro_rootfs" : {
        "spec_timestamp": 1,
        "pod_dynamic_attributes": {
            "annotations": {
                "attributes": [
                    {
                        "key": "pod.rbind.yt",
                        "value": "%true"
                    },
                    {
                        "key": "pod.rbind.basesearch",
                        "value": "%true"
                    }
                ]
            }
        },
        "spec": {
            "revision": 1,
            "id": "TestBoxWithRoRootfs",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_TestBoxWithRoRootfsSpec_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise/layer.tar"
                    },
                    {
                        "id": "Layer_TestBoxWithRoRootfsSpec_skynet",
                        "checksum": "MD5:244e11638ec8421488858510799c73b6",
                        "url": "https://proxy.sandbox.yandex-team.ru/922226367"
                    },
                    {
                        "id": "Layer_TestBoxWithRoRootfsSpec_yt_basearch_podagentpublic_rbind",
                        "url": "https://proxy.sandbox.yandex-team.ru/2244065466",
                        "checksum": "MD5:b31be9ad147c384facf687eb29ec3c06"
                    }
                ],
                "static_resources": [
                    {
                        "id": "Static_TestBoxSpec_MyData",
                        "verification": {
                            "checksum": "EMPTY:",
                            "check_period_ms": 180000
                        },
                        "url": "raw:some_data"
                    }
                ]
            },
            "volumes": [
                {
                    "id": "writable_non_persistent_volume",
                    "generic": {
                    },
                    "persistence_type": 1
                }
            ],
            "workloads": [
                {
                    "id": "MyWorkload",
                    "box_ref": "TestBoxWithRoRootfsSpec_box",
                    "start": {
                        "command_line": "bash -c 'echo start; sleep 1000'"
                    },
                    "readiness_check": {
                        "container": {
                            "command_line": "echo readiness"
                        }
                    },
                    "init": [
                        {
                            "command_line": "bash -c 'echo rootfs_read_only > /read_only && echo rootfs_read_only_test_failed || echo rootfs_read_only_test_ok'"
                        }
                    ]
                }
            ],
            "boxes": [
                {
                    "id": "TestBoxWithRoRootfsSpec_box",
                    "bind_skynet": true,
                    "rootfs": {
                        "layer_refs": ["Layer_TestBoxWithRoRootfsSpec_MyRootFS", "Layer_TestBoxWithRoRootfsSpec_skynet", "Layer_TestBoxWithRoRootfsSpec_yt_basearch_podagentpublic_rbind"],
                        "create_mode": 1
                    },
                    "volumes": [
                        {
                            "volume_ref": "writable_non_persistent_volume",
                            "mount_point": "/var/log",
                            "mode": 1
                        },
                        {
                            "rbind_volume_ref": "writable_rbind_volume_storage",
                            "mount_point": "/rbind_volume",
                            "mode": 1
                        }
                    ],
                    "static_resources": [
                        {
                            "resource_ref": "Static_TestBoxSpec_MyData",
                            "mount_point": "static_data"
                        }
                    ],
                    "init": [
                        {
                            "command_line": "cat /yt/data"
                        },
                        {
                            "command_line": "cat /basesearch/data"
                        },
                        {
                            "command_line": "cat /rbind_volume/data"
                        },
                        {
                            "command_line": "bash -c 'echo some_data > /yt/written_file && echo yt_volume_writable_test_ok || echo yt_volume_writable_test_failed'"
                        },
                        {
                            "command_line": "bash -c 'echo some_data > /basesearch/written_file && echo basesearch_volume_writable_test_ok || echo basesearch_volume_writable_test_failed'"
                        },
                        {
                            "command_line": "bash -c 'echo some_data > /rbind_volume/written_file && echo rbind_volume_writable_test_ok || echo rbind_volume_writable_test_failed'"
                        },
                        {
                            "command_line": "bash -c '[ \"$(ls -A /var/log)\" ] && echo non_persistent_volume_is_empty_test_failed || echo non_persistent_volume_is_empty_test_ok'"
                        },
                        {
                            "command_line": "bash -c 'echo some_data > /var/log/written_file && echo non_persistent_volume_writable_test_ok || echo non_persistent_volume_writable_test_failed'"
                        },
                        {
                            "command_line": "cat /static_data/raw_file"
                        },
                        {
                            "command_line": "bash -c 'echo some_data > /static_data/raw_file && echo static_resource_readonly_test_failed || echo static_resource_readonly_test_ok'"
                        },
                        {
                            "command_line": "bash -c 'sky -h 2>&1 | head -n 1 > /var/log/init.txt'"
                        },
                        {
                            "command_line": "bash -c '[ \"$(ls -A /var/log)\" ] && echo non_persistent_volume_is_not_empty_after_writing_test_ok || echo non_persistent_volume_is_not_empty_after_writing_test_fail'"
                        }
                    ]
                }
            ],
            "mutable_workloads": [
                {
                    "workload_ref": "MyWorkload",
                    "target_state": 0
                }
            ]
        }
    },
    "box_with_child_only_isolation" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestBoxWithChildOnlyIsolation",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_TestBoxWithChildOnlyIsolationSpec_MyRootFS",
                        "checksum": "MD5:66201c047c722db9c777600b9f7f335f",
                        "url": "https://proxy.sandbox.yandex-team.ru/2279976305"
                    }
                ]
            },
            "boxes": [
                {
                    "id": "TestBoxWithChildOnlyIsolationSpec_box",
                    "rootfs": {
                        "layer_refs": ["Layer_TestBoxWithChildOnlyIsolationSpec_MyRootFS"]
                    },
                    "isolation_mode": 1,
                    "init": [
                        {
                            "command_line": "bash -c 'portoctl list | grep TestBoxWithChildOnlyIsolation_resource_gang_meta | head -n 1 | awk \"{print \\$1}\" | xargs portoctl destroy 2> error_log && echo failed || echo ok'"
                        },
                        {
                            "command_line": "bash -c 'cat error_log'"
                        }
                    ]
                }
            ]
        }
    },
    "box_with_cgroup_fs_mount" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestBoxWithCgroupFsMount",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_TestBoxWithCgroupFsMount_MyRootFS",
                        "checksum": "MD5:66201c047c722db9c777600b9f7f335f",
                        "url": "https://proxy.sandbox.yandex-team.ru/2279976305"
                    }
                ]
            },
            "boxes": [
                {
                    "id": "TestBoxWithCgroupFsMount_box",
                    "rootfs": {
                        "layer_refs": ["Layer_TestBoxWithCgroupFsMount_MyRootFS"]
                    },
                    "cgroup_fs_mount_mode": 1,
                    "init": [
                        {
                            "command_line": "bash -c 'if [ 0 -lt $(ls /sys/fs/cgroup/ | wc -l) ]; then echo \"cgroup fs is here!\"; else echo \"cgroup fs not found\"; fi'"
                        }
                    ]
                }
            ]
        }
    },
    "yt_in_boxes" : {
        "spec_timestamp": 1,
        "pod_dynamic_attributes": {
            "annotations": {
                "attributes": [
                    {
                        "key": "pod.rbind.yt",
                        "value": "%true"
                    }
                ]
            }
        },
        "spec": {
            "revision": 1,
            "id": "TestYtInBoxes",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_TestYtSpec_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise_copy/layer.tar"
                    }
                ]
            },
            "boxes": [
                {
                    "id": "TestYtSpec_box",
                    "rootfs": {
                        "layer_refs": ["Layer_TestYtSpec_MyRootFS"]
                    },
                    "init": [
                        {
                            "command_line": "cat /yt/data"
                        }
                    ]
                }
            ]
        }
    },
    "basesearch_in_boxes" : {
        "spec_timestamp": 1,
        "pod_dynamic_attributes": {
            "annotations": {
                "attributes": [
                    {
                        "key": "pod.rbind.basesearch",
                        "value": "%true"
                    }
                ]
            }
        },
        "spec": {
            "revision": 1,
            "id": "TestBaseSearchInBoxes",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_TestBaseSearchSpec_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise_copy/layer.tar"
                    }
                ]
            },
            "boxes": [
                {
                    "id": "TestBaseSearchSpec_box",
                    "rootfs": {
                        "layer_refs": ["Layer_TestBaseSearchSpec_MyRootFS"]
                    },
                    "init": [
                        {
                            "command_line": "cat /basesearch/data"
                        }
                    ]
                }
            ]
        }
    },
    "rbind_volume" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestRbindVolumeSpec",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_TestRbindVolumeSpec_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise_copy/layer.tar"
                    }
                ]
            },
            "boxes": [
                {
                    "id": "TestRbindVolumeSpec_box",
                    "rootfs": {
                        "layer_refs": ["Layer_TestRbindVolumeSpec_MyRootFS"]
                    },
                    "volumes": [
                        {
                            "rbind_volume_ref": "rbind_volume_storage",
                            "mount_point": "/rbind_volume",
                            "mode": 1
                        }
                    ],
                    "init": [
                        {
                            "command_line": "cat /rbind_volume/data"
                        },
                        {
                            "command_line": "bash -c 'echo -n init_data > /rbind_volume/init_data'"
                        }
                    ]
                }
            ]
        }
    },
    "virtual_disks_spec" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestVirtualDisksSpec",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyRootFS_virtual_disk1",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise_copy/layer.tar",
                        "virtual_disk_id_ref": "virtual_disk1"
                    },
                    {
                        "id": "Layer_MyData_virtual_disk1",
                        "checksum": "MD5:b7e9081350a579d73d52f60d6fd11d11",
                        "url": "local:layer_small_data_0_copy/layer.tar.gz",
                        "virtual_disk_id_ref": "virtual_disk1"
                    },
                    {
                        "id": "Layer_MyRootFS_virtual_disk2",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise_copy/layer.tar",
                        "virtual_disk_id_ref": "virtual_disk2"
                    },
                    {
                        "id": "Layer_MyData_virtual_disk2",
                        "checksum": "MD5:b7e9081350a579d73d52f60d6fd11d11",
                        "url": "local:layer_small_data_0_copy/layer.tar.gz",
                        "virtual_disk_id_ref": "virtual_disk2"
                    }
                ]
            },
            "volumes": [
                {
                    "id": "test_volume_virtual_disk1",
                    "generic": {
                        "layer_refs": ["Layer_MyData_virtual_disk1"]
                    },
                    "virtual_disk_id_ref": "virtual_disk1"
                },
                {
                    "id": "test_volume_virtual_disk2",
                    "generic": {
                        "layer_refs": ["Layer_MyData_virtual_disk2"]
                    },
                    "virtual_disk_id_ref": "virtual_disk2"
                }
            ],
            "boxes": [
                {
                    "id": "test_box_virtual_disk1",
                    "rootfs": {
                        "layer_refs": ["Layer_MyRootFS_virtual_disk1"]
                    },
                    "volumes": [
                        {
                            "volume_ref": "test_volume_virtual_disk1",
                            "mount_point": "/data",
                            "mode": 1
                        }
                    ],
                    "virtual_disk_id_ref": "virtual_disk1"
                },
                {
                    "id": "test_box_virtual_disk2",
                    "rootfs": {
                        "layer_refs": ["Layer_MyRootFS_virtual_disk2"]
                    },
                    "volumes": [
                        {
                            "volume_ref": "test_volume_virtual_disk2",
                            "mount_point": "/data",
                            "mode": 1
                        }
                    ],
                    "virtual_disk_id_ref": "virtual_disk2"
                }
            ],
            "workloads": [
                {
                    "id": "MyWorkload_virtual_disk1",
                    "box_ref": "test_box_virtual_disk1",
                    "start": {
                        "compute_resources": {
                            "io_limit": [
                                {
                                    "virtual_disk_id_ref": "virtual_disk1",
                                    "type": 0,
                                    "value": 20000
                                },
                                {
                                    "virtual_disk_id_ref": "virtual_disk2",
                                    "type": 1,
                                    "value": 20000
                                }
                            ],
                            "io_ops_limit": [
                                {
                                    "virtual_disk_id_ref": "virtual_disk1",
                                    "type": 1,
                                    "value": 20000
                                },
                                {
                                    "virtual_disk_id_ref": "virtual_disk2",
                                    "type": 0,
                                    "value": 20000
                                }
                            ]
                        },
                        "command_line": "bash -c \"cat /data/my_file.txt /data/test_file.txt; sleep 60\""
                    },
                    "readiness_check": {
                        "container": {
                            "command_line": "echo readiness"
                        }
                    }
                },
                {
                    "id": "MyWorkload_virtual_disk2",
                    "box_ref": "test_box_virtual_disk2",
                    "start": {
                        "compute_resources": {
                            "io_limit": [
                                {
                                    "virtual_disk_id_ref": "virtual_disk1",
                                    "type": 0,
                                    "value": 20000
                                },
                                {
                                    "virtual_disk_id_ref": "virtual_disk2",
                                    "type": 1,
                                    "value": 20000
                                }
                            ],
                            "io_ops_limit": [
                                {
                                    "virtual_disk_id_ref": "virtual_disk1",
                                    "type": 1,
                                    "value": 20000
                                },
                                {
                                    "virtual_disk_id_ref": "virtual_disk2",
                                    "type": 0,
                                    "value": 20000
                                }
                            ]
                        },
                        "command_line": "bash -c \"cat /data/my_file.txt /data/test_file.txt; sleep 60\""
                    },
                    "readiness_check": {
                        "container": {
                            "command_line": "echo readiness"
                        }
                    }
                }
            ],
            "mutable_workloads": [
                {
                    "workload_ref": "MyWorkload_virtual_disk1",
                    "target_state": 0
                },
                {
                    "workload_ref": "MyWorkload_virtual_disk2",
                    "target_state": 0
                }
            ]
        }
    },
    "sensors_spec" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestSensorsSpec",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise/layer.tar"
                    }
                ]
            },
            "boxes": [
                {
                    "id": "TestBox",
                    "rootfs": {
                        "layer_refs": ["Layer_MyRootFS"]
                    },
                    "init": [
                        {
                            "command_line": "echo init0"
                        }
                    ]
                }
            ],
            "workloads": [
                {
                    "id": "MyWorkload1",
                    "box_ref": "TestBox",
                    "start": {
                        "command_line": "bash -c \"echo start; sleep 60\""
                    },
                    "readiness_check": {
                        "container": {
                            "command_line": "echo readiness"
                        }
                    },
                    "liveness_check": {
                        "tcp_check": {
                            "port": 12345,
                            "time_limit": {
                                "initial_delay_ms": 1000000000
                            }
                        },
                        "failure_threshold": 1000000000
                    },
                    "init": [
                        {
                            "command_line": "echo init0"
                        },
                        {
                            "command_line": "echo init1"
                        }
                    ],
                    "stop_policy": {
                        "http_get": {
                            "port": 12345,
                            "path": "/destroy"
                        },
                        "max_tries": 1

                    },
                    "destroy_policy": {
                        "container": {
                            "command_line": "echo stop"
                        },
                        "max_tries": 1
                    }
                },
                {
                    "id": "MyWorkload2",
                    "box_ref": "TestBox",
                    "start": {
                        "command_line": "bash -c \"echo start; sleep 60\""
                    },
                    "readiness_check": {
                        "container": {
                            "command_line": "echo readiness"
                        }
                    },
                    "init": [
                        {
                            "command_line": "echo init0"
                        },
                        {
                            "command_line": "echo init1"
                        },
                        {
                            "command_line": "echo init2"
                        }
                    ],
                    "stop_policy": {
                        "container": {
                            "command_line": "echo stop"
                        },
                        "max_tries": 1
                    },
                    "destroy_policy": {
                        "http_get": {
                            "port": 12345,
                            "path": "/destroy"
                        },
                        "max_tries": 1
                    }
                }
            ],
            "mutable_workloads": [
                {
                    "workload_ref": "MyWorkload1",
                    "target_state": 0
                },
                {
                    "workload_ref": "MyWorkload2",
                    "target_state": 0
                }
            ]
        }
    },
    "workload_no_readiness_spec" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestWorkloadNoReadiness",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise/layer.tar"
                    }
                ]
            },
            "boxes": [
                {
                    "id": "test_box",
                    "rootfs": {
                        "layer_refs": ["Layer_MyRootFS"]
                    }
                }
            ],
            "workloads": [
                {
                    "id": "MyWorkload",
                    "box_ref": "test_box",
                    "start": {
                        "command_line": "wrong_cmd"
                    }
                }
            ],
            "mutable_workloads": [
                {
                    "workload_ref": "MyWorkload",
                    "target_state": 0
                }
            ]
        }
    },
    "public_volume_spec" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestPublicVolume",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise/layer.tar"
                    }
                ]
            },
            "boxes": [
                {
                    "id": "test_box",
                    "rootfs": {
                        "layer_refs": ["Layer_MyRootFS"]
                    }
                }
            ],
            "workloads": [
                {
                    "id": "MyWorkload",
                    "box_ref": "test_box",
                    "start": {
                        "command_line": "bash -c 'echo start; sleep 1000'"
                    },
                    "readiness_check": {
                        "container": {
                            "command_line": "echo readiness"
                        }
                    },
                    "init": [
                        {
                            "command_line": "bash -c 'cat /pod_agent_public/human_readable_current_spec.json'"
                        },
                        {
                            "command_line": "bash -c 'echo read_only_test > /pod_agent_public/read_only_test && echo read_only_test_failed || echo read_only_test_ok'"
                        }
                    ]
                }
            ],
            "mutable_workloads": [
                {
                    "workload_ref": "MyWorkload",
                    "target_state": 0
                }
            ]
        }
    },
    "exec_wrapper_spec" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestExecWrapper",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise/layer.tar"
                    }
                ]
            },
            "boxes": [
                {
                    "id": "test_box",
                    "rootfs": {
                        "layer_refs": ["Layer_MyRootFS"]
                    },
                   "init": [
                        {
                            "command_line": "groupadd -g 41234 test_unique_group"
                        },
                        {
                            "command_line": "useradd -u 31234 -g 41234 test_unique_user"
                        }
                    ]
                }
            ],
            "workloads": [
                {
                    "id": "MyWorkload",
                    "box_ref": "test_box",
                    "start": {
                        "command_line": "bash -c 'echo $UID; sleep 1000'",
                        "user": "test_unique_user",
                        "group": "test_unique_group"
                    },
                    "readiness_check": {
                        "container": {
                            "command_line": "echo readiness",
                            "user": "test_unique_user",
                            "group": "test_unique_group"
                        }
                    },
                   "init": [
                        {
                            "command_line": "bash -c 'id -u; id -g'"
                        },
                        {
                            "command_line": "bash -c 'id -u -n; id -g -n'"
                        },
                        {
                            "command_line": "bash -c 'id -u; id -g'",
                            "user": "test_unique_user",
                            "group": "test_unique_group"
                        },
                        {
                            "command_line": "bash -c 'id -u -n; id -g -n'",
                            "user": "test_unique_user",
                            "group": "test_unique_group"
                        },
                        {
                            "command_line": "bash -c 'id -u; id -g'",
                            "user": "root",
                            "group": "test_unique_group"
                        },
                        {
                            "command_line": "bash -c 'id -u -n; id -g -n'",
                            "user": "root",
                            "group": "test_unique_group"
                        },
                        {
                            "command_line": "bash -c 'id -u; id -g'",
                            "user": "test_unique_user",
                            "group": "root"
                        },
                        {
                            "command_line": "bash -c 'id -u -n; id -g -n'",
                            "user": "test_unique_user",
                            "group": "root"
                        }
                    ]
                }
            ],
            "mutable_workloads": [
                {
                    "workload_ref": "MyWorkload",
                    "target_state": 0
                }
            ]
        }
    },
    "unix_signal_stop_spec" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestUnixSignalStop",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise/layer.tar"
                    }
                ]
            },
            "boxes": [
                {
                    "id": "test_box",
                    "rootfs": {
                        "layer_refs": ["Layer_MyRootFS"]
                    }
                }
            ],
            "workloads": [
                {
                    "id": "MyWorkloadWithUnixSignalStop",
                    "box_ref": "test_box",
                    "start": {
                        "command_line": "sleep 10000"
                    },
                    "readiness_check": {
                        "container": {
                            "command_line": "echo readiness"
                        }
                    },
                    "stop_policy": {
                        "unix_signal": {
                            "signal": 2
                        },
                        "max_tries": 3
                    }
                },
                {
                    "id": "MyWorkloadWithDefaultStop",
                    "box_ref": "test_box",
                    "start": {
                        "command_line": "bash -c 'echo start; sleep 10000'"
                    },
                    "readiness_check": {
                        "container": {
                            "command_line": "echo readiness"
                        }
                    }
                }
            ],
            "mutable_workloads": [
                {
                    "workload_ref": "MyWorkloadWithUnixSignalStop",
                    "target_state": 0
                },
                {
                    "workload_ref": "MyWorkloadWithDefaultStop",
                    "target_state": 0
                }
            ]
        }
    },
    "pod_agent_target_state_spec" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestPodAgentTargetState",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise/layer.tar"
                    }
                ]
            },
            "boxes": [
                {
                    "id": "test_box",
                    "rootfs": {
                        "layer_refs": ["Layer_MyRootFS"]
                    }
                }
            ],
            "workloads": [
                {
                    "id": "MyWorkload",
                    "box_ref": "test_box",
                    "start": {
                        "command_line": "bash -c 'echo start; sleep 10000'"
                    },
                    "readiness_check": {
                        "container": {
                            "command_line": "echo readiness"
                        }
                    }
                }
            ],
            "mutable_workloads": [
                {
                    "workload_ref": "MyWorkload",
                    "target_state": 0
                }
            ]
        }
    },
    "hidden_secrets_spec_and_dynamic_attributes" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestHiddenSecrets",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise/layer.tar"
                    }
                ]
            },
            "boxes": [
                {
                    "id": "test_box",
                    "rootfs": {
                        "layer_refs": ["Layer_MyRootFS"]
                    }
                }
            ],
            "workloads": [
                {
                    "id": "MyWorkload",
                    "box_ref": "test_box",
                    "start": {
                        "command_line": "bash -c 'echo start; sleep 1000'"
                    },
                    "readiness_check": {
                        "container": {
                            "command_line": "echo readiness"
                        }
                    }
                }
            ],
            "mutable_workloads": [
                {
                    "workload_ref": "MyWorkload",
                    "target_state": 0
                }
            ]
        },
        "secrets": [
            {
                "id": "MySecretAlias",
                "payload": [
                    {
                        "key": "MySecret",
                        "value": "my_secret"
                    },
                    {
                        "key": "MyBase64Secret",
                        "value": "bXlfYmFzZTY0X3NlY3JldA=="
                    }
                ],
                "values": [
                    {
                        "key": "MySecret",
                        "value": "my_secret"
                    },
                    {
                        "key": "MyBase64Secret",
                        "value": "bXlfYmFzZTY0X3NlY3JldA==",
                        "encoding": "base64"
                    }
                ]
            },
            {
                "id": "MySecretAlias2",
                "values": [
                    {
                        "key": "MyEmptySecret"
                    }
                ]
            }
        ],
        "pod_dynamic_attributes": {
            "labels": {
                "attributes": [
                    {
                        "key": "labels_map",
                        "value": "{\u0001\u001Cdeploy_unit_id=\u0001\u0014deployUnit;\u0001\blogs={\u0001\u001Edefault_logname=\u0001<staroverovad-stage-test-static;\u0001 delivery_enabled=\u0005;\u00014delivery_tvm_dst_client_id=\u0001\u000E2010882;\u0001\u001Alogs_endpoint=\u0001\u001Elocalhost:12500;\u00010ua_v2_protocol_supported=\u0005;};\u0001\u0014project_id=\u0001\u0004aa;\u0001\u0010stage_id=\u0001<staroverovad-stage-test-static;\u0001\u0012stage_url=\u0001>/staroverovad-stage-test-static;\u0001*unified_agent_version=\u0001\u001021.06.06;}"
                    }
                ]
            },
            "annotations": {
                "attributes": [
                    {
                        "key": "du_id",
                        "value": "\u0001\u0014deployUnit"
                    }
                ]
            }
        }
    },
    "volume_change_persistent_type" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestVolumeChangePersistentType",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise/layer.tar"
                    }
                ]
            },
            "volumes": [
                {
                    "id": "my_volume",
                    "generic": {
                    },
                    "persistence_type": 0
                }
            ],
            "boxes": [
                {
                    "id": "test_box",
                    "rootfs": {
                        "layer_refs": ["Layer_MyRootFS"]
                    },
                    "volumes": [
                        {
                            "volume_ref": "my_volume",
                            "mount_point": "/my_volume",
                            "mode": 1
                        }
                    ],
                    "init": [
                        {
                            "command_line": "bash -c '[ \"$(ls -A /my_volume)\" ] && echo volume_is_not_empty || echo volume_is_empty'"
                        },
                        {
                            "command_line": "bash -c 'touch /my_volume/test_file_$(date +%s)'"
                        }
                    ]
                }
            ],
            "workloads": [
                {
                    "id": "MyWorkload",
                    "box_ref": "test_box",
                    "start": {
                        "command_line": "bash -c 'echo start; sleep 1000'"
                    },
                    "readiness_check": {
                        "container": {
                            "command_line": "echo readiness"
                        }
                    }
                }
            ],
            "mutable_workloads": [
                {
                    "workload_ref": "MyWorkload",
                    "target_state": 0
                }
            ]
        }
    },
    "box_with_ro_rootfs_and_invalid_mount_points" : {
        "spec_timestamp": 1,
        "spec": {
            "revision": 1,
            "id": "TestBoxWithRoRootfsAndNotDirectoryMountPoints",
            "resources": {
                "layers": [
                    {
                        "id": "Layer_TestBoxWithRoRootfsAndNotDirectoryMountPoints_MyRootFS",
                        "checksum": "MD5:0efbc360afb38c519b2e59ae9dd20b01",
                        "url": "local:search_ubuntu_precise/layer.tar"
                    },
                    {
                        "id": "Layer_TestBoxWithRoRootfsAndNotDirectoryMountPoints_yt_basearch_podagentpublic_rbind",
                        "url": "https://proxy.sandbox.yandex-team.ru/2244065466",
                        "checksum": "MD5:b31be9ad147c384facf687eb29ec3c06"
                    }
                ]
            },
            "volumes": [
                {
                    "id": "my_volume",
                    "generic": {
                    }
                }
            ],
            "workloads": [
                {
                    "id": "MyWorkload",
                    "box_ref": "Test_box",
                    "start": {
                        "command_line": "bash -c 'echo start; sleep 1000'"
                    },
                    "readiness_check": {
                        "container": {
                            "command_line": "echo readiness"
                        }
                    }
                }
            ],
            "boxes": [
                {
                    "id": "Test_box",
                    "rootfs": {
                        "layer_refs": ["Layer_TestBoxWithRoRootfsAndNotDirectoryMountPoints_MyRootFS", "Layer_TestBoxWithRoRootfsAndNotDirectoryMountPoints_yt_basearch_podagentpublic_rbind"],
                        "create_mode": 1
                    },
                    "volumes": [
                        {
                            "volume_ref": "my_volume",
                            "mount_point": "/var/log"
                        }
                    ]
                }
            ],
            "mutable_workloads": [
                {
                    "workload_ref": "MyWorkload",
                    "target_state": 0
                }
            ]
        }
    }
}
