auth:
  staff:
    owners:
      logins:
      - ganintsev
      groups:
      - svc_trainbus_development
labels:
  order: '10000000'
---
regexp_section:
  matcher:
    match_fsm:
      host: '.*'
  modules:
    - report:   
        uuid: testing-trains-offer-storage-all                          
        ranges: default

    - request_replier:
        rate: 0
        sink:
          balancer2:
            attempts: 2
            fast_attempts: 3 
            attempts_rate_limiter:
              limit: 0.3
            dynamic:
              max_pessimized_share: 0.2
              active:
                use_backend_weight: false
                weight_normalization_coeff: 1
                delay: '1s'
                request: 'GET /ping HTTP/1.1\nUser-agent: l7-balancer-health_check\nHost: testing.offer-storage.internal.rasp.yandex.net\n\n'
            generated_proxy_backends:
              proxy_options: {}
              include_backends:
                type: BY_ID
                ids: [trains-offer-storage-testing.backend]

    - balancer2:
        rr: {}
        attempts: 2
        fast_attempts: 3 
        on_error:
          errordocument:
            status: 504
            content: "Service unavailable (Generated by L7-Balancer)"
        backends:
          - name: deploy
            weight: 100
            modules:
              - report:   
                  uuid: testing-trains-offer-storage-deploy                        
                  ranges: default
              - balancer2:
                  attempts: 3
                  fast_attempts: 3
                  attempts_rate_limiter:
                    limit: 0.3
                  retry_policy:  # Strange workaround to make return_last_5xx working. From L7 support chat
                    unique_policy: {}
                  return_last_5xx: true        
                  status_code_blacklist: ['5xx']
                  dynamic:
                    max_pessimized_share: 0.2
                    active:
                      use_backend_weight: false
                      weight_normalization_coeff: 1
                      delay: '1s'
                      request: 'GET /ping HTTP/1.1\nUser-agent: l7-balancer-health_check\nHost: testing.offer-storage.internal.rasp.yandex.net\n\n'
                  generated_proxy_backends:
                    proxy_options:
                      backend_timeout: 60s
                      connect_timeout: 200ms
                      keepalive_count: 3
                      fail_on_5xx: false
                    include_backends:
                      type: BY_ID
                      ids: [trains-offer-storage-testing.backend]
          - name: qloud
            weight: -1
            modules:
            - report:   
                  uuid: testing-trains-offer-storage-qloud                        
                  ranges: default
            - balancer2:
                  attempts: 2
                  fast_attempts: 3 
                  attempts_rate_limiter:
                    limit: 0.3
                  retry_policy:  # Strange workaround to make return_last_5xx working. From L7 support chat
                    unique_policy: {}
                  return_last_5xx: true        
                  status_code_blacklist: ['5xx']
                  dynamic:
                    max_pessimized_share: 0.2
                    active:
                      use_backend_weight: false
                      weight_normalization_coeff: 1
                      delay: '1s'
                      request: 'GET /ping HTTP/1.1\nUser-agent: l7-balancer-health_check\nHost: train-offer-storage-test.stable.qloud-b.yandex.net\n\n'
                  generated_proxy_backends:
                    proxy_options:
                      backend_timeout: 60s
                      connect_timeout: 200ms
                      keepalive_count: 3
                      fail_on_5xx: false
                    include_backends:
                      type: BY_ID
                      ids: [train-offer-storage-test.stable.qloud-b.backend]
              
