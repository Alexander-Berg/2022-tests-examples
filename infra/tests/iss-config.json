{
    "agent" : {
        "aliveMarkerAllowedAge" : "600s",
        "check_persist_volume_presence_in_hostconfig" : true,
        "crls" : {
            "internal_ca" : {
                "cache_file" : "crls/internal_ca.crl",
                "url" : "http://crls.yandex.ru/YandexInternalCA/YandexInternalCA.crl"
            }
        },
        "datomdb" : {
            "maxBatchSize" : 1024,
            "maxMutableDatoms" : 10000
        },
        "defaultStorage" : "/place",
        "directories_size_cache_settings" : {
            "cache_duration" : "5m",
            "enabled" : true,
            "implementation" : "gcache",
            "records_limit" : 100
        },
        "downloads_scheduler" : {
            "active_owner_multiplier" : 1000,
            "copier_expected_memory_footprint" : "30m",
            "copier_schema_base_weight" : 10,
            "enable" : true,
            "failure_penalty_power" : 2,
            "http_expected_memory_footprint" : "15k",
            "http_schema_base_weight" : 100,
            "incremental_shard_penalty" : 5,
            "linearized_oomed_tasks" : true,
            "max_concurrency" : 10,
            "queue_capacity" : 20,
            "unknown_schema_base_weight" : -10
        },
        "dump_json_retry_delay" : "20s",
        "dynamic_resources" : {
            "cleanup_policy" : "pending",
            "invalidate_instance_on_missing_resources" : false,
            "max_depth_before_next_sync" : 8,
            "reset_parent_driver_status" : true,
            "retries" : 10
        },
        "enableExtendedMetrics" : false,
        "feedback" : {
            "feedHistoryQueueSize" : 10,
            "feedbackDrainTimeout" : "10s",
            "logGrabCoolDownPeriod" : "1m",
            "logGrabSize" : "1kB",
            "maxSizePerInstance" : "200kB",
            "onlyFullStateFeedback" : false,
            "resendPeriod" : "30m",
            "states_allowed_to_exposed_to_unistat" : [
                "PORTO_TIMEOUT",
                "DAEMON_EXITED",
                "PORTO_FAILURE",
                "VOLUME_CREATION_FAILED",
                "PORTO_UNAVAILABLE",
                "META_CONTAINER_WAS_RECREATED",
                "DOWNLOAD_FAILED",
                "PORTO_CRITICAL_FAILURE"
            ],
            "timingThresholdWarning" : "1m"
        },
        "fetcher" : {
            "containerized" : {
                "constraints" : {
                    "anon_limit" : 497286400,
                    "memory_limit" : 557286400,
                    "oom_is_fatal" : false
                },
                "copier_containerized" : false,
                "fetcher" : {
                    "additional_sky_get_options" : "",
                    "allowed_uuid_format" : "^[a-zA-Z0-9_\\-@:,.]+",
                    "container_grab_cooldown_ms" : 2000,
                    "container_stdout_limit_bytes" : 5000,
                    "debug_mode_on" : false,
                    "id_label" : "id",
                    "labels_prefix" : "RES",
                    "length_random_key_for_containers_without_uuid" : 12,
                    "max_porto_container_name_length" : 110,
                    "progress_report_frequency_ms" : 2000,
                    "progress_version" : "1",
                    "reserved_word_for_empty_or_bad_resource_id" : "VOID",
                    "url_delimiter_to_replace_slash" : "-",
                    "use_subproc_option" : false
                },
                "http_containerized" : true,
                "meta_name" : "meta",
                "root_prefix" : "ISS-R"
            },
            "fastTaskPoolSize" : 5,
            "filesTimeout" : "5m",
            "progressive_skynet_policy" : {
                "local_failure_max_period" : "5m",
                "minimal_timeout" : "0s",
                "no_such_resource_max_period" : "30m",
                "non_local_failure_max_period" : "30m",
                "unknown_failure_max_period" : "5m"
            },
            "resource_driver_settings" : {
                "default_cooldown" : "1m",
                "recheck_period" : "30s",
                "release_download_slot_after_reservation_retries_failed" : 10
            },
            "skynet_cooldown_policy" : "progressive",
            "slowTaskPoolSize" : 5
        },
        "fs" : {
            "walkTimeout" : "10s"
        },
        "gc" : {
            "delayBeforeSpecialGcCleanup" : "1s",
            "fullSyncsBeforeSpecialGcCleanup" : 1,
            "processGCLogWarnDuration" : "10m",
            "volumeGCDelay" : "5m",
            "volumeGCEnabled" : true
        },
        "hook_behaviour" : {
            "rerunStatusHooksOnAgentRestart" : true
        },
        "hostConfiguration" : {
            "primaryProvider" : {
                "connection" : {
                    "connectionTimeout" : "30s",
                    "retryCount" : 2,
                    "retryTimeout" : "1s"
                },
                "host" : "iss3sas.yandex-team.ru",
                "mergePolicy" : "withRespectToDeltas",
                "port" : 9092,
                "ssl" : {
                    "certificate_bundle_file" : "/etc/certs/capi.pem",
                    "crl_ref" : "internal_ca",
                    "peer_cn_pattern" : "iss3sas.yandex-team.ru",
                    "trusted_pem_files" : [
                        "certs/YandexInternalCA.pem"
                    ]
                },
                "type" : "thrift"
            },
            "providersNumber" : 0,
            "secondaryProvider" : {
                "connection" : {
                    "connectionTimeout" : "30s",
                    "retryCount" : 2,
                    "retryTimeout" : "1s"
                },
                "host" : "iss3.yandex-team.ru",
                "mergePolicy" : "withRespectToDeltas",
                "port" : 9092,
                "ssl" : {
                    "certificate_bundle_file" : "/etc/certs/capi.pem",
                    "crl_ref" : "internal_ca",
                    "peer_cn_pattern" : "iss3.yandex-team.ru",
                    "trusted_pem_files" : [
                        "certs/YandexInternalCA.pem"
                    ]
                },
                "type" : "thrift"
            },
            "ypProvider" : {
                "allowApply" : true,
                "enabled" : true,
                "heartbeatInterval" : "1m",
                "host" : "man-pre.yp.yandex.net",
                "inbound_max_message_size_bytes" : 4194304,
                "notify" : {
                    "port" : 25540
                },
                "outbound_max_message_size_bytes" : 5194304,
                "port" : 8084,
                "ssl" : {
                    "certificate_bundle_file" : "/etc/certs/capi.pem",
                    "crl_ref" : "internal_ca"
                }
            }
        },
        "install_hook_scheduler" : {
            "active_goal_factor" : 10,
            "age_threshold" : "5m",
            "aging_additional_factor" : 0.2,
            "default_weight_for_unknown_goal" : 0,
            "enable" : true,
            "hook_type" : "iss_hook_install",
            "how_many_prepared_instances_for_additional_weights" : 1,
            "id" : "install",
            "max_concurrency" : 4,
            "prepared_goal_factor" : 5,
            "queue_capacity" : 20,
            "slot_has_another_active_instance_factor" : -0.1,
            "slot_has_no_active_instances_factor" : 0.1,
            "use_aging" : false
        },
        "ipAwaiting" : {
            "executor" : {
                "poolSize" : 1,
                "queueSize" : 4
            },
            "http" : {
                "bodyTailSize" : "128b",
                "connectTimeout" : "2s",
                "readTimeout" : "2s",
                "urlTemplate" : "http://127.0.0.1:9876/ip_address_ready?ip=%s"
            },
            "strategy" : "http",
            "timeLimits" : {
                "maxExecutionTime" : "5s",
                "minRestartPeriod" : "1m"
            }
        },
        "jar" : {
            "dir" : "/db/iss3"
        },
        "jmx" : {
            "jolokia" : {
                "policyLocation" : "classpath:/jolokia.policy"
            },
            "mp" : {
                "port" : 25537
            }
        },
        "jsonDynamicPropertyFiles" : [
            "platform-properties.json"
        ],
        "loggingSettingsPath" : "./",
        "monitor" : {
            "feedback_states" : [
                "ACTIVE",
                "SKYNET_FAILURE",
                "HOOK_FAILED",
                "HOOK_SEMI_FAILED",
                "PREPARED",
                "ENTITY_RESOURCES_NOT_READY",
                "PORTO_FAILURE"
            ]
        },
        "pod_api" : {
            "mount_point" : "/run/iss",
            "unix_socket_path" : "pod_api/pod.socket"
        },
        "porto" : {
            "async" : {
                "dispatcher" : {
                    "cache" : {
                        "layer" : {
                            "write" : "15m"
                        },
                        "volume" : {
                            "write" : "15m"
                        }
                    }
                },
                "poolSize" : 9,
                "timeouts" : {
                    "createVolume" : {
                        "requestTimeout" : "10m"
                    },
                    "default" : {
                        "connectTimeout" : "20s",
                        "requestTimeout" : "20s"
                    },
                    "importLayer" : {
                        "requestTimeout" : "10m"
                    },
                    "linkVolume" : {
                        "requestTimeout" : "10m"
                    },
                    "removeLayer" : {
                        "requestTimeout" : "10m"
                    },
                    "unlinkVolume" : {
                        "requestTimeout" : "10m"
                    }
                }
            },
            "blocking_async_pool" : {
                "capacity" : 10,
                "worker_wait_for_socket_timeout" : "1m"
            },
            "defaultUlimit" : "nofile: 102400 204800",
            "metaProcessContainer" : "ISS-AGENT",
            "porto_operation_time_warn_threshold_seconds" : 40,
            "propertyListProvider" : {
                "restrictedList" : {
                    "data" : [
                        "max_rss",
                        "time",
                        "cpu_usage"
                    ],
                    "properties" : []
                },
                "type" : "restrict"
            },
            "socketPath" : "/run/portod.socket",
            "socketTimeOut" : 8000,
            "use_target_property" : true,
            "volume_allowed_properties" : [
                "read_only"
            ],
            "volume_storage_type" : "iss",
            "waitTimeout" : "1s",
            "workers" : 2
        },
        "preemptionStrategy" : "preempt-implicitly-removed",
        "printPostMortem" : true,
        "reopenlogs" : {
            "akkaTimeout" : "10m",
            "retries" : 5
        },
        "root" : ".",
        "rootOnStorage" : "db/iss3",
        "secure_webapp" : {
            "port" : 25539,
            "ssl" : {
                "certificate_bundle_file" : "/etc/certs/capi.pem",
                "crl_ref" : "internal_ca",
                "trusted_pem_files" : [
                    "certs/YandexInternalCA.pem"
                ]
            }
        },
        "shardtracker" : {
            "cacheLifeTime" : "5m",
            "host" : "shardtracker.search.yandex.net",
            "port" : 9100,
            "timeout" : "3s"
        },
        "spaceToLeaveOnDisk" : "10g",
        "state" : {
            "migrator" : "_",
            "path_to_initial_startup_marker" : "/db/iss3/_initial_start_marker",
            "statePreallocatedSizeMb" : 100,
            "stateRollover" : "legacy",
            "stateStoragePath" : "/iss3",
            "unbound_migrator" : {
                "backup_if_states_exists_in_destination" : false,
                "backup_postfix" : "backup",
                "force_override_states_in_destination" : false,
                "keep_old_states_with_postfix" : true,
                "source" : "/db/iss3",
                "storage" : "/iss3"
            }
        },
        "stdout" : {
            "suppress" : "true"
        },
        "storageMountPoints" : [
            "/ssd",
            "/place"
        ],
        "sync" : {
            "autoSyncPeriod" : "60s",
            "autoUpdatePeriod" : "60s",
            "minResyncPeriod" : "500ms"
        },
        "task_scheduler_metrics" : {
            "time_window" : "3m"
        },
        "tmp" : "/iss3/tmp",
        "versionInfo" : {
            "buildAuthor" : "UNKNOWN",
            "buildTimestamp" : "1551202453351",
            "revision" : "UNKNOWN",
            "version" : "3.5-SNAPSHOT"
        },
        "webapp" : {
            "pool_size" : 10,
            "port" : "25536",
            "queue_size" : 20,
            "request_timeout_ms" : 120000
        }
    },
    "akka" : {
        "actor" : {
            "creation-timeout" : "20s",
            "debug" : {
                "autoreceive" : "off",
                "event-stream" : "off",
                "fsm" : "off",
                "lifecycle" : "off",
                "receive" : "off",
                "router-misconfiguration" : "off",
                "unhandled" : "off"
            },
            "default-dispatcher" : {
                "attempt-teamwork" : "on",
                "default-executor" : {
                    "fallback" : "fork-join-executor"
                },
                "executor" : "fork-join-executor",
                "fork-join-executor" : {
                    "parallelism-factor" : 1,
                    "parallelism-max" : 3,
                    "parallelism-min" : 1
                },
                "mailbox-requirement" : "",
                "shutdown-timeout" : "1s",
                "thread-pool-executor" : {
                    "allow-core-timeout" : "on",
                    "core-pool-size-factor" : 3,
                    "core-pool-size-max" : 64,
                    "core-pool-size-min" : 8,
                    "keep-alive-time" : "60s",
                    "max-pool-size-factor" : 3,
                    "max-pool-size-max" : 64,
                    "max-pool-size-min" : 8,
                    "task-queue-size" : -1,
                    "task-queue-type" : "linked"
                },
                "throughput" : 5,
                "throughput-deadline-time" : "0ms",
                "type" : "Dispatcher"
            },
            "default-mailbox" : {
                "mailbox-capacity" : 1000,
                "mailbox-push-timeout-time" : "10s",
                "mailbox-type" : "akka.dispatch.UnboundedMailbox",
                "stash-capacity" : -1
            },
            "deployment" : {
                "default" : {
                    "dispatcher" : "",
                    "mailbox" : "",
                    "nr-of-instances" : 1,
                    "resizer" : {
                        "backoff-rate" : 0.1,
                        "backoff-threshold" : 0.3,
                        "enabled" : "off",
                        "lower-bound" : 1,
                        "messages-per-resize" : 10,
                        "pressure-threshold" : 1,
                        "rampup-rate" : 0.2,
                        "upper-bound" : 10
                    },
                    "routees" : {
                        "paths" : []
                    },
                    "router" : "from-code",
                    "virtual-nodes-factor" : 10,
                    "within" : "5 seconds"
                }
            },
            "dsl" : {
                "default-timeout" : "5s",
                "inbox-size" : 1000
            },
            "guardian-supervisor-strategy" : "akka.actor.DefaultSupervisorStrategy",
            "mailbox" : {
                "bounded-deque-based" : {
                    "mailbox-type" : "akka.dispatch.BoundedDequeBasedMailbox"
                },
                "bounded-queue-based" : {
                    "mailbox-type" : "akka.dispatch.BoundedMailbox"
                },
                "requirements" : {
                    "akka.dispatch.BoundedDequeBasedMessageQueueSemantics" : "akka.actor.mailbox.bounded-deque-based",
                    "akka.dispatch.BoundedMessageQueueSemantics" : "akka.actor.mailbox.bounded-queue-based",
                    "akka.dispatch.DequeBasedMessageQueueSemantics" : "akka.actor.mailbox.unbounded-deque-based",
                    "akka.dispatch.MultipleConsumerSemantics" : "akka.actor.mailbox.unbounded-queue-based",
                    "akka.dispatch.UnboundedDequeBasedMessageQueueSemantics" : "akka.actor.mailbox.unbounded-deque-based",
                    "akka.dispatch.UnboundedMessageQueueSemantics" : "akka.actor.mailbox.unbounded-queue-based",
                    "ru.yandex.iss.utils.EvictingUnboundedMessageQueueSemantics" : "evicting-dispatcher-mailbox"
                },
                "unbounded-deque-based" : {
                    "mailbox-type" : "akka.dispatch.UnboundedDequeBasedMailbox"
                },
                "unbounded-queue-based" : {
                    "mailbox-type" : "akka.dispatch.UnboundedMailbox"
                }
            },
            "provider" : "akka.actor.LocalActorRefProvider",
            "reaper-interval" : "5s",
            "router" : {
                "type-mapping" : {
                    "balancing-pool" : "akka.routing.BalancingPool",
                    "broadcast-group" : "akka.routing.BroadcastGroup",
                    "broadcast-pool" : "akka.routing.BroadcastPool",
                    "consistent-hashing-group" : "akka.routing.ConsistentHashingGroup",
                    "consistent-hashing-pool" : "akka.routing.ConsistentHashingPool",
                    "from-code" : "akka.routing.NoRouter",
                    "random-group" : "akka.routing.RandomGroup",
                    "random-pool" : "akka.routing.RandomPool",
                    "round-robin-group" : "akka.routing.RoundRobinGroup",
                    "round-robin-pool" : "akka.routing.RoundRobinPool",
                    "scatter-gather-group" : "akka.routing.ScatterGatherFirstCompletedGroup",
                    "scatter-gather-pool" : "akka.routing.ScatterGatherFirstCompletedPool",
                    "smallest-mailbox-pool" : "akka.routing.SmallestMailboxPool"
                }
            },
            "serialization-bindings" : {
                "[B" : "bytes",
                "java.io.Serializable" : "java"
            },
            "serialize-creators" : "off",
            "serialize-messages" : "off",
            "serializers" : {
                "bytes" : "akka.serialization.ByteArraySerializer",
                "java" : "akka.serialization.JavaSerializer"
            },
            "typed" : {
                "timeout" : "5s"
            },
            "unstarted-push-timeout" : "10s"
        },
        "daemonic" : "off",
        "extensions" : [],
        "home" : "",
        "io" : {
            "pinned-dispatcher" : {
                "executor" : "thread-pool-executor",
                "thread-pool-executor" : {
                    "allow-core-pool-timeout" : "off"
                },
                "type" : "PinnedDispatcher"
            },
            "tcp" : {
                "batch-accept-limit" : 10,
                "direct-buffer-pool-limit" : 1000,
                "direct-buffer-size" : "128 KiB",
                "file-io-dispatcher" : "akka.actor.default-dispatcher",
                "file-io-transferTo-limit" : "512 KiB",
                "finish-connect-retries" : 5,
                "management-dispatcher" : "akka.actor.default-dispatcher",
                "max-channels" : 256000,
                "max-received-message-size" : "unlimited",
                "nr-of-selectors" : 1,
                "register-timeout" : "5s",
                "selector-association-retries" : 10,
                "selector-dispatcher" : "akka.io.pinned-dispatcher",
                "trace-logging" : "off",
                "worker-dispatcher" : "akka.actor.default-dispatcher"
            },
            "udp" : {
                "direct-buffer-pool-limit" : 1000,
                "direct-buffer-size" : "128 KiB",
                "management-dispatcher" : "akka.actor.default-dispatcher",
                "max-channels" : 4096,
                "nr-of-selectors" : 1,
                "receive-throughput" : 3,
                "received-message-size-limit" : "unlimited",
                "select-timeout" : "infinite",
                "selector-association-retries" : 10,
                "selector-dispatcher" : "akka.io.pinned-dispatcher",
                "trace-logging" : "off",
                "worker-dispatcher" : "akka.actor.default-dispatcher"
            },
            "udp-connected" : {
                "direct-buffer-pool-limit" : 1000,
                "direct-buffer-size" : "128 KiB",
                "management-dispatcher" : "akka.actor.default-dispatcher",
                "max-channels" : 4096,
                "nr-of-selectors" : 1,
                "receive-throughput" : 3,
                "received-message-size-limit" : "unlimited",
                "select-timeout" : "infinite",
                "selector-association-retries" : 10,
                "selector-dispatcher" : "akka.io.pinned-dispatcher",
                "trace-logging" : "off",
                "worker-dispatcher" : "akka.actor.default-dispatcher"
            }
        },
        "jvm-exit-on-fatal-error" : "on",
        "log-config-on-start" : "off",
        "log-dead-letters" : 10,
        "log-dead-letters-during-shutdown" : "on",
        "logger-startup-timeout" : "25s",
        "loggers" : [
            "akka.event.slf4j.Slf4jLogger"
        ],
        "loglevel" : "ERROR",
        "scheduler" : {
            "implementation" : "akka.actor.LightArrayRevolverScheduler",
            "shutdown-timeout" : "5s",
            "tick-duration" : "10ms",
            "ticks-per-wheel" : 512
        },
        "stdout-loglevel" : "WARNING",
        "version" : "2.3.3"
    },
    "awt" : {
        "toolkit" : "sun.awt.X11.XToolkit"
    },
    "currentEnv" : "PROD",
    "evicting-dispatcher" : {
        "mailbox-requirement" : "ru.yandex.iss.utils.EvictingUnboundedMessageQueueSemantics"
    },
    "evicting-dispatcher-mailbox" : {
        "mailbox-capacity" : 1000,
        "mailbox-type" : "ru.yandex.iss.utils.EvictingMailbox"
    },
    "file" : {
        "encoding" : {
            "pkg" : "sun.io"
        },
        "separator" : "/"
    },
    "java" : {
        "awt" : {
            "graphicsenv" : "sun.awt.X11GraphicsEnvironment",
            "printerjob" : "sun.print.PSPrinterJob"
        },
        "class" : {
            "path" : "/db/iss3/iss-agent.jar",
            "version" : "52.0"
        },
        "endorsed" : {
            "dirs" : "/place/db/iss3/jre/jre/lib/endorsed"
        },
        "ext" : {
            "dirs" : "/place/db/iss3/jre/jre/lib/ext:/usr/java/packages/lib/ext"
        },
        "home" : "/place/db/iss3/jre/jre",
        "io" : {
            "tmpdir" : "/place/db/iss3/tmp/ISS-AGENT"
        },
        "library" : {
            "path" : "/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"
        },
        "net" : {
            "preferIPv6Addresses" : "true"
        },
        "runtime" : {
            "name" : "Java(TM) SE Runtime Environment",
            "version" : "1.8.0_152-b16"
        },
        "specification" : {
            "name" : "Java Platform API Specification",
            "vendor" : "Oracle Corporation",
            "version" : "1.8"
        },
        "vendor" : {
            "url" : {
                "bug" : "http://bugreport.sun.com/bugreport/"
            }
        },
        "version" : "1.8.0_152",
        "vm" : {
            "info" : "mixed mode",
            "name" : "Java HotSpot(TM) 64-Bit Server VM",
            "specification" : {
                "name" : "Java Virtual Machine Specification",
                "vendor" : "Oracle Corporation",
                "version" : "1.8"
            },
            "vendor" : "Oracle Corporation",
            "version" : "25.152-b16"
        }
    },
    "line" : {
        "separator" : "\n"
    },
    "local" : {
        "agent" : {
            "webapp" : {
                "pool_size" : 10,
                "port" : 25536,
                "queue_size" : 20,
                "request_timeout_ms" : 120000
            }
        },
        "configuration_filter" : {
            "cache" : {
                "expire_after" : "1m",
                "max_entries" : 100
            }
        },
        "configurations" : {
            "cache" : {
                "expire_after" : "2m",
                "max_entries" : 1000
            },
            "loading_timeout" : "10s"
        },
        "creator" : {
            "threads" : 1
        },
        "event_repository" : {
            "size" : 1024
        },
        "filter" : {
            "threads" : 1
        },
        "instance_filter" : {
            "cache" : {
                "expire_after" : "1m",
                "max_entries" : 1000
            }
        },
        "loader" : {
            "threads" : 1
        },
        "pusher" : {
            "agent_port" : 25536,
            "host" : "::",
            "http_transport_enabled" : true,
            "max_connections" : 1000,
            "port" : 9999,
            "timeout" : "1000ms"
        },
        "response_writer" : {
            "threads" : 1
        },
        "template_service" : {
            "cache" : {
                "expire_after" : "1m",
                "max_entries" : 10
            }
        },
        "validator" : {
            "max_errors_for_rule" : 100,
            "threads" : 8
        }
    },
    "os" : {
        "arch" : "amd64",
        "name" : "Linux",
        "version" : "4.4.114-50"
    },
    "path" : {
        "separator" : ":"
    },
    "pusher" : {
        "port" : 9999
    },
    "remote" : {
        "host" : "::",
        "port" : 0
    },
    "servlet-dispatcher" : {
        "executor" : "thread-pool-executor",
        "thread-pool-executor" : {
            "core-pool-size-factor" : 1,
            "core-pool-size-max" : 2,
            "core-pool-size-min" : 0
        },
        "type" : "Dispatcher"
    },
    "sun" : {
        "arch" : {
            "data" : {
                "model" : "64"
            }
        },
        "boot" : {
            "class" : {
                "path" : "/place/db/iss3/jre/jre/lib/resources.jar:/place/db/iss3/jre/jre/lib/rt.jar:/place/db/iss3/jre/jre/lib/sunrsasign.jar:/place/db/iss3/jre/jre/lib/jsse.jar:/place/db/iss3/jre/jre/lib/jce.jar:/place/db/iss3/jre/jre/lib/charsets.jar:/place/db/iss3/jre/jre/lib/jfr.jar:/place/db/iss3/jre/jre/classes:jre/lib/tools.jar"
            },
            "library" : {
                "path" : "/place/db/iss3/jre/jre/lib/amd64"
            }
        },
        "cpu" : {
            "endian" : "little",
            "isalist" : ""
        },
        "io" : {
            "unicode" : {
                "encoding" : "UnicodeLittle"
            }
        },
        "java" : {
            "command" : "/db/iss3/iss-agent.jar --config /db/iss3/application.conf",
            "launcher" : "SUN_STANDARD"
        },
        "jnu" : {
            "encoding" : "ANSI_X3.4-1968"
        },
        "management" : {
            "compiler" : "HotSpot 64-Bit Tiered Compilers"
        },
        "net" : {
            "inetaddr" : {
                "negative" : {
                    "ttl" : "10"
                },
                "ttl" : "10"
            }
        },
        "os" : {
            "patch" : {
                "level" : "unknown"
            }
        }
    },
    "system" : {
        "env" : {
            "HOME" : "/place/db/iss3",
            "MALLOC_ARENA_MAX" : "2",
            "PATH" : "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:",
            "PORTO_HOST" : "sas3-0626.search.yandex.net",
            "PORTO_NAME" : "iss-agent",
            "PORTO_USER" : "loadbase",
            "USER" : "loadbase",
            "container" : "lxc"
        }
    },
    "user" : {
        "country" : "US",
        "dir" : "/place/db/iss3",
        "home" : "/home/loadbase",
        "language" : "en",
        "name" : "loadbase",
        "timezone" : "Europe/Moscow"
    }
}
