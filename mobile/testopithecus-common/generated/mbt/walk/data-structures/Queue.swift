// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mbt/walk/data-structures/queue.ts >>>

import Foundation

open class Queue<T> {
  public var q1: YSArray<T> = YSArray()
  public var q2: YSArray<T> = YSArray()
  open func push(_ item: T) -> Void {
    self.q1.push(item)
  }

  open func pop() -> Void {
    self.move()
    self.q2.pop()
  }

  open func clear() -> Void {
    self.q1 = YSArray()
    self.q2 = YSArray()
  }

  @discardableResult
  open func size() -> Int32 {
    return self.q1.length + self.q2.length
  }

  @discardableResult
  open func front() -> T {
    self.move()
    return self.q2[self.q2.length - 1]
  }

  private func move() -> Void {
    if self.q2.length > 0 {
      return
    }
    while self.q1.length > 0 {
      let element = self.q1.pop()
      self.q2.push(element!)
    }
  }

}

