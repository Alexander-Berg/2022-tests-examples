// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mbt/actions/assert-action.ts >>>

import Foundation

open class AssertAction: MBTAction {
  public static var type: MBTActionType = "Assert"
  @discardableResult
  open func supported(_ _modelFeatures: YSArray<FeatureID>, _ _applicationFeatures: YSArray<FeatureID>) -> Bool {
    return true
  }

  @discardableResult
  open func canBePerformed(_ _model: App) -> Bool {
    return true
  }

  @discardableResult
  open func perform(_ model: App, _ application: App, _ history: MBTHistory) throws -> MBTComponent {
    let currentComponent = history.currentComponent
    (try currentComponent.assertMatches(model, application))
    return currentComponent
  }

  @discardableResult
  open func getActionType() -> MBTActionType {
    return AssertAction.type
  }

  @discardableResult
  open func events() -> YSArray<EventusEvent> {
    return YSArray()
  }

  @discardableResult
  open func tostring() -> String {
    return self.getActionType()
  }

}

