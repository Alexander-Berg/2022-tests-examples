// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM users/user-pool.ts >>>

import Foundation

public typealias Uid = String

open class UserAccount {
  public var login: String
  public var password: String
  public var uid: Uid
  public init(_ login: String, _ password: String, _ uid: Uid = "") {
    self.login = login
    self.password = password
    self.uid = uid
  }

}

open class OAuthUserAccount {
  public var account: UserAccount
  public var oauthToken: String!
  public let type: AccountType2
  public init(_ account: UserAccount, _ oauthToken: String!, _ type: AccountType2) {
    self.account = account
    self.oauthToken = oauthToken
    self.type = type
  }

}

public protocol UserLock {
  @discardableResult
  func lockedAccount() -> UserAccount
  func ping(_ newLockTtlMs: Int64) -> Void
  func release() -> Void
}

public protocol UserPool {
  @discardableResult
  func tryAcquire(_ tryAcquireTimeoutMs: Int64, _ lockTtlMs: Int64) -> UserLock!
  func reset() -> Void
}

