// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM tests/tab-bar-tests.ts >>>

package com.yandex.xplat.testopithecus

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*
import com.yandex.xplat.eventus.*
import com.yandex.xplat.mapi.*
import com.yandex.xplat.testopithecus.common.*

public open class TabBarOpenCalendarTest(): RegularYandexMailTestBase("TabBar. Открытие календаря") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(10447)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
        mailbox.nextMessage("subject")
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(AssertAction()).then(TabBarTapOnItemAction(TabBarItem.calendar))
    }

}

public open class TabBarOpenTelemostTest(): RegularYandexMailTestBase("TabBar. Открытие телемоста") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(10452)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
        mailbox.nextMessage("subject")
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(AssertAction()).then(TabBarTapOnItemAction(TabBarItem.telemost))
    }

}

public open class TabBarOpenDocumentsTest(): RegularYandexMailTestBase("TabBar. Открытие документов") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(12232)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(AssertAction()).then(TabBarTapOnItemAction(TabBarItem.documents))
    }

}

public open class TabBarOpenMoreTabTest(): RegularYandexMailTestBase("TabBar. Открытие вкладки Еще") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(10457)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
        mailbox.nextMessage("subject")
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(AssertAction()).then(TabBarTapOnItemAction(TabBarItem.more))
    }

}

public open class TabBarItemsYandexLandscapeTest(): RegularYandexMailTestBase("TabBar. Элементы таб бара у Яндекс аккаунта в лендскейп") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(10432)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
        mailbox.nextMessage("subject")
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(AssertAction()).then(RotateToLandscape())
    }

}

public open class TabBarCalendarDateLabelTest(): RegularYandexMailTestBase("TabBar. Текущая дата на иконке Календаря") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(10437)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
        mailbox.nextMessage("subject")
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account)
    }

}

public open class TabBarShownInMailListTest(): RegularYandexMailTestBase("TabBar. Наличие таб бара в списке писем") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(10438)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
        mailbox.nextMessage("subject").createFolder("UserFolder").createLabel(LabelData("UserLabel"))
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(AssertAction()).then(OpenFolderListAction()).then(GoToFolderAction("UserFolder")).then(AssertAction()).then(OpenFolderListAction()).then(GoToFilterImportantAction()).then(AssertAction()).then(OpenFolderListAction()).then(GoToLabelAction("UserLabel"))
    }

}

public open class TabBarNotShownInMailViewTest(): RegularYandexMailTestBase("TabBar. Отсутствие таб бара в Просмотре письма") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(10439)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
        mailbox.nextMessage("subject")
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(OpenMessageAction(0))
    }

}

public open class TabBarNotShownInSearchTest(): RegularYandexMailTestBase("TabBar. Отсутствие таб бара в Поиске") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(10440)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
        mailbox.nextMessage("subject")
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(OpenSearchAction()).then(AssertAction()).then(SearchAllMessagesAction())
    }

}

public open class TabBarNotShownInComposeTest(): RegularYandexMailTestBase("TabBar. Отсутствие таб бара в Компоузе") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(10441)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
        mailbox.nextMessage("subject")
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(ComposeOpenAction())
    }

}

public open class TabBarNotShownInSettingsTest(): RegularYandexMailTestBase("TabBar. Отсутствие таб бара в Настройках") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(10442)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
        mailbox.nextMessage("subject")
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(OpenFolderListAction()).then(OpenSettingsAction())
    }

}

public open class TabBarNotShownInFolderListTest(): RegularYandexMailTestBase("TabBar. Отсутствие таб бара в Списке папок") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(10443)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
        mailbox.nextMessage("subject")
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(OpenFolderListAction())
    }

}

public open class TabBarHideInGroupModeTest(): RegularYandexMailTestBase("TabBar. Перекрытие таб бара тулбаром при переходе в режим групповых операций") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(10445)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
        mailbox.nextMessage("subject")
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(GroupModeInitialSelectAction(0)).then(AssertAction()).then(RotateToLandscape())
    }

}

public open class ShtorkaOpenNotesTest(): RegularYandexMailTestBase("Shtorka. Открытие заметок, если приложение Яндекс.Диск не установлено") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(10492)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
        mailbox.switchFolder("UserFolder").nextMessage("subject")
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(OpenFolderListAction()).then(GoToFolderAction("UserFolder")).then(TabBarTapOnItemAction(TabBarItem.more)).then(AssertAction()).then(ShtorkaTapOnItemAction(TabBarItem.notes))
    }

}

public open class ShtorkaOpenDiskTest(): RegularYandexMailTestBase("Shtorka. Открытие Диска, если приложение Диск не установлено") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(10572)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
        mailbox.switchFolder("UserFolder").nextMessage("subject")
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(OpenFolderListAction()).then(GoToFolderAction("UserFolder")).then(TabBarTapOnItemAction(TabBarItem.more)).then(AssertAction()).then(ShtorkaTapOnItemAction(TabBarItem.disk))
    }

}

public open class ShtorkaCloseBySwipeTest(): RegularYandexMailTestBase("Shtorka. Закрытие шторки свайпом вниз") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(10498)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(TabBarTapOnItemAction(TabBarItem.more)).then(AssertAction()).then(ShtorkaCloseBySwipeAction())
    }

}

public open class ShtorkaCloseByTapOverTest(): RegularYandexMailTestBase("Shtorka. Закрытие шторки при тапе на область над шторкой") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(10497)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(OpenFolderListAction()).then(GoToFilterImportantAction()).then(TabBarTapOnItemAction(TabBarItem.more)).then(AssertAction()).then(ShtorkaCloseByTapOverAction())
    }

}

