// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/components/translator/source-language-list-component.ts >>>

package com.yandex.xplat.testopithecus

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*
import com.yandex.xplat.eventus.*
import com.yandex.xplat.mapi.*
import com.yandex.xplat.testopithecus.common.*

public open class SourceLanguageListComponent: MBTComponent {
    open override fun getComponentType(): MBTComponentType {
        return SourceLanguageListComponent.type
    }

    open override fun assertMatches(model: App, application: App): Unit {
        val modelTranslatorLanguageList = TranslatorLanguageListFeature.`get`.castIfSupported(model)
        val appTranslatorLanguageList = TranslatorLanguageListFeature.`get`.castIfSupported(application)
        if (modelTranslatorLanguageList != null && appTranslatorLanguageList != null) {
            val modelCurrentSourceLanguage = modelTranslatorLanguageList.getCurrentSourceLanguage()
            val appCurrentSourceLanguage = appTranslatorLanguageList.getCurrentSourceLanguage()
            assertTrue(modelCurrentSourceLanguage == appCurrentSourceLanguage, "Current source language is incorrect")
            val modelDeterminedAutomaticallySourceLanguage = modelTranslatorLanguageList.getDeterminedAutomaticallySourceLanguage()
            val appDeterminedAutomaticallySourceLanguage = appTranslatorLanguageList.getDeterminedAutomaticallySourceLanguage()
            assertStringEquals(modelDeterminedAutomaticallySourceLanguage, appDeterminedAutomaticallySourceLanguage, "Determined automatically source language is incorrect")
            val modelRecentSourceLanguages = modelTranslatorLanguageList.getRecentSourceLanguages()
            val appRecentSourceLanguages = appTranslatorLanguageList.getRecentSourceLanguages()
            assertInt32Equals(modelRecentSourceLanguages.size, appRecentSourceLanguages.size, "Incorrect number of recent languages")
            for (modelLanguage in modelRecentSourceLanguages) {
                assertTrue(appRecentSourceLanguages.contains(modelLanguage), "Application list of recent source languages not include ${modelLanguage}")
            }
        }
    }

    open override fun tostring(): String {
        return this.getComponentType()
    }

    companion object {
        @JvmStatic val type: String = "TranslatorSourceLanguageListComponent"
    }
}

