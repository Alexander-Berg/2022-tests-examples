// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/components/folder-manager/manage-folders-component.ts >>>

package com.yandex.xplat.testopithecus

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*
import com.yandex.xplat.eventus.*
import com.yandex.xplat.mapi.*
import com.yandex.xplat.testopithecus.common.*

public open class ManageFoldersComponent: MBTComponent {
    open override fun getComponentType(): String {
        return ManageFoldersComponent.type
    }

    open override fun assertMatches(model: App, application: App): Unit {
        val manageableFolderModel = ManageableFolderFeature.`get`.castIfSupported(model)
        val manageableFolderApplication = ManageableFolderFeature.`get`.castIfSupported(application)
        if (manageableFolderModel != null && manageableFolderApplication != null) {
            val folderListModel = manageableFolderModel.getFolderListForManageFolderScreen().map( {
                folder ->
                folder.split("|").reverse()[0]
            })
            val folderListApplication = manageableFolderApplication.getFolderListForManageFolderScreen().map( {
                folder ->
                folder.split("|").reverse()[0]
            })
            assertInt32Equals(folderListModel.size, folderListApplication.size, "Different number of folders")
            for (folder in folderListModel) {
                assertBooleanEquals(true, folderListApplication.contains(folder), "Missing folder ${folder}")
            }
        }
    }

    open override fun tostring(): String {
        return this.getComponentType()
    }

    companion object {
        @JvmStatic val type: String = "ManageFoldersComponent"
    }
}

public open class ManageFoldersActions: MBTComponentActions {
    open override fun getActions(_model: App): YSArray<MBTAction> {
        val actions: YSArray<MBTAction> = mutableListOf()
        return actions
    }

}

