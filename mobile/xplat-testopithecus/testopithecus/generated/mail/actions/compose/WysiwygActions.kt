// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/actions/compose/wysiwyg-actions.ts >>>

package com.yandex.xplat.testopithecus

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*
import com.yandex.xplat.eventus.*
import com.yandex.xplat.mapi.*
import com.yandex.xplat.testopithecus.common.*

public abstract class WysiwygBaseAction(type: MBTActionType): BaseSimpleAction<WYSIWIG, MBTComponent>(type) {
    open override fun requiredFeature(): Feature<WYSIWIG> {
        return WysiwygFeature.`get`
    }

    open override fun events(): YSArray<EventusEvent> {
        return mutableListOf()
    }

}

public open class ClearFormatting(private var from: Int, private var to: Int): WysiwygBaseAction(ClearFormatting.type) {
    open override fun performImpl(modelOrApplication: WYSIWIG, _currentComponent: MBTComponent): MBTComponent {
        modelOrApplication.clearFormatting(this.from, this.to)
        return ComposeComponent()
    }

    open override fun tostring(): String {
        return "ClearFormatting(from=${this.from}, to=${this.to})"
    }

    companion object {
        @JvmStatic val type: MBTActionType = "ClearFormatting"
    }
}

public open class SetStrong(private var from: Int, private var to: Int): WysiwygBaseAction(SetStrong.type) {
    open override fun performImpl(modelOrApplication: WYSIWIG, _currentComponent: MBTComponent): MBTComponent {
        modelOrApplication.setStrong(this.from, this.to)
        return ComposeComponent()
    }

    open override fun tostring(): String {
        return "SetStrong(from=${this.from}, to=${this.to})"
    }

    companion object {
        @JvmStatic val type: MBTActionType = "SetStrong"
    }
}

public open class SetItalic(private var from: Int, private var to: Int): WysiwygBaseAction(SetItalic.type) {
    open override fun performImpl(modelOrApplication: WYSIWIG, _currentComponent: MBTComponent): MBTComponent {
        modelOrApplication.setItalic(this.from, this.to)
        return ComposeComponent()
    }

    open override fun tostring(): String {
        return "SetItalic(from=${this.from}, to=${this.to})"
    }

    companion object {
        @JvmStatic val type: MBTActionType = "SetItalic"
    }
}

public open class AppendToBody(private var index: Int, private var text: String): WysiwygBaseAction(AppendToBody.type) {
    open override fun performImpl(modelOrApplication: WYSIWIG, _currentComponent: MBTComponent): MBTComponent {
        modelOrApplication.appendText(this.index, this.text)
        return ComposeComponent()
    }

    open override fun tostring(): String {
        return "AppendToBody(index=${this.index}, text=${this.text})"
    }

    companion object {
        @JvmStatic val type: MBTActionType = "AppendToBody"
    }
}

