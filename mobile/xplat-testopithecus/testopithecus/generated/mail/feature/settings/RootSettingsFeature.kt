// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/feature/settings/root-settings-feature.ts >>>

package com.yandex.xplat.testopithecus

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*
import com.yandex.xplat.eventus.*
import com.yandex.xplat.mapi.*
import com.yandex.xplat.testopithecus.common.*

public open class RootSettingsFeature private constructor(): Feature<RootSettings>("RootSettings", "Корневой экран настроек, достуный по тапу на кнопку \"Настройки\"." + " В iOS - отдельный экран с возможностью перехода в General и Account и About settings," + " в Android - слит воедино с экраном General settings.") {
    companion object {
        @JvmStatic var `get`: RootSettingsFeature = RootSettingsFeature()
    }
}

public interface RootSettings {
    fun openRootSettings(): Unit
    fun isAboutCellExists(): Boolean
    fun isHelpAndFeedbackCellExists(): Boolean
    fun getAccounts(): YSArray<String>
    fun getTitle(): String
    fun closeRootSettings(): Unit
}

public open class AndroidRootSettingsFeature private constructor(): Feature<AndroidRootSettings>("AndroidRootSettingsFeature", "Специфичные для Android главные настройки.") {
    companion object {
        @JvmStatic var `get`: AndroidRootSettingsFeature = AndroidRootSettingsFeature()
    }
}

public interface AndroidRootSettings {
    fun addAccount(): Unit
    fun isAddAccountCellExists(): Boolean
}

public open class IOSRootSettingsFeature private constructor(): Feature<IOSRootSettings>("IOSRootSettingsFeature", "Специфичные для iOS главные настройки.") {
    companion object {
        @JvmStatic var `get`: IOSRootSettingsFeature = IOSRootSettingsFeature()
    }
}

public interface IOSRootSettings {
    fun isGeneralSettingsCellExists(): Boolean
}

