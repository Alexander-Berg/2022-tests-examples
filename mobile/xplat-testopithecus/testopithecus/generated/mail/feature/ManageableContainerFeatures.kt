// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/feature/manageable-container-features.ts >>>

package com.yandex.xplat.testopithecus

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*
import com.yandex.xplat.eventus.*
import com.yandex.xplat.mapi.*
import com.yandex.xplat.testopithecus.common.*

public open class ManageableFolderFeature private constructor(): Feature<ManageableFolder>("ManageableFolder", "Создание/изменение/удаление папок. Открывается из списка папок.") {
    companion object {
        @JvmStatic var `get`: ManageableFolderFeature = ManageableFolderFeature()
    }
}

public interface ManageableFolder {
    fun openFolderManager(): Unit
    fun closeFolderManager(): Unit
    fun openCreateFolderScreen(): Unit
    fun closeCreateFolderScreen(): Unit
    fun enterNameForNewFolder(folderName: FolderName): Unit
    fun getCurrentNewFolderName(): FolderName
    fun getCurrentParentFolderForNewFolder(): String
    fun submitNewFolder(): Unit
    fun openEditFolderScreen(folderName: FolderName, parentFolders: YSArray<FolderName>): Unit
    fun closeEditFolderScreen(): Unit
    fun enterNameForEditedFolder(folderName: FolderName): Unit
    fun getCurrentEditedFolderName(): FolderName
    fun getCurrentParentFolderForEditedFolder(): String
    fun submitEditedFolder(): Unit
    fun selectParentFolder(parentFolders: YSArray<FolderName>): Unit
    fun openFolderLocationScreen(): Unit
    fun getFolderListForFolderLocationScreen(): YSArray<FolderName>
    fun closeFolderLocationScreen(): Unit
    fun deleteFolder(folderDisplayName: FolderName, parentFolders: YSArray<FolderName>, deletionMethod: ContainerDeletionMethod): Unit
    fun getFolderListForManageFolderScreen(): YSArray<FolderName>
}

public open class CreatableFolderFeature private constructor(): Feature<CreatableFolder>("CreatableFolder", "TODO: добрый человек, напиши тут, про что эта фича") {
    companion object {
        @JvmStatic var `get`: CreatableFolderFeature = CreatableFolderFeature()
    }
}

public interface CreatableFolder {
    fun createFolder(folderDisplayName: String): Unit
}

public open class ManageableLabelFeature private constructor(): Feature<ManageableLabel>("ManageableLabel", "Создание/изменение/удаление меток. Открывается из списка папок.") {
    companion object {
        @JvmStatic var `get`: ManageableLabelFeature = ManageableLabelFeature()
    }
}

public interface ManageableLabel {
    fun openLabelManager(): Unit
    fun closeLabelManager(): Unit
    fun openCreateLabelScreen(): Unit
    fun closeCreateLabelScreen(): Unit
    fun enterNameForNewLabel(labelName: LabelName): Unit
    fun getCurrentNewLabelName(): LabelName
    fun setNewLabelColor(index: Int): Unit
    fun getCurrentNewLabelColorIndex(): Int
    fun submitNewLabel(): Unit
    fun openEditLabelScreen(labelName: LabelName): Unit
    fun closeEditLabelScreen(): Unit
    fun enterNameForEditedLabel(labelName: LabelName): Unit
    fun getCurrentEditedLabelName(): LabelName
    fun getCurrentEditedLabelColorIndex(): Int
    fun setEditedLabelColor(index: Int): Unit
    fun submitEditedLabel(): Unit
    fun deleteLabel(labelName: LabelName, deletionMethod: ContainerDeletionMethod): Unit
    fun getLabelList(): YSArray<LabelName>
}

public open class CreatableLabelFeature(): Feature<CreatableLabel>("CreatableLabel", "Фича для создания и удаления метки из списка меток. Открывается через меню письма.") {
    companion object {
        @JvmStatic var `get`: CreatableLabelFeature = CreatableLabelFeature()
    }
}

public interface CreatableLabel {
    fun createLabel(labelName: String): Unit
    fun removeLabel(labelName: String): Unit
}

public enum class ContainerDeletionMethod {
    longSwipe,
    shortSwipe,
    tap,
}
