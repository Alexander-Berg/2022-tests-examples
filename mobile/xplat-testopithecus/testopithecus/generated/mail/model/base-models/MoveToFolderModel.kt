// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/model/base-models/move-to-folder-model.ts >>>

package com.yandex.xplat.testopithecus

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*
import com.yandex.xplat.eventus.*
import com.yandex.xplat.mapi.*
import com.yandex.xplat.testopithecus.common.*

public open class MoveToFolderModel(private var accHandler: MailAppModelHandler, private var openMessageModel: OpenMessageModel, private var contextMenuModel: ContextMenuModel, private var messageListDisplayModel: MessageListDisplayModel, private var groupModeModel: GroupModeModel): MoveToFolder {
    private fun getMids(): YSArray<MessageId>? {
        if (this.openMessageModel.isMessageOpened()) {
            return mutableListOf(this.openMessageModel.openedMessage)
        }
        val contextMenuOrder = this.contextMenuModel.getOrderOfMessageWithOpenedContextMenu()
        if (contextMenuOrder != -1) {
            return mutableListOf(this.messageListDisplayModel.getMessageId(contextMenuOrder))
        }
        val groupModeSelectedOrders = this.groupModeModel.getSelectedMessages()
        if (groupModeSelectedOrders.size > 0) {
            return this.messageListDisplayModel.getMidsByOrders(groupModeSelectedOrders)
        }
        return null
    }

    open override fun tapOnCreateFolder(): Unit {
    }

    open override fun getFolderList(): YSArray<FolderName> {
        return this.accHandler.getCurrentAccount().messagesDB.getFolderList()
    }

    open override fun tapOnFolder(folderName: FolderName): Unit {
        val currAccount = this.accHandler.getCurrentAccount()
        for (mid in requireNonNull(this.getMids(), "There is no opened/selected messages")) {
            if (this.openMessageModel.isMessageOpened()) {
                currAccount.messagesDB.moveMessageToFolder(mid, folderName)
            } else {
                val midsToMove: YSArray<MessageId> = if (currAccount.accountSettings.groupBySubjectEnabled) currAccount.messagesDB.getMessagesInThreadByMid(mid) else mutableListOf(mid)
                midsToMove.forEach( {
                    mid ->
                    currAccount.messagesDB.moveMessageToFolder(mid, folderName)
                })
            }
        }
        this.contextMenuModel.close()
        this.groupModeModel.unselectAllMessages()
    }

}

