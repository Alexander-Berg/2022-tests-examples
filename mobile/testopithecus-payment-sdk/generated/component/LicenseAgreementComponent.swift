// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM component/license-agreement-component.ts >>>

import Foundation

open class LicenseAgreementComponent: MBTComponent {
  public static let type: String = "LicenseAgreementComponent"
  @discardableResult
  open func assertMatches(_ model: App, _ application: App) throws -> Void {
    let modelLicenseAgreementFeature: LicenseAgreement! = LicenseAgreementFeature.`get`.castIfSupported(model)
    let appLicenseAgreementFeature: LicenseAgreement! = LicenseAgreementFeature.`get`.castIfSupported(application)
    if modelLicenseAgreementFeature != nil && appLicenseAgreementFeature != nil {
      let modelLicenseAgreement = (try modelLicenseAgreementFeature.getFullLicenseAgreement())
      let appLicenseAgreement = (try appLicenseAgreementFeature.getFullLicenseAgreement())
      (try assertStringEquals(modelLicenseAgreement, appLicenseAgreement, "Incorrect License agreement full text"))
    }
  }

  @discardableResult
  open func getComponentType() -> MBTComponentType {
    return LicenseAgreementComponent.type
  }

  @discardableResult
  open func tostring() -> String {
    return self.getComponentType()
  }

}

