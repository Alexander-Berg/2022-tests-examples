// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM component/sbp-extended-banks-list-component.ts >>>

import Foundation

open class SbpExtendedBanksListComponent: MBTComponent {
  @discardableResult
  open func assertMatches(_ model: App, _ application: App) throws -> Void {
    let appFeature = SbpExtendedBanksListFeature.`get`.forceCast(application)
    (try assertTrue((try appFeature.waitForInterface(PaymentSdkConstants.SCREEN_APPEARANCE_TIMEOUT)), "Extended banks list does not load in \(PaymentSdkConstants.SCREEN_APPEARANCE_TIMEOUT) milliseconds"))
    let modelFeature = SbpExtendedBanksListFeature.`get`.forceCast(model)
    let appShowEmpty = (try appFeature.isEmptyMessageDisplayed())
    let modelShowEmpty = (try modelFeature.isEmptyMessageDisplayed())
    (try assertTrue(appShowEmpty == modelShowEmpty, "Incorect state of empty message"))
    if !appShowEmpty {
      let appBanks = appFeature.getBanksList()
      let modelBanks = modelFeature.getBanksList()
      (try assertTrue(appBanks.length == modelBanks.length, "Incorrect banks list length"))
      for bank in modelBanks {
        (try assertTrue(appBanks.includes(bank), "Incorrect bank"))
      }
    }
  }

  @discardableResult
  open func getComponentType() -> MBTComponentType {
    return "SbpExtendedBanksListComponent"
  }

  @discardableResult
  open func tostring() -> String {
    return self.getComponentType()
  }

}

