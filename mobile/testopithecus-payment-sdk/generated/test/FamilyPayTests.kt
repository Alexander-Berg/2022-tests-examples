// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM test/family-pay-tests.ts >>>

package com.yandex.xplat.testopithecus.payment.sdk

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*
import com.yandex.xplat.testopithecus.common.*
import com.yandex.xplat.payment.sdk.*

public open class FamilyPayCheckUnbindButtonForOneCard(): MBTTest<PaymentDataPreparer>("${TestScenario.cardBinding} Unbind button is disabled for method list with one family pay card ") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.commonCase(150)
    }

    open override fun prepareAccounts(preparers: YSArray<PaymentDataPreparer>): Unit {
        preparers[0].setPaymentMethodsFilter(PaymentMethodsFilter(true, false, false, false)).addBoundCard(BoundCard.generated()).setFamilyInfoMode(FamilyInfoMode.enabled_high_allowance)
    }

    open override fun requiredAccounts(): YSArray<AccountType2> {
        return mutableListOf(AccountType2.YandexTest)
    }

    open override fun scenario(accounts: YSArray<UserAccount>, model: AppModel?, supportedFeatures: YSArray<FeatureID>): TestPlan {
        return TestPlan.empty().then(OpenSampleAppAction()).then(AssertAction()).then(StartPreselectPaymentProcessAction()).then(SetPaymentButtonStatusAction(true))
    }

}

public open class FamilyPayCheckUnbindButtonForSeveralCards(): MBTTest<PaymentDataPreparer>("${TestScenario.cardBinding} Unbind button gets disabled for method list when only family pay card is left after unbind ") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.commonCase(151)
    }

    open override fun prepareAccounts(preparers: YSArray<PaymentDataPreparer>): Unit {
        preparers[0].setPaymentMethodsFilter(PaymentMethodsFilter(true, false, false, false)).addBoundCard(BoundCard.generated()).addBoundCard(BoundCard.generated()).setFamilyInfoMode(FamilyInfoMode.enabled_high_allowance)
    }

    open override fun requiredAccounts(): YSArray<AccountType2> {
        return mutableListOf(AccountType2.YandexTest)
    }

    open override fun scenario(accounts: YSArray<UserAccount>, model: AppModel?, supportedFeatures: YSArray<FeatureID>): TestPlan {
        return TestPlan.empty().then(OpenSampleAppAction()).then(StartPreselectPaymentProcessAction()).then(SetPaymentButtonStatusAction(true)).then(TapOnEditButtonAction()).then(AssertAction()).then(UnbindCardAction(0))
    }

}

