// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM action/keyboard-actions.ts >>>

import Foundation

open class MinimizeKeyboardAction: MBTAction {
  public static let type: MBTActionType = "MinimizeKeyboardAction"
  public init() {
  }

  @discardableResult
  open func supported(_ modelFeatures: YSArray<FeatureID>, _ applicationFeatures: YSArray<FeatureID>) -> Bool {
    return KeyboardFeature.`get`.includedAll(modelFeatures, applicationFeatures)
  }

  @discardableResult
  open func canBePerformed(_ model: App) throws -> Bool {
    let modelKeyboard = KeyboardFeature.`get`.forceCast(model)
    return (try modelKeyboard.isKeyboardShown())
  }

  @discardableResult
  open func perform(_ model: App, _ application: App, _ history: MBTHistory) throws -> MBTComponent {
    let modelKeyboard = KeyboardFeature.`get`.forceCast(model)
    let appKeyboard = KeyboardFeature.`get`.forceCast(application)
    (try modelKeyboard.minimizeKeyboard())
    (try appKeyboard.minimizeKeyboard())
    return history.currentComponent
  }

  @discardableResult
  open func events() -> YSArray<EventusEvent> {
    return YSArray()
  }

  @discardableResult
  open func tostring() -> String {
    return "MinimizeKeyboardAction"
  }

  @discardableResult
  open func getActionType() -> String {
    return MinimizeKeyboardAction.type
  }

}

