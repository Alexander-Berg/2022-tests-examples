// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM action/device-orientation-actions.ts >>>

import Foundation

open class RotateDeviceAction: BaseSimpleAction<DeviceOrientationProvider, MBTComponent> {
  public static let type: MBTActionType = "RotateDeviceAction"
  private let orientation: DeviceOrientation
  public init(_ orientation: DeviceOrientation, _ unusedValue: String = TestopithecusConstants.SWIFT_CONSTRUCTOR_VARIABLE_WORKAROUND_TITLE) {
    self.orientation = orientation
    super.init(RotateDeviceAction.type)
  }

  @discardableResult
  open override func performImpl(_ modelOrApplication: DeviceOrientationProvider, _ currentComponent: MBTComponent) throws -> MBTComponent {
    (try modelOrApplication.rotate(self.orientation))
    return currentComponent
  }

  @discardableResult
  open override func requiredFeature() -> Feature<DeviceOrientationProvider> {
    return DeviceOrientationFeature.`get`
  }

  @discardableResult
  open override func events() -> YSArray<EventusEvent> {
    return YSArray()
  }

}

