// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mock-backend/mock-backend-utils.ts >>>

import Foundation

@discardableResult
public func getHttpOAuth(_ request: HttpRequest) -> String! {
  let auth: String! = getRequestHeader(request.headers, "Authorization")
  if auth == nil {
    return nil
  }
  let parts = auth!.split(" ")
  if parts.length != 2 {
    return nil
  }
  return parts[1]
}

@discardableResult
public func getRequestHeader(_ headers: YSMap<String, String>, _ header: String) -> String! {
  let headerToCompare = header.lowercased()
  for key in headers.keys() {
    if key.lowercased() == headerToCompare {
      return undefinedToNull(headers.get(key))
    }
  }
  return nil
}

@discardableResult
public func tryGetRequestHeader(_ headers: YSMap<String, String>, _ header: String) throws -> String {
  let result: String! = getRequestHeader(headers, header)
  if result == nil {
    throw YSError("Failed to query request headers for key \"\(header)\"")
  }
  return result!
}

@discardableResult
public func extractMockRequest<T>(_ bodyString: String, _ serializer: JSONSerializer, _ parse: @escaping (JSONItem) -> Result<T>) -> Result<T> {
  let deserialized = serializer.deserialize(bodyString)
  if deserialized.isError() {
    return resultError(deserialized.getError())
  }
  let json = deserialized.getValue()
  let parsed = parse(json)
  if parsed.isError() {
    return resultError(parsed.getError())
  }
  return resultValue(parsed.getValue())
}

