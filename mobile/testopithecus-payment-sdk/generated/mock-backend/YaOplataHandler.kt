// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mock-backend/ya-oplata-handler.ts >>>

package com.yandex.xplat.testopithecus.payment.sdk

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*
import com.yandex.xplat.testopithecus.common.*
import com.yandex.xplat.payment.sdk.*

public open class YaOplataHandler(private val trustModel: MockTrustModel, private val jsonSerializer: JSONSerializer): HttpRequestHandler {
    open override fun handleRequest(request: HttpRequest): HttpResponse {
        if (request.url.startsWith("/yaoplata/v1/order")) {
            val acquirer = getAcquirerByToken(getRequestHeader(request.headers, "Authorization")!!)
            val body = ArrayBufferHelpers.arrayBufferToString(request.body, Encoding.Utf8)
            val req = extractMockRequest(body.getValue(), this.jsonSerializer,  {
                item ->
                decodeAmountFromYaOplataCreateOrderRequest(item)
            })
            val amount = req.getValue()
            this.trustModel.createYaOplataOrder(amount, YaOplataMockConstants.token, acquirer)
            return YaPaymentCreateOrderResponse(amount).toHttpResponse(this.jsonSerializer)
        }
        return makeErrorHttpResponse("Unstubbed", this.jsonSerializer)
    }

}

