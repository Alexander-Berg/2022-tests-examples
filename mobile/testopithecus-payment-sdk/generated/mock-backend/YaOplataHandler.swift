// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mock-backend/ya-oplata-handler.ts >>>

import Foundation

open class YaOplataHandler: HttpRequestHandler {
  private let trustModel: MockTrustModel
  private let jsonSerializer: JSONSerializer
  public init(_ trustModel: MockTrustModel, _ jsonSerializer: JSONSerializer) {
    self.trustModel = trustModel
    self.jsonSerializer = jsonSerializer
  }

  @discardableResult
  open func handleRequest(_ request: HttpRequest) -> HttpResponse {
    if request.url.startsWith("/yaoplata/v1/order") {
      let acquirer = getAcquirerByToken(getRequestHeader(request.headers, "Authorization")!)
      let body = ArrayBufferHelpers.arrayBufferToString(request.body, Encoding.Utf8)
      let req = extractMockRequest(body.getValue(), self.jsonSerializer, {
        (item) in
        decodeAmountFromYaOplataCreateOrderRequest(item)
      })
      let amount = req.getValue()
      self.trustModel.createYaOplataOrder(amount, YaOplataMockConstants.token, acquirer)
      return YaPaymentCreateOrderResponse(amount).toHttpResponse(self.jsonSerializer)
    }
    return makeErrorHttpResponse("Unstubbed", self.jsonSerializer)
  }

}

