// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mock-backend/network/mock-preparation-responses.ts >>>

package com.yandex.xplat.testopithecus.payment.sdk

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*
import com.yandex.xplat.testopithecus.common.*
import com.yandex.xplat.payment.sdk.*

public open class TrustPaymentsOrdersResponse(val orderId: String) {
    open fun toHttpResponse(jsonSerializer: JSONSerializer): HttpResponse {
        return HttpResponseBuilder().setCode(200).setBodyText(jsonSerializer.serialize(MapJSONItem().putString("status", "success").putString("status_code", "created").putString("order_id", this.orderId).putString("product_id", "some_id").putString("order_status", "order_created")).getValue()).build()
    }

}

public open class TrustPaymentsPaymentsResponse(val token: String) {
    open fun toHttpResponse(jsonSerializer: JSONSerializer): HttpResponse {
        return HttpResponseBuilder().setCode(200).setBodyText(jsonSerializer.serialize(MapJSONItem().putString("status", "success").putString("status_code", "payment_created").putString("purchase_token", this.token)).getValue()).build()
    }

}

public open class TusGetAccountResponse {
    open fun toHttpResponse(jsonSerializer: JSONSerializer): HttpResponse {
        return HttpResponseBuilder().setCode(200).setBodyText(jsonSerializer.serialize(MapJSONItem().putString("status", "ok").putString("passport_environment", "testing").put("account", MapJSONItem().putString("delete_at", "None").putString("locked_until", "2023-01-26 10:26:58.706900").putString("login", "local-test-yandex-team").putString("password", "password").putString("uid", "1234567890"))).getValue()).build()
    }

}

public open class TusGetTokenResponse {
    open fun toHttpResponse(jsonSerializer: JSONSerializer): HttpResponse {
        return HttpResponseBuilder().setCode(200).setBodyText(jsonSerializer.serialize(MapJSONItem().putString("access_token", "AAAADEADBEEFDEADBEEF").putString("expires_in", "99999999").putString("token_type", "bearer").putString("uid", "1234567890")).getValue()).build()
    }

}

public fun makeErrorHttpResponse(message: String, jsonSerializer: JSONSerializer): HttpResponse {
    return HttpResponseBuilder().setCode(500).setBodyText(jsonSerializer.serialize(MapJSONItem().putString("status", "error").putString("status_desc", message)).getValue()).build()
}

public fun makeSuccessHttpResponse(jsonSerializer: JSONSerializer): HttpResponse {
    return HttpResponseBuilder().setCode(200).setBodyText(jsonSerializer.serialize(MapJSONItem().putString("status", "success")).getValue()).build()
}

