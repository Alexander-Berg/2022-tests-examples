// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mock-backend/mock-backend-utils.ts >>>

package com.yandex.xplat.testopithecus.payment.sdk

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*
import com.yandex.xplat.testopithecus.common.*
import com.yandex.xplat.payment.sdk.*

public fun getHttpOAuth(request: HttpRequest): String? {
    val auth = getRequestHeader(request.headers, "Authorization")
    if (auth == null) {
        return null
    }
    val parts = auth!!.split(" ")
    if (parts.size != 2) {
        return null
    }
    return parts[1]
}

public fun getRequestHeader(headers: YSMap<String, String>, header: String): String? {
    val headerToCompare = header.toLowerCase()
    for (key in headers.keys()) {
        if (key.toLowerCase() == headerToCompare) {
            return undefinedToNull(headers.get(key))
        }
    }
    return null
}

public fun tryGetRequestHeader(headers: YSMap<String, String>, header: String): String {
    val result = getRequestHeader(headers, header)
    if (result == null) {
        throw YSError("Failed to query request headers for key \"${header}\"")
    }
    return result!!
}

public fun <T> extractMockRequest(bodyString: String, serializer: JSONSerializer, parse: (JSONItem) -> Result<T>): Result<T> {
    val deserialized = serializer.deserialize(bodyString)
    if (deserialized.isError()) {
        return resultError(deserialized.getError())
    }
    val json = deserialized.getValue()
    val parsed = parse(json)
    if (parsed.isError()) {
        return resultError(parsed.getError())
    }
    return resultValue(parsed.getValue())
}

