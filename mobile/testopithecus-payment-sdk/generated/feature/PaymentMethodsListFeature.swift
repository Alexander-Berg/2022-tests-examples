// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM feature/payment-methods-list-feature.ts >>>

import Foundation

open class PaymentMethodsListFeature: Feature<PaymentMethodsList> {
  public static var `get`: PaymentMethodsListFeature = PaymentMethodsListFeature()
  private init() {
    super.init("PaymentMethodsListFeature", "Represent payment methods list")
  }

}

public protocol PaymentMethodsList {
  @discardableResult
  func waitForPaymentMethods(_ mSec: Int32) throws -> Bool
  @discardableResult
  func getMethods() -> YSArray<String>
  @discardableResult
  func selectMethod(_ index: Int32) throws -> Void
  @discardableResult
  func getSelected() throws -> Int32
  @discardableResult
  func tapOnCvvField() throws -> Void
  @discardableResult
  func setCvvFieldValue(_ cvv: String) throws -> Void
  @discardableResult
  func getCvvFieldValue() throws -> String!
  @discardableResult
  func clickNewCard() throws -> Void
  @discardableResult
  func selectSbpMethod() throws -> Void
  @discardableResult
  func getMethodsListMode() throws -> MethodsListMode
}

open class PreselectFeature: Feature<Preselect> {
  public static var `get`: PreselectFeature = PreselectFeature()
  private init() {
    super.init("PreselectFeature", "Specific for Preselect mode actions")
  }

}

public protocol Preselect {
  @discardableResult
  func selectCash() throws -> Void
  @discardableResult
  func isCashSelected() throws -> Bool
  @discardableResult
  func tapOnSelectButton() throws -> Void
  @discardableResult
  func tapOnOtherCard() throws -> Void
  @discardableResult
  func tapOnAddCard() throws -> Void
}

public protocol PreselectCvv {
  @discardableResult
  func waitForPreselectCvv(_ mSec: Int32) throws -> Bool
  @discardableResult
  func getCardName() throws -> String
  @discardableResult
  func getCvvFieldValue() throws -> String!
}

open class PreselectCvvFeature: Feature<PreselectCvv> {
  public static var `get`: PreselectCvvFeature = PreselectCvvFeature()
  private init() {
    super.init("PreselectCvvFeature", "Preselect Cvv screen")
  }

}

open class ApplePayFeature: Feature<ApplePay> {
  public static var `get`: ApplePayFeature = ApplePayFeature()
  private init() {
    super.init("ApplePayFeature", "Check is Apple pay available")
  }

}

public protocol ApplePay {
  @discardableResult
  func isAvailable() -> Bool
}

open class GooglePayFeature: Feature<GooglePay> {
  public static var `get`: GooglePayFeature = GooglePayFeature()
  private init() {
    super.init("GooglePayFeature", "Check is Google pay available")
  }

}

public protocol GooglePay {
  @discardableResult
  func isAvailable() -> Bool
}

open class SBPFeature: Feature<SBP> {
  public static var `get`: SBPFeature = SBPFeature()
  private init() {
    super.init("SBPFeature", "Check is SBP available")
  }

}

public protocol SBP {
  @discardableResult
  func isAvailable() -> Bool
}

public enum MethodsListMode {
  case regular
  case preselect
}
