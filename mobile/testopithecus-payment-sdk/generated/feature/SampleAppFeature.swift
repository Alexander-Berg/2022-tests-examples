// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM feature/sample-app-feature.ts >>>

import Foundation

open class SampleAppFeature: Feature<SampleApp> {
  public static var `get`: SampleAppFeature = SampleAppFeature()
  private init() {
    super.init("SampleAppFeature", "Feature for interacting with the SampleApp")
  }

}

public protocol SampleApp {
  @discardableResult
  func startSampleApp(_ user: OAuthUserAccount, _ merchantId: String, _ paymentId: String, _ additionalSettings: PaymentAdditionalSettings) throws -> Void
  @discardableResult
  func startRegularPayment() throws -> Void
  @discardableResult
  func startPreselectPayment() throws -> Void
  @discardableResult
  func bindCard() throws -> Void
  @discardableResult
  func unbindCard() throws -> Void
  @discardableResult
  func waitForAppReady() throws -> Bool
}

open class PaymentAdditionalSettings {
  public let forceCvv: Bool
  public let paymentMethodsFilter: PaymentMethodsFilter
  public let isDarkModeEnabled: Bool
  public let personalInfoShowingMode: PersonalInfoMode
  public let authorizationMode: AuthorizationMode
  public let useBindingV2: Bool
  public let cashEnabled: Bool
  public init(_ forceCvv: Bool, _ paymentMethodsFilter: PaymentMethodsFilter, _ isDarkModeEnabled: Bool, _ personalInfoShowingMode: PersonalInfoMode, _ authorizationMode: AuthorizationMode, _ useBindingV2: Bool, _ cashEnabled: Bool) {
    self.forceCvv = forceCvv
    self.paymentMethodsFilter = paymentMethodsFilter
    self.isDarkModeEnabled = isDarkModeEnabled
    self.personalInfoShowingMode = personalInfoShowingMode
    self.authorizationMode = authorizationMode
    self.useBindingV2 = useBindingV2
    self.cashEnabled = cashEnabled
  }

}

