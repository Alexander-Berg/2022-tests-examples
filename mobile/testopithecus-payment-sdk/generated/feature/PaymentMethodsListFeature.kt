// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM feature/payment-methods-list-feature.ts >>>

package com.yandex.xplat.testopithecus.payment.sdk

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*
import com.yandex.xplat.testopithecus.common.*
import com.yandex.xplat.payment.sdk.*

public open class PaymentMethodsListFeature private constructor(): Feature<PaymentMethodsList>("PaymentMethodsListFeature", "Represent payment methods list") {
    companion object {
        @JvmStatic var `get`: PaymentMethodsListFeature = PaymentMethodsListFeature()
    }
}

public interface PaymentMethodsList {
    fun waitForPaymentMethods(mSec: Int): Boolean
    fun getMethods(): YSArray<String>
    fun selectMethod(index: Int): Unit
    fun getSelected(): Int
    fun tapOnCvvField(): Unit
    fun setCvvFieldValue(cvv: String): Unit
    fun getCvvFieldValue(): String?
    fun clickNewCard(): Unit
    fun selectSbpMethod(): Unit
    fun getMethodsListMode(): MethodsListMode
}

public open class PreselectFeature private constructor(): Feature<Preselect>("PreselectFeature", "Specific for Preselect mode actions") {
    companion object {
        @JvmStatic var `get`: PreselectFeature = PreselectFeature()
    }
}

public interface Preselect {
    fun selectCash(): Unit
    fun isCashSelected(): Boolean
    fun tapOnSelectButton(): Unit
    fun tapOnOtherCard(): Unit
    fun tapOnAddCard(): Unit
}

public interface PreselectCvv {
    fun waitForPreselectCvv(mSec: Int): Boolean
    fun getCardName(): String
    fun getCvvFieldValue(): String?
}

public open class PreselectCvvFeature private constructor(): Feature<PreselectCvv>("PreselectCvvFeature", "Preselect Cvv screen") {
    companion object {
        @JvmStatic var `get`: PreselectCvvFeature = PreselectCvvFeature()
    }
}

public open class ApplePayFeature private constructor(): Feature<ApplePay>("ApplePayFeature", "Check is Apple pay available") {
    companion object {
        @JvmStatic var `get`: ApplePayFeature = ApplePayFeature()
    }
}

public interface ApplePay {
    fun isAvailable(): Boolean
}

public open class GooglePayFeature private constructor(): Feature<GooglePay>("GooglePayFeature", "Check is Google pay available") {
    companion object {
        @JvmStatic var `get`: GooglePayFeature = GooglePayFeature()
    }
}

public interface GooglePay {
    fun isAvailable(): Boolean
}

public open class SBPFeature private constructor(): Feature<SBP>("SBPFeature", "Check is SBP available") {
    companion object {
        @JvmStatic var `get`: SBPFeature = SBPFeature()
    }
}

public interface SBP {
    fun isAvailable(): Boolean
}

public enum class MethodsListMode {
    regular,
    preselect,
}
