// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM model/unbind-card-model.ts >>>

import Foundation

open class UnbindCardModel: UnbindCard {
  private var doneButtonShown: Bool = false
  private var editButtonShown: Bool = false
  private let paymentMethodsListModel: PaymentMethodsListModel
  private let paymentButtonModel: PaymentButtonModel
  public init(_ paymentMethodsListModel: PaymentMethodsListModel, _ paymentButtonModel: PaymentButtonModel) {
    self.paymentMethodsListModel = paymentMethodsListModel
    self.paymentButtonModel = paymentButtonModel
  }

  @discardableResult
  open func waitForUnbindCard(_ mSec: Int32) throws -> Bool {
    return true
  }

  @discardableResult
  open func getCards() -> YSArray<String> {
    return self.paymentMethodsListModel.getMethods().filter({
      (pm) in
      !YSArray(PaymentMethodName.otherCard, PaymentMethodName.sbp).includes(pm)
    }).filter({
      (pm) in
      !pm.startsWith(PaymentMethodName.familyPayPrefix)
    })
  }

  @discardableResult
  open func unbindCard(_ index: Int32) throws -> Void {
    (try self.paymentMethodsListModel.deleteMethod(self.getCards()[index]))
  }

  @discardableResult
  open func isDoneButtonShown() throws -> Bool {
    return self.doneButtonShown
  }

  @discardableResult
  open func tapOnDoneButton() throws -> Void {
    self.doneButtonShown = false
    self.editButtonShown = self.checkHasCardsToUnbind()
    self.paymentButtonModel.setButtonText(PaymentButtonLabel.select)
  }

  @discardableResult
  open func isEditButtonShown() throws -> Bool {
    return self.editButtonShown
  }

  @discardableResult
  open func checkHasCardsToUnbind() -> Bool {
    return self.getCards().length > 0
  }

  open func setEditButtonShowingStatus(_ shown: Bool) -> Void {
    self.editButtonShown = shown
  }

  @discardableResult
  open func tapOnEditButton() throws -> Void {
    self.doneButtonShown = true
    self.editButtonShown = false
  }

}

