// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM model/payment-details-model.ts >>>

import Foundation

open class ReadPaymentDetailsModel: ReadPaymentDetails {
  private let account: OAuthUserAccount
  private let merchantId: String
  private let paymentId: String
  private let forceCvv: Bool
  private let methodsFilter: PaymentMethodsFilter
  private let darkModeEnabled: Bool
  private let personalInfoShowingMode: PersonalInfoMode
  private let authorizationMode: AuthorizationMode
  private let amount: String
  private let currency: String
  private let bindingV2Enabled: Bool
  private let cashEnabled: Bool
  private let expected3ds: String!
  private let acquirer: Acquirer!
  public init(_ account: OAuthUserAccount, _ merchantId: String, _ paymentId: String, _ forceCvv: Bool, _ methodsFilter: PaymentMethodsFilter, _ darkModeEnabled: Bool, _ personalInfoShowingMode: PersonalInfoMode, _ authorizationMode: AuthorizationMode, _ amount: String, _ currency: String, _ bindingV2Enabled: Bool, _ cashEnabled: Bool, _ expected3ds: String!, _ acquirer: Acquirer!) {
    self.account = account
    self.merchantId = merchantId
    self.paymentId = paymentId
    self.forceCvv = forceCvv
    self.methodsFilter = methodsFilter
    self.darkModeEnabled = darkModeEnabled
    self.personalInfoShowingMode = personalInfoShowingMode
    self.authorizationMode = authorizationMode
    self.amount = amount
    self.currency = currency
    self.bindingV2Enabled = bindingV2Enabled
    self.cashEnabled = cashEnabled
    self.expected3ds = expected3ds
    self.acquirer = acquirer
  }

  @discardableResult
  open func getAccount() -> OAuthUserAccount {
    return self.account
  }

  @discardableResult
  open func getAmount() -> String {
    return self.amount
  }

  @discardableResult
  open func getCurrency() -> String {
    return self.currency
  }

  @discardableResult
  open func getMerchantId() -> String {
    return self.merchantId
  }

  @discardableResult
  open func getPaymentId() -> String {
    return self.paymentId
  }

  @discardableResult
  open func getForceCvv() -> Bool {
    return self.forceCvv
  }

  @discardableResult
  open func getPaymentMethodsFilter() -> PaymentMethodsFilter {
    return self.methodsFilter
  }

  @discardableResult
  open func isDarkModeEnabled() -> Bool {
    return self.darkModeEnabled
  }

  @discardableResult
  open func isBindingV2Enabled() -> Bool {
    return self.bindingV2Enabled
  }

  @discardableResult
  open func isCashEnabled() -> Bool {
    return self.cashEnabled
  }

  @discardableResult
  open func getPersonalInfoShowingMode() -> PersonalInfoMode {
    return self.personalInfoShowingMode
  }

  @discardableResult
  open func getAuthorizationMode() -> AuthorizationMode {
    return self.authorizationMode
  }

  @discardableResult
  open func getExpected3ds() -> String! {
    return self.expected3ds
  }

  @discardableResult
  open func isPersonalInfoShown() -> Bool {
    let personalInfoMode = self.getPersonalInfoShowingMode()
    let authMode = self.getAuthorizationMode()
    return (personalInfoMode == PersonalInfoMode.SHOW || (personalInfoMode == PersonalInfoMode.AUTOMATIC && authMode == AuthorizationMode.nonauthorized))
  }

  @discardableResult
  open func getMerchantInfo() -> MerchantInfo! {
    return self.acquirer == nil ? nil : getMerchantInfoByAcquirer(self.acquirer)
  }

  @discardableResult
  open func getAcquirer() -> Acquirer! {
    return self.acquirer
  }

}

