// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM model/personal-information-model.ts >>>

package com.yandex.xplat.testopithecus.payment.sdk

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*
import com.yandex.xplat.testopithecus.common.*
import com.yandex.xplat.payment.sdk.*

public open class PersonalInformationModel(private val paymentDetailsModel: ReadPaymentDetailsModel, private val keyboardModel: KeyboardModel): PersonalInformation {
    private var name: String = ""
    private var lastName: String = ""
    private var phoneNumber: String = ""
    private var email: String
    private var focusedField: PersonalInformationField? = null
    init {
        this.email = if (this.paymentDetailsModel.getAuthorizationMode() == AuthorizationMode.authorized) this.paymentDetailsModel.getAccount().account.login + "@yandex.ru" else ""
    }
    open override fun getFieldValue(`field`: PersonalInformationField): String {
        when (`field`) {
            PersonalInformationField.firstName -> {
                return this.name
            }
            PersonalInformationField.lastName -> {
                return this.lastName
            }
            PersonalInformationField.phoneNumber -> {
                return this.phoneNumber
            }
            PersonalInformationField.email -> {
                return this.email
            }
        }
    }

    open override fun getFocusedField(): PersonalInformationField? {
        return this.focusedField
    }

    open override fun pasteFieldValue(`field`: PersonalInformationField, value: String): Unit {
        this.setFieldValue(`field`, value)
    }

    open override fun setFieldValue(`field`: PersonalInformationField, value: String): Unit {
        when (`field`) {
            PersonalInformationField.firstName -> {
                this.name = value
            }
            PersonalInformationField.lastName -> {
                this.lastName = value
            }
            PersonalInformationField.phoneNumber -> {
                this.phoneNumber = value
            }
            PersonalInformationField.email -> {
                this.email = value
            }
        }
    }

    open override fun tapOnField(`field`: PersonalInformationField): Unit {
        this.focusedField = `field`
        this.keyboardModel.setAlphabeticalKeyboardStatus(true)
    }

    open fun resetFields(): Unit {
        this.name = ""
        this.lastName = ""
        this.phoneNumber = ""
        this.email = ""
        this.focusedField = null
        this.keyboardModel.setAlphabeticalKeyboardStatus(false)
    }

}

public enum class PersonalInformationField {
    firstName,
    lastName,
    phoneNumber,
    email,
}
