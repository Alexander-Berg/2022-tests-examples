const {formats} = require('@yandex-int/palmsync');
const dotenv = require('dotenv');
const commonConfig = require('../../../common/.common.palmsync.conf.js')

dotenv.config();

module.exports = {
    ...commonConfig,

    project: process.env.TESTPALM_PROJECT,

    schemeExtension: [
        // custom names
        {
            name: "testing",
            required: false,
            meta: true,
            mergeable: true,
            format: formats.isArrayOfEnums(
                'acceptance_maps',
                'regress',
                'smoke',
                'lite_acceptance_maps',
                'real_road_test',
                'acceptance_navi',
                'backend_error'
            )
        },
        {
            name: "platforms",
            required: false,
            mergeable: true,
            meta: true,
            format: formats.isArrayOfEnums('ios', 'android', 'carplay', 'android_auto', 'renault', 'nissan')
        },
        {
            name: "components",
            required: false,
            mergeable: true,
            meta: true,
            format: formats.isEnum(
                '3d_touch_and_shortcuts',
                'watch_app',
                'about_the_app',
                'accessibility',
                'alice_activation',
                'alice_audio_session',
                'alice_basics',
                'alice_calls',
                'alice_cashes',
                'alice_interface',
                'alice_road_events',
                'alice_routes',
                'alice_search',
                'alice_settings',
                'alice_skills',
                'alice_working_with_music',
                'permissions_for_alice',
                'alternatives',
                'annotations',
                'baloon',
                'backend_error',
                'background',
                'beta_testing',
                'background_pedestrian_routes',
                'bluetooth',
                'booking',
                'bookmarks',
                'brand_point',
                'building_route',
                'burger_king',
                'caches',
                'cursor',
                'create_route',
                'datasync_settings',
                'dka',
                'debug_panel',
                'deeplink',
                'direct',
                'discovery',
                'eda',
                'emergency',
                'enter_via_login_and_password',
                'entrances',
                'entry_points_feedback',
                'events',
                'fast_settings',
                'feedback',
                'foreground_annotation',
                'foreground_guidance',
                'free_drive',
                'gas_card_col',
                'gas_card_org',
                'gas_payment',
                'gas_promo',
                'geolocation',
                'geoproduct',
                'heads_up_notifications',
                'house_of_plus',
                'inapp_notifications',
                'indoor',
                'interrupt',
                'intro_screens',
                'local_limits',
                'long_tap_menu',
                'map_zoom',
                'maps',
                'menu',
                'metrics',
                'motion',
                'more_fast_route',
                'night_mode',
                'notification',
                'object_highlighting',
                'offline_routes',
                'offline_search',
                'organization_card',
                'panoramas',
                'parkings',
                'parkings_menu',
                'parkings_orders',
                'parkings_payment',
                'parkings_push',
                'pedestrian_routes_headsup_notification',
                'pedestrian_routes_notification',
                'pedestrian_routes',
                'personal_account',
                'placecard_schedule',
                'poi',
                'public_transport_pins',
                'public_transport_favorites',
                'public_transport_stopcard',
                'push_notifications',
                'rate_me_alert',
                'road_events_annotations',
                'road_events_new',
                'road_events_old',
                'route',
                'route_balloons',
                'route_guidance',
                'route_guidance_search',
                'route_variations',
                'routes',
                'search_around_widget',
                'search_result',
                'search_screen',
                'sending_feedback',
                'settings',
                'setting_background',
                'siri',
                'stability',
                'startup_config',
                'stories',
                'suggest',
                'speedlimit',
                'taxi_native_basics',
                'taxi_native_errors',
                'taxi_native_payment',
                'taxi_not_native',
                'toponym_card',
                'traffic',
                'traffic_consumption',
                'ugc',
                'via_points',
                'voices',
                'voice_search',
                'walking_routes',
                'widget',
                'carplay_and_android_auto',
                'scooters',
                'cpaa_bookmarks',
                'cpaa_access',
                'cpaa_foreground',
                'cpaa_connection',
                'cpaa_driving',
                'cpaa_map',
                'cpaa_network',
                'cpaa_plus',
                'cpaa_search',
                'cpaa_settings',
                'cpaa_stability',
                'cpaa_real_road_test',
                'cpaa_interrupt',
                'cpaa_routes',
                'cpaa_route_guidance',
                'cpaa_push',
                'cpaa_assessors_env',
                'cpaa_audiosession',
                'cp_dashboard',
                'js_api',
                'cache_webview_cookie',
                'gas_service',
                'audiosession',
                'service_navi',
                'data_reading',
                'migrations',
                'safemode',
                'bookmarks_sync',
                'bicycle_routes',
                'scooter_routes'
            )
        },
        {
            name: "tags",
            required: false,
            mergeable: true,
            meta: true,
            format: formats.isArrayOfEnums(
                'automated',
                'not_automated',
                'assessors',
                'advertisement',
                'acceptance',
                'use_map',
                'bt_headset',
                'mobile_internet',
                'not_suitable_for_farm',
                'windows_10',
                'need_debug',
                'mapkit_ready',
                'sd_card',
                'parity',
                'newbie',
                'new_settings',
                'real_actions',
                'refactor_ready',
                'not_gp'
            )
        },
        {
            name: "integration_run",
            required: false,
            meta: true,
            mergeable: true,
            format: formats.isArrayOfEnums(
                'mapkit',
                'speechkit',
                'am',
                'kotlin',
                'alicekit',
                'android_auto',
                'carplay',
                'myspin',
                'payment_sdk',
                'tanker_sdk',
                'audiosession',
            )
        },
        {
            name: "walking_time",
            required: false,
            mergeable: true,
            meta: true,
            format: formats.isEnum('5', '10', '20')
        },

        // system names
        {
            name: "hermioneTitle",
            required: false,
            meta: true,
        },
        {
            name: "palmsync_synchronization_errors",
            required: false,
            meta: true,
        },
        {
            name: "browsers",
            required: false,
            meta: true,
        },
        {
            name: "filepath",
            required: false,
            meta: true,
        },
        {
            name: "scenarioType",
            required: false,
            meta: true,
        },
        {
            name: "feature",
            required: false,
            meta: true,
        }
    ]
};
