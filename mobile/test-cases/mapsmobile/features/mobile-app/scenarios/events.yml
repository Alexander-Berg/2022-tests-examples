components: events
testing:
  - regress

specs:
  Присутствие пинов событий на экране ведения по автомаршруту:
    - info: |
        Отображается главный экран приложения
        На Android события отображаются при чистой установке приложения (можно почистить кеш)
    - do: Включить тестинг `Environment -> Mobmaps proxy host -> Testing`
    - do: Перезапустить приложение
    - do: Открыть спан, на котором отображаются пины событий
    - assert: На карте отображаются пины различных событий
    - do: Построить произвольный автомаршрут рядом с событием
    - do: Тап на Поехали
    - assert: |
        Отображается экран ведения по автомаршруту
        Пины событий на карте присутствуют

    - platforms:
        - ios
        - android
    - integration_run:
        - kotlin
    - testing:
        - acceptance_maps


  Присутствие пинов событий на экране ведения по веломаршруту:
    - info: Отображается главный экран приложения
    - do: Открыть спан, на котором отображаются пины событий
    - assert: На карте отображаются пины различных событий
    - do: Построить произвольный веломаршрут рядом с событием
    - do: Тап на Поехали
    - assert: |
        Отображается экран ведения по веломаршруту
        Пины событий на карте присутствуют

    - platforms:
        - ios
        - android
    - integration_run:
        - kotlin


  Присутствие пинов событий на экране ведения по пешеходному маршруту:
    - info: Отображается главный экран приложения
    - do: Открыть спан, на котором отображаются пины событий
    - assert: На карте отображаются пины различных событий
    - do: Построить произвольный пешеходный маршрут рядом с событием
    - do: Тап на Начать
    - assert: |
        Отображается экран ведения по пешеходному маршруту
        Пины событий на карте присутствуют

    - platforms:
        - ios
        - android
    - integration_run:
        - kotlin


  Присутствие пинов событий на экране ведения по самокатному маршруту:
    - info: Отображается главный экран приложения
    - do: Открыть спан, на котором отображаются пины событий
    - assert: На карте отображаются пины различных событий
    - do: Построить произвольный самокатный маршрут рядом с событием
    - do: Тап на Поехали
    - assert: |
        Отображается экран ведения по самокатному маршруту
        Пины событий на карте присутствуют

    - platforms:
        - ios
        - android
    - integration_run:
        - kotlin


  Присутствие пинов событий на экране ведения по ОТ-маршруту:
    - info: Отображается главный экран приложения
    - do: Открыть спан, на котором отображаются пины событий
    - assert: На карте отображаются пины различных событий
    - do: Построить произвольный ОТ-маршрут рядом с событием
    - do: Тап на Посмотреть на карте
    - do: Тап на Поехали
    - assert: |
        Отображается экран ведения по ОТ-маршруту
        Пины событий на карте присутствуют

    - platforms:
        - ios
        - android
    - integration_run:
        - kotlin


  Отображение событий на карте:
    - info: |
        Проверка отобажения пинов событий на карте
    - do: Открыть спан какого-либо крупного города
    - assert:
        На карте отображаются пины событий.
        Пины событий могут быть двух видов - провязанные с организацией и непровязанные.
        Провязанные пины событий - пины организаций в форме капли (как у геопродукта), у которых присутствуют название организации и ниже - название события.
        Непровязанные пины событий - в форме капли, у которых присутствует только название события
    - do: Протапать различные пины событий
    - assert:
        Все пины тапабельны.
        При тапе открывается карточка организации с событием или непосредственно карточка события

    - platforms:
        - ios
        - android
    - integration_run:
        - kotlin
    - tags:
        - newbie


  Отображение блока событий в карточке организации, открытой через тап по пину:
    - info: |
        Проверка отображения блока события в карточке организации
        Включить в дебаг-панели пункт shake to toggle night mode, в приложении установлена светлая тема
    - do: Тап по пину организации с событием
    - assert: Отображается миникарточка организации
    - do: Развернуть полную карточку
    - assert: |
        Отображается полная карточка организации
        Под табами в карточке отображается блок события, который состоит из:
        Название события жирным шрифтом, ниже - тип события, справа - фотография, ниже - сроки проведения, описание события (если описание длинное, то в конце отображается троеточие), ниже, если есть - цена (например цена билета)
    - do: Тап по блоку события
    - assert: |
        Отображается карточка события
        В карточке присутствуют:
        Название события жирным шрифтом, ниже - тип события, блок с фотографиями, ниже - сроки проведения и место, блок с фрагментом карты, описание, опционально могут присутствовать блоки с ссылкой на сайт, с кнопкой Яндекс.Афишы и ценой (например ценой билетов)
    - do: Потрясти устройство для активации темной темы
    - assert: |
        Продолжает отображаться карточка события
        Карточка адаптирована под темную тему

    - platforms:
        - ios
        - android
    - integration_run:
        - kotlin


  Отображение таба "События" в карточке организации:
    - info: |
        Если пришло несколько событий - отображается таб 'События' в карточке организации
    - do: Открыть любым способом полную карточку организации, для которой пришло несколько событий
    - assert: |
        Отображается полная карточка организации
        В карточке присутствует таб 'События\'
    - do: Перейти в таб события
    - assert: |
        Отображаются блоки событий, расположенные друг под другом
        Блок состоит из:
        Название события жирным шрифтом, ниже - тип события, справа - фотография, ниже - сроки проведения, описание события (если описание длинное, то в конце отображается троеточие), ниже, если есть - цена (например цена билета)
    - do: Тап по любому блоку события
    - assert: Отображается карточка события

    - platforms:
        - ios
        - android
    - tags:
        - newbie


  Отсутствие пинов событий на экране ведения по маршруту:
    - do: Открыть спан, на котором отображаются пины событий
    - assert: На карте отображаются пины различных событий
    - do: Построить произвольный автомаршрут и перейти в режим ведения
    - assert: Пины событий на карте отсутствуют
    - do: Проверить с другими типами маршрутов (пеший, вело, ОТ) и перейти в режим ведения
    - assert: Пины событий на карте отсутствуют

    - platforms:
        - ios
        - android
    - integration_run:
        - kotlin


  Отображение событий в офлайне:
    - info: |
        У пользователя загружены офлайн-кеши региона
    - do: Открыть спан, на котором отображаются пины событий
    - assert: На карте присутствуют пины различных событий
    - do: Включить авиарежим и перезапустить приложение
    - assert: |
        События закешировались на устройстве
        На карте продолжают отображаться пины событий
    - do: Тап по произвольному пину события
    - assert: |
        Отображается карточка организации, у которой присутствует блок события (для провязанного с организацией события)
        Если событие непровязано с организацией, то открывается карточка события

    - platforms:
        - ios
        - android
    - integration_run:
        - kotlin


  Отсутствие пинов событий на экране результатов поиска:
    - do: Открыт спан, на котором отображаются пины событий
    - assert: На карте присутствуют пины различных событий
    - do: Выполнить произвольный поисковый запрос
    - assert: |
        Отображается экран результатов поиска
        На карте присутствуют пины поисковой выдачи
        Пины событий не отображаются на экране результатов поиска

    - platforms:
        - ios
        - android


  Присутствие пинов событий на экране ведения веломаршрута:
    - info: Отображается главный экран приложения
    - do: |
        (iOS) Использовать интент [collapsed-image](https://jing.yandex-team.ru/files/linakolpakova/события.png){title=QR-код}

        `yandexmaps://add_exp?show_events_on_map`
    - do: Перезапустить приложение
    - do: Открыть спан, на котором отображаются пины событий
    - assert: На карте отображаются пины различных событий
    - do: Построить произвольный веломаршрут рядом с событием
    - do: Тап на Поехали
    - assert: |
        Отображается экран ведения по веломаршруту
        Пины событий на карте присутствуют
        Снизу отображается плашка ЕТА

    - platforms:
        - ios
        - android
    - integration_run:
        - kotlin
    - testing:
        - acceptance_maps


  Отсутствие пинов событий на экране редактирования дома или работы:
    - info: |
        Пользователь авторизован
    - do: Открыт спан, на котором отображаются пины событий
    - assert: На карте присутствуют пины различных событий
    - do: Перейти в закладки
    - assert: Отображается экран закладки, на котором присутствуют блоки дом / работа
    - do: Если у пользователя добавлены дом / работа, то тап по кнопке редактирования в виде карандаша и тап по любому из двух блоков, если дом / работа отсутствуют, то тап 'Добавить'
    - assert: |
        Открыт экран редактирования дома / работы
        На спане отображается желтый пин с соответствующей иконкой дома или работы
        Пины событий отсутствуют

    - platforms:
        - ios
        - android
    - integration_run:
        - kotlin


  Отображение блока событий в карточке организации, открытой из СЕРПа:
    - do: Найти на карте пин организации с событием, тап пину и открыть полную карточку
    - assert: |
        Отображается карточка организации
        В карточке присутствует блок с событием
    - do: Закрыть карточку организации и выполнить поиск данной организации
    - assert: |
        Если результатов несколько, то отображается СЕРП с результатами поиска
        На карте отображаются пины поисковой выдачи
        Если результат один, то сразу откроется карточка организации
    - do: Тап по сниппету организации с событием в СЕРПе
    - assert: |
        Отображается карточка организации
        В карточке присутствует блок с событием

    - platforms:
        - ios
        - android
    - integration_run:
        - kotlin


  Отображение ошибки загрузки с подменненым ответом:
    - info: |
        Для iOS: Выключен эксперимент show_events_on_map
        Устройство подключено к снифферу
    - do: Запустить приложение
    - assert: Отображается запрос https://geointernal.mob.maps.yandex.net/v1/discovery/event/search_by_point?координаты
    - do: Подменить request для указанного запроса так, чтобы для одного из событий в блоке images были неверные данные (запомнить адрес события)
    - assert: В блоке images изменены ссылки на изображения
    - do: Очистить память приложения, повторно включить эксперимент и запустить на спане из предыдущих шагов
    - assert: |
        Приложение запущено
        Отображается главный экран
        На карте отображаются события
    - do: Тап на пин события
    - assert: Отображается карточка события
    - do: Сбросить подмену и перезапустить приложение
    - assert: |
        Приложение запущено
        Отображается главный экран
    - do: Тап на пин события
    - assert: Отображается ошибка загрузки

    - platfroms:
        - ios
        - android
    - testing:
        - acceptance_maps


  Ошибка загрузки карточки организации с событием:
    - info: |
        На открытом спане карты отображаются пины событий
    - do: Выключить интернет-соединение на устройстве
    - assert: На устройстве нет интернет-соединения
    - do: Тап на пин события в карточке организации
    - assert: Отображается карточка с ошибкой загрузки
    - do: Включить интернет-соединение на устройстве
    - assert: На устройстве есть интернет-соединение
    - do: Тап Обновить
    - assert: Загрузились и отображаются данные карточки организации с событием

    - platfroms:
        - ios
        - android
    - tags:
        - assessors
        - newbie


  Отображение ошибки загрузки с подменнеными id события:
    - info: |
        Устройство подключено к снифферу
    - do: Запустить приложение на спане с событиями
    - assert: Отображается запрос https://geointernal.mob.maps.yandex.net/v1/discovery/event/search_by_point?координаты
    - do: Подменить request для указанного запроса так, чтобы для одного из событий был указан неверный id (запомнить адрес события)
    - assert: id события подменено
    - do: Очистить память приложения, повторно включить эксперимент и запустить на спане из предыдущих шагов
    - assert: |
        Приложение запущено
        Отображается главный экран
    - do: Тап на пин измененного события
    - assert: Отображается карточка с ошибкой загрузки
    - do: Сбросить подмену и перезапустить приложение
    - assert: |
        Приложение запущено
        Отображается главный экран
    - do: Тап на пин ранее измененного события
    - assert: Отображается отображаются данные карточки события/организации с событием

    - platfroms:
        - ios
        - android


  Отображение ошибки загрузки с подменнеными изображениями:
    - info: |
        Устройство подключено к снифферу
    - do: Запустить приложение
    - assert: Отображается запрос https://geointernal.mob.maps.yandex.net/v1/discovery/event/search_by_point?координаты
    - do: Подменить request для указанного запроса так, чтобы для одного из событий в блоке images были неверные данные (запомнить адрес события)
    - assert: В блоке images изменены ссылки на изображения
    - do: Очистить память приложения, повторно включить эксперимент и запустить на спане из предыдущих шагов
    - assert: |
        Приложение запущено
        Отображается главный экран
        На карте отображаются события
    - do: Тап на пин измененного события
    - assert: Отображается карточка с ошибкой загрузки
    - do: Сбросить подмену и перезапустить приложение
    - assert: |
        Приложение запущено
        Отображается главный экран
    - do: Тап на пин ранее измененного события
    - assert: Отображается отображаются данные карточки события/организации с событием

    - platfroms:
        - ios
        - android
