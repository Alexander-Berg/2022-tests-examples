// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM test/all-tests.ts >>>

import Foundation

open class AllPaymentSdkTests {
  public static let `get`: TestsRegistry<PaymentDataPreparer> = TestsRegistry<PaymentDataPreparer>().regular(PayWithNewCardWithoutSavingTest()).regular(DisablePayButtonTest()).regular(PayWithNewCardWithSavingTest()).regular(NewCardFieldsValidatorTest()).regular(NewCardFieldsNumericKeyboardTest()).regular(PasteValuesToNewCardFieldsTest()).regular(PayWithNewCardNotEnoughFundsTest()).regular(ValidatePaymentMethodsAndNewCardInLandscapeTest()).regular(PaymentMethodCvvFieldNumericKeyboardTest()).regular(PayWithExistingMethodInvalid3dsTest()).regular(PayWithExistingMethodCVVTest()).regular(PayWithExistingMethod3DSCVVTest()).regular(PaymentMethodEmptyCardListTest()).regular(CheckCvvFieldTest()).regular(CheckExpirationDateFieldTest()).regular(FillAllFieldsAndRotateTest()).regular(RotateAfterSelectPaymentMethodTest()).regular(NonAuthorizedPayWithNewCardTest()).regular(MinimizeKeyboardAfterTapOnCvvFieldTest()).regular(CorrectCardNumberIncorrectDateAndCvvTest()).regular(ValidateBigPaymentMethodsListTest()).regular(PayWithExistingMethod3DSTest()).regular(PayWithExistingMethodTest()).regular(BindCardsAndCheckPaymentMethodsListTest()).regular(BindCardWithValidationTest()).regular(PreselectPayWithExistingCardTest()).regular(PreselectPayWithExistingCardCVVTest()).regular(PreselectPayWithExistingCardCVV3DSTest()).regular(PreselectUnbindCardTest()).regular(PreselectPayWithCardNotEnoughFundsTest()).regular(PreselectPayWithCashTest()).regular(PreselectPayWithNewCardCVVTest()).regular(PreselectPayWithNewCardTest()).regular(LicenseAgreementPayWithNewCardTest()).regular(LicenseAgreementExistingPaymentMethodsTest()).regular(LicenseAgreementPayWithNewCardNoAcquirerTest()).regular(LicenseAgreementBindCardTest()).regular(LicenseAgreementPayWithExistingMethodsNoAcquirerTest()).regular(LicenseAgreementPreselectPayWithExistingCardCVVTest()).regular(LicenseAgreementPreselectPayWithExistingCardCVVNoAcquirerTest()).regular(LicenseAgreementOpenTest()).regular(NewCardTapBackTest()).regular(NewCardAutomaticallyFocusNumberFieldTest()).regular(PayWithExistingMethodClose3DSPageTest()).regular(BindCardWithValidationFailedTest()).regular(CheckCardNumberFieldTest()).regular(PayWithSbpMethodTest()).regular(TrySelectDifferentBanksForSbpMethodTest()).regular(FamilyPayCheckUnbindButtonForOneCard()).regular(FamilyPayCheckUnbindButtonForSeveralCards())
}

public enum TestScenario : String {
  case existingPaymentMethods = "[Existing payment methods]"
  case newCard = "[New card]"
  case nonAuthorized = "[Non authorized]"
  case cardBinding = "[Card binding]"
  case preselect = "[Preselect]"
  case licenseAgreement = "[License agreement]"
  public func toString() -> String {
    return self.rawValue
  }
}
