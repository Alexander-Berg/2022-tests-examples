package ru.yandex.navi.tests;

import io.qameta.allure.Issue;
import io.qameta.allure.TmsLink;
import io.qameta.allure.junit4.DisplayName;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;
import org.junit.experimental.categories.Category;
import org.junit.runner.RunWith;
import ru.yandex.navi.Region;
import ru.yandex.navi.RouteColor;
import ru.yandex.navi.SearchCategory;
import ru.yandex.navi.categories.*;
import ru.yandex.navi.ui.Dialog;
import ru.yandex.navi.ui.GeoCard;
import ru.yandex.navi.ui.OverviewScreen;
import ru.yandex.navi.ui.SavedDataScreen;
import ru.yandex.navi.tf.RetryRunner;
import ru.yandex.navi.ui.LongTapMenu;

import java.util.regex.Pattern;

// https://testpalm.yandex-team.ru/testcase/navigator-562
@SuppressWarnings("NonAsciiCharacters")
@RunWith(RetryRunner.class)
@Category(SkipIos.class)
public final class OfflineTest extends BaseTest {
    public OfflineTest() {
        userCaps.initLocation = VLADIMIR;
    }

    private static class State {
        GeoCard geoCard;
        LongTapMenu longTapMenu;
    }

    @Override
    void doEnd() {
        user.setAirplaneMode(false);
    }

    @Test
    // TODO: changed @TmsLink("navigator-915")
    public void route() {
        settings.setOfflineCacheWifiOnly(false);
        downloadCache(Region.VLADIMIR);
        downloadCache(Region.YAROSLAVL);

        user.setAirplaneMode(true);

        buildRouteAndGo(VLADIMIR, YAROSLAVL);
    }

    @Test
    @Ignore("MOBNAVI-23917")
    // TODO: archived? @TmsLink("navigator-915")
    @Category({UnstableIos.class})
    public void search() {
        prepare(() -> {
            mapScreen.clickFindMe();
            settings.setOfflineCacheWifiOnly(false);
            downloadCache(Region.VLADIMIR);
            user.setAirplaneMode(true);
        });

        mapScreen.clickSearch().clickWhereToEatExpectGeoCard().closeGeoCard();

        mapScreen.buildRouteBySearchAndGo("–°—É–∑–¥–∞–ª—å");
    }

    @Test
    // TODO: changed @TmsLink("navigator-915")
    public void clearCache() {
        final int KB = 1024;
        final int MB = 1024 * KB;

        settings.setOfflineCacheWifiOnly(false);
        downloadCache(Region.KRASNOYARSK);

        SavedDataScreen screen = tabBar.clickMenu().clickSettings().clickSavedData();
        Assert.assertTrue(screen.getSizeOfMaps() > 20 * MB);

        screen.clickClearMaps();

        Dialog.withTitle("^–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã –∫–∞—Ä—Ç")
                .clickAt("–î–∞");

        Assert.assertEquals(20 * KB, screen.getSizeOfMaps());
    }

    @SuppressWarnings("NonAsciiCharacters")
    @Test
    @Category({Light.class, UnstableAndroid.class, UnstableIos.class})
    @DisplayName("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –æ—Ñ–ª–∞–π–Ω–µ - –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞")
    @Ignore("MOBNAVI-19976")
    @Issue("MOBNAVI-18708")
    @TmsLink("navi-mobile-testing-635")  // hash: 0x3bf2a28d
    // missed "show-variants"
    // Assertion: Route color is ONLINE
    public void –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ_–≤_–æ—Ñ–ª–∞–π–Ω–µ_–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ_–º–∞—Ä—à—Ä—É—Ç–∞() {
        prepare("–û—Ñ—Ñ–ª–∞–π–Ω –∫–µ—à –Ω–µ —Å–∫–∞—á–∞–Ω", () -> settings.setOfflineCacheWifiOnly(false));

        step("–í–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º '–≤ —Å–∞–º–æ–ª–µ—Ç–µ'. "
                + "–°–¥–µ–ª–∞—Ç—å –ª–æ–Ω–≥—Ç–∞–ø (–¥–æ–ª–≥–æ–µ –Ω–∞–∂–∞—Ç–∏–µ) –≤ –ª—é–±—É—é —Ç–æ—á–∫—É –∫–∞—Ä—Ç—ã. "
                + "–í –ø–æ—è–≤–∏–≤—à–µ–º—Å—è –º–µ–Ω—é –Ω–∞–∂–∞—Ç—å –Ω–∞ –ø—É–Ω–∫—Ç '–°—é–¥–∞'.", () -> {
            user.setAirplaneMode(true);
            mapScreen.longTap().clickTo();

            expect("–í –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –Ω–∞–¥–ø–∏—Å—å '–ü–æ–∏—Å–∫ –º–∞—Ä—à—Ä—É—Ç–∞'.",
                    () -> user.waitForLog("driving.request"));
        });

        step("–í—ã–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º '–≤ —Å–∞–º–æ–ª–µ—Ç–µ'", () -> {
            user.setAirplaneMode(false);
            expect("–°—Ç—Ä–æ–∏—Ç—Å—è –º–∞—Ä—à—Ä—É—Ç –æ—Ç –≤–∞—à–µ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –¥–æ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Ç–æ—á–∫–∏.",
                    () -> OverviewScreen.waitForRoute().clickGo());
        });

        step("–°–∫–∞—á–∞—Ç—å –æ—Ñ—Ñ–ª–∞–π–Ω –∫–µ—à –ª—é–±–æ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞. "
                + "–ü–µ—Ä–µ–π—Ç–∏ –≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∏- –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ä—Ç. "
                + "–í–≤–µ—Å—Ç–∏ –≤ –ø–æ–∏—Å–∫–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ '–ú–æ—Å–∫–≤–∞'. "
                + "–¢–∞–ø–Ω—É—Ç—å –Ω–∞–π–¥–µ–Ω–Ω–æ–º—É –≤–∞—Ä–∏–∞–Ω—Ç—É. "
                + "–¢–∞–ø–Ω—É—Ç—å –ø–æ –∫–Ω–æ–ø–∫–µ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ñ–ª–∞–π–Ω –∫–µ—à–∞. "
                + "–î–æ–∂–¥–∞—Ç—å—Å—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏", () -> downloadCache(Region.VLADIMIR));

        step("–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —ç–∫—Ä–∞–Ω –∫–∞—Ä—Ç—ã. "
                + "–ü–æ–¥–≤–∏–≥–∞—Ç—å –∫–∞—Ä—Ç—É —Ç–∞–∫, —á—Ç–æ–±—ã –Ω–∞ —ç–∫—Ä–∞–Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–ª—Å—è –≥–æ—Ä–æ–¥, "
                + "–∫–µ—à –∫–æ—Ç–æ—Ä–æ–≥–æ –±—ã–ª —Å–∫–∞—á–∞–Ω. "
                + "–í–∫–ª—é—á–∏—Ç—å –∞–≤–∏–∞—Ä–µ–∂–∏–º. "
                + "–í—ã–ø–æ–ª–Ω–∏—Ç—å –ª–æ–Ω–≥—Ç–∞–ø –ø–æ —Å–≤–æ–±–æ–¥–Ω–æ–º—É –º–µ—Å—Ç—É –Ω–∞ –∫–∞—Ä—Ç–µ. "
                + "–¢–∞–ø –Ω–∞ –∫–Ω–æ–ø–∫—É '–æ—Ç—Å—é–¥–∞'. "
                + "–í—ã–ø–æ–ª–Ω–∏—Ç—å –ª–æ–Ω–≥—Ç–∞–ø –ø–æ –¥—Ä—É–≥–æ–º—É —Å–≤–æ–±–æ–¥–Ω–æ–º—É –º–µ—Å—Ç—É –Ω–∞ –∫–∞—Ä—Ç–µ. "
                + "–¢–∞–ø –Ω–∞ –∫–Ω–æ–ø–∫—É '—Å—é–¥–∞'.", () -> {
            user.setAirplaneMode(true);
            mapScreen.longTap(0.3, 0.1).clickFrom();
            mapScreen.longTap(0.7, 0.7).clickTo();
            expect("–°—Ç—Ä–æ–∏—Ç—Å—è –æ—Ñ—Ñ–ª–∞–π–Ω –º–∞—Ä—à—Ä—É—Ç. "
                + "–ú–∞—Ä—à—Ä—É—Ç –æ–∫—Ä–∞—à–µ–Ω —Å–∏–Ω–∏–º —Ü–≤–µ—Ç–æ–º. "
                + "–ï–¢–ê –æ—Ç–æ–±—Ä–∞–∂–∞—Ç–µ—Å—è —Å–∏–Ω–∏–º —Ü–≤–µ—Ç–æ–º. "  // TODO
                + "–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ '–ú–∞—Ä—à—Ä—É—Ç –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞'", () -> {
                OverviewScreen.waitForRoute();
                mapScreen.checkRouteColor(RouteColor.OFFLINE);
                user.shouldSee(mapScreen.offlineResultsPanel);
            });
        });

        step("–í—ã–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º '–≤ —Å–∞–º–æ–ª—ë—Ç–µ'. "
            + "–¢–∞–ø –ø–æ –∫–Ω–æ–ø–∫–µ '–º–∞—Ä—à—Ä—É—Ç –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞'", () -> {
            user.setAirplaneMode(false);
            mapScreen.offlineResultsPanel.tryClick();

            expect("–ü–æ—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –æ–∫—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è –≤ —Ü–≤–µ—Ç–∞ –ø—Ä–æ–±–æ–∫. "
                + "(–ù–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É '–º–∞—Ä—à—Ä—É—Ç –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞' –º–æ–∂–µ—Ç –Ω–µ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è - "
                + "–º–∞—Ä—à—Ä—É—Ç –º–æ–∂–µ—Ç –æ–∫—Ä–∞—Å–∏—Ç—å—Å—è –≤ —Ü–≤–µ—Ç–∞ –ø—Ä–æ–±–æ–∫ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ, "
                + "–∞ –∫–Ω–æ–ø–∫–∞ –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ –ø—Ä–æ–ø–∞–¥—ë—Ç)",
                () -> mapScreen.checkRouteColor(RouteColor.ONLINE));
        });

        step("–°–∫–∞—á–∞—Ç—å –∫–µ—à —Å–æ—Å–µ–¥–Ω–µ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞. "
                + "–û—Ç–∫–ª—é—á–∏—Ç—å —Å–µ—Ç—å. "
                + "–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç –∏–∑ –æ–¥–Ω–æ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞ –≤ –¥—Ä—É–≥–æ–π. "
                + "–ù–∞–∂–∞—Ç—å –Ω–∞ '–ø–æ–µ—Ö–∞–ª–∏'", () -> {
            downloadCache(Region.YAROSLAVL);
            buildRouteAndGo(VLADIMIR, YAROSLAVL);
        });
    }

    @SuppressWarnings("NonAsciiCharacters")
    @Test
    @Ignore("MOBNAVI-23917")
    @Category({Light.class, UnstableIos.class})
    @DisplayName("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –æ—Ñ–ª–∞–π–Ω–µ - –ü–æ–∏—Å–∫. –ö–µ—à–∏ –Ω–µ —Å–∫–∞—á–∞–Ω—ã.")
    @TmsLink("navi-mobile-testing-592")  // hash: 0x7de3498d
    public void –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ_–≤_–æ—Ñ–ª–∞–π–Ω–µ_–ü–æ–∏—Å–∫_–ö–µ—à–∏_–Ω–µ_—Å–∫–∞—á–∞–Ω—ã() {
        prepare("–û—Ñ–ª–∞–π–Ω –∫–µ—à–∏ –Ω–µ —Å–∫–∞—á–∞–Ω—ã. "
            + "–ù–∞–¥–æ –æ—Ç–∫–ª—é—á–∏—Ç—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç, –µ—Å–ª–∏ –æ–Ω –≤–∫–ª—é—á–µ–Ω: "
            + "Developer settings –≤ —Ä–∞–∑–¥–µ–ª–µ Search - Yandex Maps search screen - off. "
            + "–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", () -> {
            experiments.disableMapsSearch().applyAndRestart();
            mapScreen.clickFindMe();
        });

        step("–û—Ç–∫—Ä—ã—Ç—å –Ø–Ω–¥–µ–∫—Å.–ù–∞–≤–∏–≥–∞—Ç–æ—Ä. "
                + "–í–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º '–í —Å–∞–º–æ–ª—ë—Ç–µ'. "
                + "–£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ wifi –∏ –º–æ–±–∏–ª—å–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤—ã–∫–ª—é—á–µ–Ω—ã. "
                + "–û—Ç–∫—Ä—ã—Ç—å —ç–∫—Ä–∞–Ω '–ü–æ–∏—Å–∫' –ø–æ –∑–Ω–∞—á–∫—É üîç –≤ –Ω–∏–∂–Ω–µ–π –ø–∞–Ω–µ–ª–∏. "
                + "–ù–∞–∂–∞—Ç—å –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –Ω–∞–ø—Ä–∏–º–µ—Ä '–≥–¥–µ –ø–æ–µ—Å—Ç—å'", () -> {
            user.setAirplaneMode(true);
            mapScreen.clickSearch().click(SearchCategory.WHERE_TO_EAT);
            expect("–ü–æ—è–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ '–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫'",
                () -> mapScreen.checkSearchIsActive(false));
        });

        step("–í—ã–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º '–í —Å–∞–º–æ–ª–µ—Ç–µ'. –î–æ–∂–¥–∞—Ç—å—Å—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è WiFi. "
                + "–û—Ç–∫—Ä—ã—Ç—å —ç–∫—Ä–∞–Ω '–ü–æ–∏—Å–∫' –ø–æ –∑–Ω–∞—á–∫—É üîç –≤ –Ω–∏–∂–Ω–µ–π –ø–∞–Ω–µ–ª–∏. "
                + "–ù–∞–∂–∞—Ç—å –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é '–≥–¥–µ –ø–æ–µ—Å—Ç—å'", () -> {
            user.setAirplaneMode(false);
            dismissOfflineSearchDialog();
            mapScreen.clickSearch().clickWhereToEatExpectGeoCard().closeGeoCard();
            expect("–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –ø–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.",
                () -> mapScreen.checkSearchIsActive(true));
        });
    }

    private void dismissOfflineSearchDialog() {
        Dialog dialog = new Dialog("^–ò—â–∏—Ç–µ –º–µ—Å—Ç–∞ –∏ —Å—Ç—Ä–æ–π—Ç–µ –º–∞—Ä—à—Ä—É—Ç—ã");
        if (dialog.isDisplayed())
            dialog.tryClickAt("–ó–∞–∫—Ä—ã—Ç—å");
    }

    @SuppressWarnings("NonAsciiCharacters")
    @Test
    @Ignore("MOBNAVI-23917")
    @Category({Light.class, UnstableIos.class})
    @DisplayName("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –æ—Ñ–ª–∞–π–Ω–µ - –ü–æ–∏—Å–∫. –ö–µ—à–∏ —Å–∫–∞—á–∞–Ω—ã.")
    @TmsLink("navi-mobile-testing-593")  // hash: 0x977f4a6e
    public void –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ_–≤_–æ—Ñ–ª–∞–π–Ω–µ_–ü–æ–∏—Å–∫_–ö–µ—à–∏_—Å–∫–∞—á–∞–Ω—ã() {
        prepare("–°–∫–∞—á–∞–Ω—ã –æ—Ñ—Ñ–ª–∞–π–Ω –∫–µ—à–∏ —Ä–µ–≥–∏–æ–Ω–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ. "
            + "–ù–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ –≤–∫–ª—é—á–µ–Ω –∞–≤–∏–∞—Ä–µ–∂–∏–º. "
            + "–ü–µ—Ä–µ–¥ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ–º –∫–µ–π—Å–∞ –≤—ã–∫–ª—é—á–∏—Ç—å –Ω–æ–≤—ã–π –ø–æ–∏—Å–∫: "
            + "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ - Dev.Set - Search - Y.Maps search screen - Off "
            + "–∏ Y.Maps search for yandexoid - Off", () -> {
            mapScreen.clickFindMe();
            settings.setOfflineCacheWifiOnly(false);
            downloadCache(Region.VLADIMIR);
            user.setAirplaneMode(true);
        });

        final State state = new State();

        step("–û—Ç–∫—Ä—ã—Ç—å —ç–∫—Ä–∞–Ω '–ü–æ–∏—Å–∫' –ø–æ –∑–Ω–∞—á–∫—É üîç –≤ –Ω–∏–∂–Ω–µ–π –ø–∞–Ω–µ–ª–∏. "
                        + "–ù–∞–∂–∞—Ç—å –Ω–∞ –ª—é–±—É—é –Ω–µ-—Ä–µ–∫–ª–∞–º–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é",
                () -> state.geoCard = mapScreen.clickSearch().clickWhereToEatExpectGeoCard());

        step("–¢–∞–ø –ø–æ –∫—Ä–µ—Å—Ç–∏–∫—É –≤ –æ—Ç–∫—Ä—ã–≤—à–µ–π—Å—è –∫–∞—Ä—Ç–æ—á–∫–µ", () -> {
            state.geoCard.closeGeoCard();
            mapScreen.checkSearchIsActive(true);
            expect("–ö–∞—Ä—Ç–æ—á–∫–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è. "
                    + "–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–ª–∞—à–∫–∞ '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞'", () -> {
                user.shouldNotSee(state.geoCard);
                user.shouldSee(mapScreen.offlineResultsPanel);
            });
        });

        step("–û—Ç–∫–ª—é—á–∏—Ç—å –∞–≤–∏–∞—Ä–µ–∂–∏–º. –¢–∞–ø–Ω—É—Ç—å –ø–æ –ø–ª–∞—à–∫–µ '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞'", () -> {
            user.setAirplaneMode(false);
            mapScreen.offlineResultsPanel.click();
            GeoCard.getVisible().closeGeoCard();
            expect("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è —Å–æ–≥–ª–∞—Å–Ω–æ –æ–Ω–ª–∞–π–Ω-–¥–∞–Ω–Ω—ã–º.",
                    () -> mapScreen.checkSearchIsActive(true));
        });
    }

    @SuppressWarnings("NonAsciiCharacters")
    @Test
    @Ignore("MOBNAVI-23917")
    @Category({BuildCheck.class, Light.class, UnstableIos.class})
    @DisplayName("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –æ—Ñ–ª–∞–π–Ω–µ - –ü–æ–∏—Å–∫ –ø–æ –∞–¥—Ä–µ—Å—É. –ö–µ—à–∏ —Å–∫–∞—á–∞–Ω—ã.")
    @TmsLink("navi-mobile-testing-594")  // hash: 0x74b76e8d
    public void –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ_–≤_–æ—Ñ–ª–∞–π–Ω–µ_–ü–æ–∏—Å–∫_–ø–æ_–∞–¥—Ä–µ—Å—É_–ö–µ—à–∏_—Å–∫–∞—á–∞–Ω—ã() {
        prepare("–°–∫–∞—á–∞–Ω—ã –æ—Ñ—Ñ–ª–∞–π–Ω –∫–µ—à–∏ —Ä–µ–≥–∏–æ–Ω–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ. "
            + "–ù–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ –≤–∫–ª—é—á–µ–Ω –∞–≤–∏–∞—Ä–µ–∂–∏–º. "
            + "–ü–µ—Ä–µ–¥ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ–º –∫–µ–π—Å–∞ –≤—ã–∫–ª—é—á–∏—Ç—å –Ω–æ–≤—ã–π –ø–æ–∏—Å–∫: "
            + "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ - Dev.Set - Search - Y.Maps search screen - Off "
            + "–∏ Y.Maps search for yandexoid - Off", () -> {
            mapScreen.clickFindMe();
            settings.setOfflineCacheWifiOnly(false);
            downloadCache(Region.VLADIMIR);
            user.setAirplaneMode(true);
        });

        State state = new State();

        step("–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —ç–∫—Ä–∞–Ω –ü–æ–∏—Å–∫. "
                        + "–í–≤–µ—Å—Ç–∏ –ª—é–±–æ–π –∞–¥—Ä–µ—Å –≤ –ø–æ–∏—Å–∫–æ–≤—É—é —Å—Ç—Ä–æ–∫—É. "
                        + "–¢–∞–ø–Ω—É—Ç—å –Ω–∞ –ø–æ–∏—Å–∫–æ–≤—ã–π —Å–∞–¥–∂–µ—Å—Ç",
                () -> state.geoCard =
                        mapScreen.clickSearch().searchAndClickFirstItem("–°—É–∑–¥–∞–ª—å –õ–µ–Ω–∏–Ω–∞ 63–ê"));

        step("–ó–∞–∫—Ä—ã—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏", () -> {
            state.geoCard.closeGeoCard();
            mapScreen.checkSearchIsActive(true);

            expect("–ö–∞—Ä—Ç–æ—á–∫–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è. "
                    + "–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Å–∏–Ω—è—è –ø–ª–∞—à–∫–∞ '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞'", () -> {
                user.shouldNotSee(state.geoCard);
                user.shouldSee(mapScreen.offlineResultsPanel);
            });
        });
    }

    @SuppressWarnings("NonAsciiCharacters")
    @Test
    @Category({Light.class, UnstableIos.class})
    @DisplayName("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –æ—Ñ–ª–∞–π–Ω–µ - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ—á–∫–∏ –ò–∑–±—Ä–∞–Ω–Ω–æ–µ. –ö–µ—à–∏ —Å–∫–∞—á–∞–Ω—ã.")
    @TmsLink("navi-mobile-testing-595")  // hash: 0xfd85b26c
    public void –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ_–≤_–æ—Ñ–ª–∞–π–Ω–µ_–î–æ–±–∞–≤–ª–µ–Ω–∏–µ_—Ç–æ—á–∫–∏_–ò–∑–±—Ä–∞–Ω–Ω–æ–µ_–ö–µ—à–∏_—Å–∫–∞—á–∞–Ω—ã() {
        prepare("–°–∫–∞—á–∞–Ω—ã –æ—Ñ—Ñ–ª–∞–π–Ω –∫–µ—à–∏ —Ä–µ–≥–∏–æ–Ω–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ. "
            + "–ù–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ –≤–∫–ª—é—á–µ–Ω –∞–≤–∏–∞—Ä–µ–∂–∏–º. "
            + "–ü–µ—Ä–µ–¥ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ–º –∫–µ–π—Å–∞ –≤—ã–∫–ª—é—á–∏—Ç—å –Ω–æ–≤—ã–π –ø–æ–∏—Å–∫: "
            + "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ - Dev.Set - Search - Y.Maps search screen - Off "
            + "–∏ Y.Maps search for yandexoid - Off", () -> {
            mapScreen.clickFindMe();
            settings.setOfflineCacheWifiOnly(false);
            downloadCache(Region.VLADIMIR);
            user.setAirplaneMode(true);
        });

        step("–í—ã–ø–æ–ª–Ω–∏—Ç—å –ª–æ–Ω–≥—Ç–∞–ø –Ω–∞ –∫–∞—Ä—Ç–µ. "
            + "–ù–∞–∂–∞—Ç—å –Ω–∞ '–í –ú–æ–∏ –ú–µ—Å—Ç–∞'. "
            + "–ù–∞–∂–∞—Ç—å –Ω–∞ —Å—Ç—Ä–æ–∫—É —Å—Ç—Ä–æ–∫—É '–ò–∑–±—Ä–∞–Ω–Ω–æ–µ'. "
            + "–í–≤–µ—Å—Ç–∏ –ª—é–±–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, –Ω–∞–∂–∞—Ç—å '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'.", () ->
            expect("–ù–∞ –∫–∞—Ä—Ç–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∑–Ω–∞—á–æ–∫ —Å –∫—Ä–∞—Å–Ω–æ–π –∫–Ω–∏–∂–Ω–æ–π –∑–∞–∫–ª–∞–¥–∫–æ–π. "
                + "–í —Ä–∞–∑–¥–µ–ª–µ –ú–æ–∏ –º–µ—Å—Ç–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–π —Ç–æ—á–∫–∏ "
                + "–∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ–º –¥–æ –Ω–µ—ë.",
                () -> mapScreen.addBookmarkByLongTap("–ú–æ—è —Ç–æ—á–∫–∞")));
    }

    @SuppressWarnings("NonAsciiCharacters")
    @Test
    @Ignore("MOBNAVI-23917")
    @Category({Light.class, SkipIos.class})
    @DisplayName("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –æ—Ñ—Ñ–ª–∞–π–Ω–µ - –ß—Ç–æ –∑–¥–µ—Å—å? –ö–µ—à–∏ –Ω–µ —Å–∫–∞—á–∞–Ω—ã.")
    @TmsLink("navi-mobile-testing-606")  // hash: 0x44e98703
    public void –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ_–≤_–æ—Ñ—Ñ–ª–∞–π–Ω–µ_–ß—Ç–æ_–∑–¥–µ—Å—å_–ö–µ—à–∏_–Ω–µ_—Å–∫–∞—á–∞–Ω—ã() {
        State state = new State();

        prepare("–û—Ñ–ª–∞–π–Ω –∫–µ—à–∏ –Ω–µ —Å–∫–∞—á–∞–Ω—ã.", () -> {});

        step("–û—Ç–∫—Ä—ã—Ç—å –Ø–Ω–¥–µ–∫—Å.–ù–∞–≤–∏–≥–∞—Ç–æ—Ä. "
            + "–í–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º '–í —Å–∞–º–æ–ª—ë—Ç–µ'. –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ wifi –∏ –º–æ–±–∏–ª—å–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤—ã–∫–ª—é—á–µ–Ω—ã. "
            + "–õ–æ–Ω–≥—Ç–∞–ø –ø–æ –ª—é–±–æ–π —Ç–æ—á–∫–µ –Ω–∞ –∫–∞—Ä—Ç–µ", () -> {
            user.setAirplaneMode(true);
            state.longTapMenu = mapScreen.longTap();
            expect("–û—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ª–æ–Ω–≥—Ç–∞–ø –º–µ–Ω—é.", () -> {});
        });

        step("–¢–∞–ø –ø–æ –ß—Ç–æ –∑–¥–µ—Å—å?", () -> {
            state.geoCard = state.longTapMenu.clickWhatIsHere();
            expect("–û—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –∫–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ—á–∫–∏: "
                + "–í –∫–∞—Ä—Ç–æ—á–∫–µ –≤–∏—Å–∏—Ç —Å–ª–æ–≤–æ '–ó–∞–≥—Ä—É–∑–∫–∞'",
                () -> state.geoCard.checkText("–ó–∞–≥—Ä—É–∑–∫–∞"));
        });

        step("–†–∞—Å–∫—Ä—ã—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É —Ç–æ—á–∫–∏.", () -> {
            state.geoCard.swipeUp();
            expect("–í –∫–∞—Ä—Ç–æ—á–∫–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ç–æ—á–∫–∏",
                () -> state.geoCard.checkText("–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã"));
        });

        step("–¢–∞–ø –ø–æ –∑–Ω–∞—á–∫—É –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤ –ø–æ–ª–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.", () -> {
            state.geoCard.clickCopyCoordinates();
            expect("–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ –±—É—Ñ–µ—Ä",
                () -> user.checkClipboard(Pattern.compile("\\d+\\.\\d+, \\d+\\.\\d+")));
        });
    }
}
