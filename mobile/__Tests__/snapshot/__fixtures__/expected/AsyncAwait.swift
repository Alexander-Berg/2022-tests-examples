// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM async-await.ts >>>

import Foundation

public protocol I {
  func f() -> Void
}

open class B: I {
  open func f() -> Void {
  }

}

fileprivate func f() -> Void {
  return B().f()
}

open class A: I {
  open func f() -> Void {
    B().f()
    let a: Void = B().f()
    do {
      (try self.g())
    } catch {
      let e = error
    }
  }

  @discardableResult
  open func g() throws -> Void {
  }

}

