// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM tests/abstract-mail-tests.ts >>>

package com.yandex.xplat.testopithecus

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*
import com.yandex.xplat.eventus.*
import com.yandex.xplat.mapi.*
import com.yandex.xplat.testopithecus.common.*

public abstract class RegularYandexMailTestBase protected constructor(description: String): RegularYandexTestBase<MailboxBuilder>(description) {
    open override fun regularScenario(account: UserAccount): TestPlan {
        this.setDeviceTypeInModel()
        return this.testScenario(account)
    }

    abstract fun testScenario(account: UserAccount): TestPlan
    abstract override fun prepareAccount(preparer: MailboxBuilder): Unit
    private fun setDeviceTypeInModel(): Unit {
        val settings = TestSettings()
        this.setupSettings(settings)
        DeviceTypeModel.instance.setDeviceType(if (settings.hasTag(DeviceType.Tab)) DeviceType.Tab else DeviceType.Phone)
    }

    protected open fun yandexLogin(account: UserAccount): TestPlan {
        return this.login(account, AccountType2.Yandex)
    }

    protected open fun login(account: UserAccount, accountType: AccountType2): TestPlan {
        return TestPlan.empty().then(loginAction(account, accountType))
    }

}

