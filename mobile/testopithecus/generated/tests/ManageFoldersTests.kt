// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM tests/manage-folders-tests.ts >>>

package com.yandex.xplat.testopithecus

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*
import com.yandex.xplat.eventus.*
import com.yandex.xplat.mapi.*
import com.yandex.xplat.testopithecus.common.*

public open class ManageFoldersAddNewFolderInRootTest(): RegularYandexMailTestBase("FoldersManager. Добавление новой папки в корневую папку") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(5844).androidCase(10236)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(OpenFolderListAction()).then(OpenFolderManagerAction()).then(OpenCreateFolderScreenAction()).then(EnterNameForNewFolderAction("NewFolder")).then(SubmitNewFolderAction()).then(CloseFolderManagerAction())
    }

}

public open class ManageFoldersDeleteFolderWithSubfoldersByLongSwipeTest(): RegularYandexMailTestBase("FoldersManager. Удаление папки с подпапкой длинным свайпом") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(5858)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
        mailbox.createFolder("SubFolder", mutableListOf("Folder")).switchFolder("SubFolder", mutableListOf("Folder")).nextMessage("subj21").nextMessage("subj22")
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(OpenFolderListAction()).then(OpenFolderManagerAction()).then(DeleteFolderAction("Folder", mutableListOf(), ContainerDeletionMethod.longSwipe)).then(CloseFolderManagerAction()).then(GoToFolderAction(DefaultFolderName.trash))
    }

}

public open class ManageFoldersEditFolderTest(): RegularYandexMailTestBase("FoldersManager. Изменение папки") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(5853).androidCase(10237)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
        mailbox.createFolder("Folder1").switchFolder("Folder1").nextMessage("subj11").nextMessage("subj12").createFolder("Folder2")
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(OpenFolderListAction()).then(OpenFolderManagerAction()).then(OpenEditFolderScreenAction("Folder1")).then(EnterNameForEditedFolderAction("EditedFolder1")).then(OpenFolderLocationScreenAction()).then(SelectParentFolderAction(mutableListOf("Folder2"))).then(SubmitEditedFolderAction()).then(CloseFolderManagerAction()).then(GoToFolderAction("EditedFolder1", mutableListOf("Folder2")))
    }

}

public open class ManageFoldersValidateViewTest(): RegularYandexMailTestBase("FoldersManager. Внешний вид экрана Управление папками") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(5838).androidCase(10267)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
        mailbox.createFolder("Folder")
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(OpenFolderListAction()).then(OpenFolderManagerAction()).then(AssertSnapshotAction(this.description))
    }

}

public open class ManageFoldersValidateEditFolderViewTest(): RegularYandexMailTestBase("FoldersManager. Внешний вид экрана Изменить папку") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(5840).androidCase(10271)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
        mailbox.createFolder("Folder")
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(OpenFolderListAction()).then(OpenFolderManagerAction()).then(OpenEditFolderScreenAction("Folder"))
    }

}

public open class ManageFoldersValidateAddFolderViewTest(): RegularYandexMailTestBase("FoldersManager. Внешний вид экрана Новая папка") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(5839).androidCase(10268)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
        mailbox.createFolder("Folder1").createFolder("Folder2").createFolder("SubFolder1", mutableListOf("Folder")).createFolder("SubFolder2", mutableListOf("Folder"))
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(OpenFolderListAction()).then(OpenFolderManagerAction()).then(OpenCreateFolderScreenAction())
    }

}

public open class ManageFoldersValidateFolderLocationViewTest(): RegularYandexMailTestBase("FoldersManager. Внешний вид экрана Расположение папки") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(5841).androidCase(10272)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
        mailbox.createFolder("Folder1").createFolder("Folder2").createFolder("SubFolder1", mutableListOf("Folder")).createFolder("SubFolder2", mutableListOf("Folder"))
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(OpenFolderListAction()).then(OpenFolderManagerAction()).then(OpenCreateFolderScreenAction()).then(OpenFolderLocationScreenAction()).then(AssertSnapshotAction(this.description))
    }

}

public open class ManageFoldersDeleteFolderTest(): RegularYandexMailTestBase("FoldersManager. Удаление папки в которой есть подпапки") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(5859).androidCase(10238)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
        mailbox.createFolder("SubFolder", mutableListOf("Folder")).switchFolder("SubFolder", mutableListOf("Folder")).nextMessage("subj21").nextMessage("subj22")
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(OpenFolderListAction()).then(OpenFolderManagerAction()).then(DeleteFolderAction("Folder", mutableListOf(), ContainerDeletionMethod.tap)).then(CloseFolderManagerAction()).then(GoToFolderAction(DefaultFolderName.trash))
    }

}

