// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM tests/settings-tests.ts >>>

import Foundation

open class OpenAboutSettingsTest: RegularYandexMailTestBase {
  public init() {
    super.init("Settings. Открытие экрана About в настройках и проверка версии приложения")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.iosCase(502).androidCase(6060)
  }

  open override func prepareAccount(_ builder: MailboxBuilder) -> Void {
    builder.nextMessage("subj")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenSettingsAction()).then(OpenAboutSettingsAction()).then(AssertSnapshotAction(self.description))
  }

}

open class ClearCacheTest: RegularYandexMailTestBase {
  public init() {
    super.init("Settings. General setting. Удаление кэша")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.iosCase(8318).androidCase(7456)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.nextMessage("subj").nextMessage("subj2").nextMessage("subj3").nextMessage("subj4").nextMessage("subj5").nextMessage("subj6").nextMessage("subj7").nextMessage("subj8").nextMessage("subj9").createFolder("UserFolder").switchFolder("UserFolder").nextMessage("usr_subj").nextMessage("usr_subj2").nextMessage("usr_subj3").nextMessage("usr_subj4").nextMessage("usr_subj5").nextMessage("usr_subj6").nextMessage("usr_subj7").nextMessage("usr_subj8").nextMessage("usr_subj9")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenSettingsAction()).then(OpenGeneralSettingsAction()).then(ClearCacheAction()).then(CloseGeneralSettingsAction()).then(CloseRootSettings()).then(GoToFolderAction(DefaultFolderName.inbox)).then(AssertAction()).then(OpenFolderListAction()).then(GoToFolderAction("UserFolder")).then(AssertAction()).then(OpenFolderListAction()).then(OpenSettingsAction()).then(OpenGeneralSettingsAction()).then(ClearCacheAction()).then(CloseGeneralSettingsAction()).then(CloseRootSettings()).then(GoToFolderAction("UserFolder"))
  }

}

open class OpenAccountSettingsTest: RegularYandexMailTestBase {
  public init() {
    super.init("Settings: Открытие настроек первого аккаунта в списке")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(6060).ignoreOn(MBTPlatform.IOS)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.nextMessage("subj")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenSettingsAction()).then(OpenAccountSettingsAction(0))
  }

}

open class ValidateGeneralSettingsTest: RegularYandexMailTestBase {
  public init() {
    super.init("Settings. General settings. Отображение общих настроек.")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.iosCase(403).androidCase(6096)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenSettingsAction()).then(OpenGeneralSettingsAction()).then(AssertSnapshotAction(self.description))
  }

}

open class ValidateRootSettingsTest: RegularYandexMailTestBase {
  public init() {
    super.init("Settings. General settings. Отображение главного экрана настроек.")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.iosCase(499).androidCase(6096)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenSettingsAction()).then(AssertSnapshotAction(self.description))
  }

}

open class ValidateAccountSettingsTest: RegularYandexMailTestBase {
  public init() {
    super.init("Settings. Account settings. Отображение настроек аккаунта.")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.iosCase(409).androidCase(7475)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenSettingsAction()).then(OpenAccountSettingsAction(0)).then(AssertSnapshotAction(self.description))
  }

}

open class TurningOnCompactModeTest: RegularYandexMailTestBase {
  public init() {
    super.init("Settings. General settings. Включение компактного режима.")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.iosCase(21).androidCase(7442)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.nextMessage("Inbox subj1").nextMessage("Inbox subj2")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenSettingsAction()).then(OpenGeneralSettingsAction()).then(TurnOnCompactMode()).then(CloseGeneralSettingsAction()).then(CloseRootSettings()).then(GoToFolderAction(DefaultFolderName.inbox))
  }

}

open class TurningOffCompactModeTest: RegularYandexMailTestBase {
  public init() {
    super.init("Settings. General settings. Выключение компактного режима.")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.iosCase(10890).androidCase(7443)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.createFolder("UserFolder").switchFolder("UserFolder").nextMessage("UserFolder subj1").nextMessage("UserFolder subj2")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenSettingsAction()).then(OpenGeneralSettingsAction()).then(TurnOnCompactMode()).then(CloseGeneralSettingsAction()).then(CloseRootSettings()).then(GoToFolderAction("UserFolder")).then(OpenFolderListAction()).then(OpenSettingsAction()).then(OpenGeneralSettingsAction()).then(TurnOffCompactMode()).then(CloseGeneralSettingsAction()).then(CloseRootSettings()).then(GoToFolderAction("UserFolder"))
  }

}

open class ChangingActionOnSwipeTest: RegularYandexMailTestBase {
  public init() {
    super.init("Settings. General settings. Изменение действия по свайпу.")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.iosCase(406).androidCase(7449)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.nextMessage("Inbox subj1").nextMessage("Inbox subj2").nextMessage("Inbox subj3").nextMessage("Inbox subj4").nextMessage("Inbox subj5")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(DeleteMessageByLongSwipeAction(1)).then(OpenFolderListAction()).then(OpenSettingsAction()).then(OpenGeneralSettingsAction()).then(SetActionOnSwipe(ActionOnSwipe.archive)).then(CloseGeneralSettingsAction()).then(CloseRootSettings()).then(GoToFolderAction(DefaultFolderName.inbox)).then(ArchiveMessageByLongSwipeAction(2))
  }

}

open class ChangingSignatureTest: RegularYandexMailTestBase {
  public init() {
    super.init("Settings. General settings. Изменение подписи.")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.iosCase(412).androidCase(7466)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.nextMessage("Inbox subj1").nextMessage("Inbox subj2").nextMessage("Inbox subj3").nextMessage("Inbox subj4").nextMessage("Inbox subj5")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenSettingsAction()).then(OpenAccountSettingsAction(0)).then(ChangeSignatureAction("--\nNew signature")).then(CloseAccountSettingsAction()).then(CloseRootSettings()).then(GoToFolderAction(DefaultFolderName.inbox)).then(ComposeOpenAction())
  }

}

open class DefaultActionOnSwipeTest: RegularYandexMailTestBase {
  public init() {
    super.init("Settings. General settings. Действие по свайпу по-умолчанию.")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(7448)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.nextMessage("Inbox subj1").nextMessage("Inbox subj2").nextMessage("Inbox subj3").nextMessage("Inbox subj4").nextMessage("Inbox subj5")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenSettingsAction()).then(OpenGeneralSettingsAction()).then(AssertAction()).then(CloseGeneralSettingsAction()).then(CloseRootSettings()).then(GoToFolderAction(DefaultFolderName.inbox)).then(DeleteMessageByLongSwipeAction(2))
  }

}

open class ViewAccountSettingsInLandscapeTest: RegularYandexMailTestBase {
  public init() {
    super.init("Settings. Account settings. Отображение настроек аккаунта в landscape.")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(7476)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(RotateToLandscape()).then(OpenFolderListAction()).then(OpenSettingsAction()).then(OpenAccountSettingsAction(0))
  }

}

open class ViewSettingsInLandscapeTest: RegularYandexMailTestBase {
  public init() {
    super.init("Settings. General settings. Отображение настроек в landscape.")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(7461)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenSettingsAction()).then(RotateToLandscape()).then(AssertAction()).then(OpenGeneralSettingsAction())
  }

}

open class ViewSettingsTestTab: RegularYandexMailTestBase {
  public init() {
    super.init("Settings. General settings. Отображение настроек в landscape 2pane.")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(7462).setTags(YSArray(DeviceType.Tab))
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenSettingsAction()).then(RotateToLandscape()).then(AssertAction()).then(OpenGeneralSettingsAction())
  }

}

open class UndoClearCacheTest: RegularYandexMailTestBase {
  public init() {
    super.init("Settings. Main settings. Отказаться от очиски кэша.")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(10830)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.nextManyMessage(42)
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(SwipeDownMessageListAction()).then(SwipeDownMessageListAction()).then(OpenFolderListAction()).then(OpenSettingsAction()).then(OpenGeneralSettingsAction()).then(TapToClearCacheAndCancelAction()).then(CloseGeneralSettingsAction()).then(CloseRootSettings()).then(GoToFolderAction(DefaultFolderName.inbox))
  }

}

