// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM tests/random-walk-test.ts >>>

package com.yandex.xplat.testopithecus

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*
import com.yandex.xplat.eventus.*
import com.yandex.xplat.mapi.*
import com.yandex.xplat.testopithecus.common.*

public open class RandomWalkTest(pathLength: Int, logger: Logger, seed: Int): BaseUserBehaviourTest<MailboxBuilder>("random walk for ${pathLength} steps with seed ${seed}", LoginComponent(), pathLength, logger, seed) {
    open override fun requiredAccounts(): YSArray<AccountType2> {
        return mutableListOf(AccountType2.Yandex)
    }

    open override fun prepareAccounts(mailboxes: YSArray<MailboxBuilder>): Unit {
        mailboxes[0].nextMessage("subj")
    }

    open override fun getUserBehaviour(accounts: YSArray<UserAccount>): UserBehaviour {
        return allActionsBehaviour(accounts).blacklist(ClearCacheAction.type).blacklist(OpenSettingsAction.type)
    }

    companion object {
        @JvmStatic
        open fun generate(count: Int, logger: Logger): YSArray<RandomWalkTest> {
            val tests: YSArray<RandomWalkTest> = mutableListOf()
            for (i in (0 until count step 1)) {
                tests.add(RandomWalkTest(5, logger, TypeSupport.asInt32(i)!!))
            }
            return tests
        }

    }
}

