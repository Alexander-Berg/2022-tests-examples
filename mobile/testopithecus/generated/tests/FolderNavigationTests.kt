// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM tests/folder-navigation-tests.ts >>>

package com.yandex.xplat.testopithecus

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*
import com.yandex.xplat.eventus.*
import com.yandex.xplat.mapi.*
import com.yandex.xplat.testopithecus.common.*

public open class ChangeFoldersInboxCustomTest(): RegularYandexMailTestBase("FolderList. Переход в папки с письмами (Инбокс и кастомная папка)") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(10393).androidCase(10191)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
        mailbox.nextMessage("subj").createFolder("custom").switchFolder("custom").nextMessage("custom folder subj")
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(OpenFolderListAction()).then(GoToFolderAction("custom")).then(AssertAction()).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.inbox)).then(AssertAction())
    }

}

public open class ChangeFoldersSentDraftTest(): RegularYandexMailTestBase("FolderList. Переход в папки с письмами (Отправленные и черновики)") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(10393).androidCase(10191)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
        mailbox.switchFolder(DefaultFolderName.sent).nextMessage("sent subj").switchFolder(DefaultFolderName.draft).nextMessage("draft subj")
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(OpenFolderListAction()).then(AssertAction()).then(GoToFolderAction(DefaultFolderName.sent)).then(AssertAction()).then(OpenFolderListAction()).then(AssertAction()).then(GoToFolderAction(DefaultFolderName.draft))
    }

}

public open class ChangeFoldersArchiveSpamTrashTest(): RegularYandexMailTestBase("FolderList. Переход в папки с письмами (Архив, Спам, Удаленные)") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(10393).androidCase(10191)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
        mailbox.switchFolder(DefaultFolderName.spam).nextMessage("spam subj").switchFolder(DefaultFolderName.archive).nextMessage("archive subj").switchFolder(DefaultFolderName.trash).nextMessage("trash subj")
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.spam)).then(AssertAction()).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.archive)).then(AssertAction()).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.trash)).then(AssertAction())
    }

}

public open class ValidateFolderListTest(): RegularYandexMailTestBase("FolderList. Внешний вид списка папок") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(6350).ignoreOn(MBTPlatform.Android)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
        mailbox.createFolder("subsubsubfolder1_longname", mutableListOf("folder1", "subfolder1", "subsubfolder1")).createFolder("subfolder2", mutableListOf("folder2")).createFolder("subfolder22", mutableListOf("folder2"))
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(OpenFolderListAction()).then(AssertAction()).then(AssertSnapshotAction(this.description))
    }

}

public open class ValidateLabelListTest(): RegularYandexMailTestBase("FolderList. Внешний вид списка меток") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(6350).ignoreOn(MBTPlatform.Android)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
        mailbox.createLabel(LabelData("label1", LabelColor.red1.toString())).createLabel(LabelData("label2", LabelColor.green2.toString())).createLabel(LabelData("label3", LabelColor.blue3.toString()))
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(OpenFolderListAction()).then(AssertSnapshotAction(this.description))
    }

}

public open class NewFolderFromBackTestIos(): RegularYandexMailTestBase("FolderList. Отображение новой папки") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(10338).ignoreOn(MBTPlatform.Android)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(OpenFolderListAction()).thenChain(mutableListOf(BackendCreateFolderAction("custom"), PtrFolderListAction()))
    }

}

public open class NewFolderFromBackTestAndroid(): RegularYandexMailTestBase("FolderList. Отображение новой папки") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.androidCase(10121).ignoreOn(MBTPlatform.IOS)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(OpenFolderListAction()).then(BackendCreateFolderAction("custom")).then(GoToFolderAction(DefaultFolderName.inbox)).then(RefreshMessageListAction()).then(OpenFolderListAction())
    }

}

public open class NewLabelFromBackTestIos(): RegularYandexMailTestBase("FolderList. Отображение новой метки") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(10339).ignoreOn(MBTPlatform.Android)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(OpenFolderListAction()).thenChain(mutableListOf(BackendCreateLabelAction(LabelData("custom")), PtrFolderListAction()))
    }

}

public open class NewLabelFromBackTestAndroid(): RegularYandexMailTestBase("FolderList. Отображение новой метки") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.androidCase(10122).ignoreOn(MBTPlatform.IOS)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(OpenFolderListAction()).then(BackendCreateLabelAction(LabelData("custom"))).then(GoToFolderAction(DefaultFolderName.inbox)).then(RefreshMessageListAction()).then(OpenFolderListAction()).then(OpenFolderListAction())
    }

}

public open class LongFolderNameViewTest(): RegularYandexMailTestBase("FolderList. Отображение длинного имени папки") {
    open override fun setupSettings(settings: TestSettings): Unit {
        settings.iosCase(10359).androidCase(10146)
    }

    open override fun prepareAccount(mailbox: MailboxBuilder): Unit {
        mailbox.createFolder("0123456789012345678901234567890")
    }

    open override fun testScenario(account: UserAccount): TestPlan {
        return this.yandexLogin(account).then(OpenFolderListAction())
    }

}

