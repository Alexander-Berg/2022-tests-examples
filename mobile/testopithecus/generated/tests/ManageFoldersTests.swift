// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM tests/manage-folders-tests.ts >>>

import Foundation

open class ManageFoldersAddNewFolderInRootTest: RegularYandexMailTestBase {
  public init() {
    super.init("FoldersManager. Добавление новой папки в корневую папку")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.iosCase(5844).androidCase(10236)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenFolderManagerAction()).then(OpenCreateFolderScreenAction()).then(EnterNameForNewFolderAction("NewFolder")).then(SubmitNewFolderAction()).then(CloseFolderManagerAction())
  }

}

open class ManageFoldersDeleteFolderWithSubfoldersByLongSwipeTest: RegularYandexMailTestBase {
  public init() {
    super.init("FoldersManager. Удаление папки с подпапкой длинным свайпом")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.iosCase(5858)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.createFolder("SubFolder", YSArray("Folder")).switchFolder("SubFolder", YSArray("Folder")).nextMessage("subj21").nextMessage("subj22")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenFolderManagerAction()).then(DeleteFolderAction("Folder", YSArray(), ContainerDeletionMethod.longSwipe)).then(CloseFolderManagerAction()).then(GoToFolderAction(DefaultFolderName.trash))
  }

}

open class ManageFoldersEditFolderTest: RegularYandexMailTestBase {
  public init() {
    super.init("FoldersManager. Изменение папки")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.iosCase(5853).androidCase(10237)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.createFolder("Folder1").switchFolder("Folder1").nextMessage("subj11").nextMessage("subj12").createFolder("Folder2")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenFolderManagerAction()).then(OpenEditFolderScreenAction("Folder1")).then(EnterNameForEditedFolderAction("EditedFolder1")).then(OpenFolderLocationScreenAction()).then(SelectParentFolderAction(YSArray("Folder2"))).then(SubmitEditedFolderAction()).then(CloseFolderManagerAction()).then(GoToFolderAction("EditedFolder1", YSArray("Folder2")))
  }

}

open class ManageFoldersValidateViewTest: RegularYandexMailTestBase {
  public init() {
    super.init("FoldersManager. Внешний вид экрана Управление папками")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.iosCase(5838).androidCase(10267)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.createFolder("Folder")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenFolderManagerAction()).then(AssertSnapshotAction(self.description))
  }

}

open class ManageFoldersValidateEditFolderViewTest: RegularYandexMailTestBase {
  public init() {
    super.init("FoldersManager. Внешний вид экрана Изменить папку")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.iosCase(5840).androidCase(10271)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.createFolder("Folder")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenFolderManagerAction()).then(OpenEditFolderScreenAction("Folder"))
  }

}

open class ManageFoldersValidateAddFolderViewTest: RegularYandexMailTestBase {
  public init() {
    super.init("FoldersManager. Внешний вид экрана Новая папка")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.iosCase(5839).androidCase(10268)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.createFolder("Folder1").createFolder("Folder2").createFolder("SubFolder1", YSArray("Folder")).createFolder("SubFolder2", YSArray("Folder"))
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenFolderManagerAction()).then(OpenCreateFolderScreenAction())
  }

}

open class ManageFoldersValidateFolderLocationViewTest: RegularYandexMailTestBase {
  public init() {
    super.init("FoldersManager. Внешний вид экрана Расположение папки")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.iosCase(5841).androidCase(10272)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.createFolder("Folder1").createFolder("Folder2").createFolder("SubFolder1", YSArray("Folder")).createFolder("SubFolder2", YSArray("Folder"))
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenFolderManagerAction()).then(OpenCreateFolderScreenAction()).then(OpenFolderLocationScreenAction()).then(AssertSnapshotAction(self.description))
  }

}

open class ManageFoldersDeleteFolderTest: RegularYandexMailTestBase {
  public init() {
    super.init("FoldersManager. Удаление папки в которой есть подпапки")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.iosCase(5859).androidCase(10238)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.createFolder("SubFolder", YSArray("Folder")).switchFolder("SubFolder", YSArray("Folder")).nextMessage("subj21").nextMessage("subj22")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenFolderManagerAction()).then(DeleteFolderAction("Folder", YSArray(), ContainerDeletionMethod.tap)).then(CloseFolderManagerAction()).then(GoToFolderAction(DefaultFolderName.trash))
  }

}

