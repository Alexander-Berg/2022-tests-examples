// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM tests/read-unread-tests.ts >>>

import Foundation

open class MarkUnreadAfterReadTest: RegularYandexMailTestBase {
  public init() {
    super.init("should able to mark unread after read")
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.nextMessage("subj")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(MarkAsRead(0)).then(MarkAsUnread(0))
  }

}

open class ReadMessageAfterOpeningTest: RegularYandexMailTestBase {
  public init() {
    super.init("should read message after opening")
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.nextMessage("subj")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenMessageAction(0)).then(MessageViewBackToMailListAction()).then(MarkAsUnread(0))
  }

}

open class MarkAllThreadMessagesReadByMarkingMainMessageTest: RegularYandexMailTestBase {
  public init() {
    super.init("should mark all thread messages read by marking main message")
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.nextMessage("subj").nextMessage("subj")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(MarkAsRead(0)).then(ExpandThreadAction(0))
  }

}

