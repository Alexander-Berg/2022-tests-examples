// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM tests/maillist-view-tests.ts >>>

import Foundation

open class ThreadModeTurnOffAndThenOnTest: RegularYandexMailTestBase {
  public init() {
    super.init("MessageListView. Изменение настройки тредного режима")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(6839).iosCase(6793)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.nextMessage("subj1").nextMessage("subj2").nextMessage("subj2").nextMessage("subj2").nextMessage("subj1").nextMessage("subj3")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenSettingsAction()).then(OpenAccountSettingsAction(0)).then(SwitchOffThreadingAction()).then(CloseAccountSettingsAction()).then(CloseRootSettings()).then(OpenSettingsAction()).then(OpenAccountSettingsAction(0)).then(SwitchOnThreadingAction()).then(CloseAccountSettingsAction()).then(CloseRootSettings()).then(GoToFolderAction(DefaultFolderName.inbox))
  }

}

open class MailListViewInCompactMode: RegularYandexMailTestBase {
  public init() {
    super.init("MessageListView. Отображение списка писем папки Входящие в compact режиме")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.iosCase(641).androidCase(10776)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.nextMessage("subj1").nextMessage("subj2").nextMessage("subj3").nextMessage("subj4").nextMessage("subj5")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenSettingsAction()).then(OpenGeneralSettingsAction()).then(TurnOnCompactMode()).then(CloseGeneralSettingsAction()).then(CloseRootSettings()).then(GoToFolderAction(DefaultFolderName.inbox))
  }

}

open class MarkAsImportantMessageInTabSubscriptionTest: RegularYandexMailTestBase {
  public init() {
    super.init("MessageListView. Отметить письмо важным в табе Рассылки")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(551).ignoreOn(MBTPlatform.Android)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.turnOnTab().nextMessage("subj1").nextMessage("subj2")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(ShortSwipeContextMenuMoveToFolderAction(0, DefaultFolderName.mailingLists)).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.mailingLists)).then(MarkAsImportant(0))
  }

}

open class TabNotificationInTheMiddleMailList: RegularYandexMailTestBase {
  public init() {
    super.init("MessageListView. Плашка таба находится в середине списка писем")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(8825).ignoreOn(MBTPlatform.Android)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.turnOnTab().nextMessage("subj1").nextMessage("subj2").nextMessage("subj3").nextMessage("subj4")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(ShortSwipeContextMenuMoveToFolderAction(1, DefaultFolderName.socialNetworks)).then(OpenTabByTabNotificationAction(DefaultFolderName.socialNetworks)).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.inbox))
  }

}

open class TabNotificationInTheFirstInMailList: RegularYandexMailTestBase {
  public init() {
    super.init("MessageListView. Плашка таба находится в начале списка писем")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(8821).ignoreOn(MBTPlatform.Android)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.turnOnTab().nextMessage("subj1").nextMessage("subj2").nextMessage("subj3").nextMessage("subj4")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(MarkAsRead(0)).then(ShortSwipeContextMenuMoveToFolderAction(0, DefaultFolderName.mailingLists)).then(OpenTabByTabNotificationAction(DefaultFolderName.mailingLists)).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.inbox))
  }

}

open class TabNotificationInEmptyMessageList: RegularYandexMailTestBase {
  public init() {
    super.init("MessageListView. Плашка таба находится в пустом списке писем")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(8828).ignoreOn(MBTPlatform.Android)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.turnOnTab().nextMessage("subj1")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(ShortSwipeContextMenuMoveToFolderAction(0, DefaultFolderName.mailingLists)).then(OpenTabByTabNotificationAction(DefaultFolderName.mailingLists)).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.inbox))
  }

}

open class TabNotificationInCompactMode: RegularYandexMailTestBase {
  public init() {
    super.init("MessageListView. Вид плашки табов в компактном режиме")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(8833).ignoreOn(MBTPlatform.Android)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.turnOnTab().nextMessage("subj1").nextMessage("subj2").nextMessage("subj3").nextMessage("subj4")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(MarkAsRead(0)).then(ShortSwipeContextMenuMoveToFolderAction(0, DefaultFolderName.mailingLists)).then(ShortSwipeContextMenuMoveToFolderAction(2, DefaultFolderName.socialNetworks)).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.mailingLists)).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.socialNetworks)).then(OpenFolderListAction()).then(OpenSettingsAction()).then(OpenGeneralSettingsAction()).then(TurnOnCompactMode()).then(CloseGeneralSettingsAction()).then(CloseRootSettings()).then(GoToFolderAction(DefaultFolderName.inbox))
  }

}

open class GoToTabByTabsNotification: RegularYandexMailTestBase {
  public init() {
    super.init("MessageListView. Переход в папку таба через плашку нотификации в таб")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(8836).ignoreOn(MBTPlatform.Android)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.turnOnTab().nextMessage("subj1").nextMessage("subj2").nextMessage("subj3").nextMessage("subj4")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.mailingLists)).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.socialNetworks)).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.inbox)).then(MarkAsRead(0)).then(ShortSwipeContextMenuMoveToFolderAction(0, DefaultFolderName.mailingLists)).then(ShortSwipeContextMenuMoveToFolderAction(2, DefaultFolderName.socialNetworks)).then(OpenTabByTabNotificationAction(DefaultFolderName.socialNetworks)).then(AssertAction()).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.inbox))
  }

}

open class TabsNotificationOnlyInInbox: RegularYandexMailTestBase {
  public init() {
    super.init("MessageListView. Плашки только во Входящих")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(8835).ignoreOn(MBTPlatform.Android)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.turnOnTab().nextMessage("subj1").nextMessage("subj2").nextMessage("subj3").nextMessage("subj4")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(ShortSwipeContextMenuMoveToFolderAction(0, DefaultFolderName.mailingLists)).then(ShortSwipeContextMenuMoveToFolderAction(2, DefaultFolderName.socialNetworks)).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.mailingLists)).then(AssertAction()).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.socialNetworks)).then(AssertAction()).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.inbox))
  }

}

open class TabsNotificationInLandscape: RegularYandexMailTestBase {
  public init() {
    super.init("MessageListView. Отображение плашек в Landscape")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(8831).ignoreOn(MBTPlatform.Android)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.turnOnTab().nextMessage("subj1").nextMessage("subj2").nextMessage("subj3")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(ShortSwipeContextMenuMoveToFolderAction(0, DefaultFolderName.mailingLists)).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.mailingLists)).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.inbox)).then(RotateToLandscape())
  }

}

open class DisplayTabsNotificationAfterMoveMessage: RegularYandexMailTestBase {
  public init() {
    super.init("MessageListView. Появление плашки при перемещении письма в пустой ТАБ")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(8843).ignoreOn(MBTPlatform.Android)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.turnOnTab().nextMessage("subj1").nextMessage("subj2").nextMessage("subj3")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.mailingLists)).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.socialNetworks)).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.inbox)).then(ShortSwipeContextMenuMoveToFolderAction(0, DefaultFolderName.mailingLists)).then(ShortSwipeContextMenuMoveToFolderAction(1, DefaultFolderName.socialNetworks))
  }

}

open class GroupModeWithTabNotification: RegularYandexMailTestBase {
  public init() {
    super.init("MessageListView. Тап по плашке в групповом режиме")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(8850).ignoreOn(MBTPlatform.Android)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.turnOnTab().nextMessage("subj1").nextMessage("subj2")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.mailingLists)).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.inbox)).then(ShortSwipeContextMenuMoveToFolderAction(0, DefaultFolderName.mailingLists)).then(MarkAsRead(0)).then(GroupModeInitialSelectAction(0)).then(OpenTabByTabNotificationAction(DefaultFolderName.mailingLists))
  }

}

open class MailListViewInThreadFolder: RegularYandexMailTestBase {
  public init() {
    super.init("MessageListView. Отображение писем в тредовальной папке")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(6820).iosCase(6774)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.switchFolder(DefaultFolderName.sent).nextMessage("subj1").nextThread("subj2", 3).createLabel(LabelData("label1")).nextCustomMessage(MessageSpecBuilder().withDefaults().addLabels(YSArray(LabelData("label1"))).withSubject("user_subj3"))
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.sent)).then(AssertSnapshotAction(self.description))
  }

}

open class MailListViewInThreadLessFolder: RegularYandexMailTestBase {
  public init() {
    super.init("MessageListView. Отображение писем в не тредовальной папке")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(6821).iosCase(6775)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.nextThread("subj1", 2).nextThread("subj2", 2).createLabel(LabelData("label1")).nextCustomMessage(MessageSpecBuilder().withDefaults().addLabels(YSArray(LabelData("label1"))).withSubject("user_subj3"))
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenSettingsAction()).then(OpenAccountSettingsAction(0)).then(SwitchOffThreadingAction()).then(CloseAccountSettingsAction()).then(CloseRootSettings()).then(GoToFolderAction(DefaultFolderName.inbox)).then(MarkAsImportant(0)).then(GroupModeInitialSelectAction(2)).then(GroupModeSelectAction(1)).then(GroupModeSelectAction(0)).then(GroupModeArchiveAction()).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.archive))
  }

}

open class MailListViewInThreadFolderLandscape: RegularYandexMailTestBase {
  public init() {
    super.init("MessageListView. Отображение писем в тредовальной папке в портретном режиме")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(6822).iosCase(6776)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.createFolder("UserFolder").switchFolder("UserFolder").nextMessage("subj1").nextThread("subj2", 3).createLabel(LabelData("label1")).nextCustomMessage(MessageSpecBuilder().withDefaults().addLabels(YSArray(LabelData("label1"))).withSubject("user_subj3"))
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(RotateToLandscape()).then(OpenFolderListAction()).then(GoToFolderAction("UserFolder"))
  }

}

open class MailListViewInThreadLessFolderLandscape: RegularYandexMailTestBase {
  public init() {
    super.init("MessageListView. Отображение писем в нетредовальной папке в режиме портрета")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(6823).iosCase(6777)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.switchFolder(DefaultFolderName.trash).nextMessage("subj1").nextThread("subj2", 3).createLabel(LabelData("label1")).nextCustomMessage(MessageSpecBuilder().withDefaults().addLabels(YSArray(LabelData("label1"))).withSubject("user_subj3"))
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(RotateToLandscape()).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.trash))
  }

}

open class MailListViewInUnreadLabel: RegularYandexMailTestBase {
  public init() {
    super.init("MessageListView. Отображение писем в метке Непрочитанные")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(6824).iosCase(11119)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.nextMessage("subj1").nextThread("subj2", 3).createLabel(LabelData("label1")).nextCustomMessage(MessageSpecBuilder().withDefaults().addLabels(YSArray(LabelData("label1"))).withSubject("user_subj3"))
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(GoToFilterUnreadAction())
  }

}

open class MailListViewInUnreadLabelLandscape: RegularYandexMailTestBase {
  public init() {
    super.init("MessageListView. Отображение писем в метке Непрочитанные в режиме портрета")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(6825).iosCase(11120)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.nextMessage("subj1").nextThread("subj2", 3).createLabel(LabelData("label1")).nextCustomMessage(MessageSpecBuilder().withDefaults().addLabels(YSArray(LabelData("label1"))).withSubject("user_subj3"))
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(GoToFilterUnreadAction()).then(RotateToLandscape())
  }

}

open class MailListViewInImportantLabel: RegularYandexMailTestBase {
  public init() {
    super.init("MessageListView. Отображение писем в метке Важные")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(6826).iosCase(6780)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.nextMessage("subj1").nextThread("subj2", 3).createLabel(LabelData("label1")).nextCustomMessage(MessageSpecBuilder().withDefaults().addLabels(YSArray(LabelData("label1"))).withSubject("user_subj3"))
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(GroupModeInitialSelectAction(0)).then(GroupModeSelectAction(1)).then(GroupModeSelectAction(2)).then(GroupModeMarkImportantAction()).then(OpenFolderListAction()).then(GoToFilterImportantAction())
  }

}

open class MailListViewInUserLabel: RegularYandexMailTestBase {
  public init() {
    super.init("MessageListView. Отображение писем в Пользовательской метке")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(9659).iosCase(10778)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.nextMessage("subj1").nextMessage("subj2").nextThread("subj3", 3).createLabel(LabelData("label1"))
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(MarkAsImportant(0)).then(GroupModeInitialSelectAction(0)).then(GroupModeSelectAction(1)).then(GroupModeSelectAction(2)).then(GroupModeApplyLabelsAction(YSArray("label1"))).then(OpenFolderListAction()).then(GoToLabelAction("label1"))
  }

}

open class MailListViewInThreadFolderTab: RegularYandexMailTestBase {
  public init() {
    super.init("MessageListView. Отображение списка писем в тредовальной папке в планшетах")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(6831).setTags(YSArray(DeviceType.Tab))
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.nextMessage("subj1").nextThread("subj2", 3).createLabel(LabelData("label1")).nextCustomMessage(MessageSpecBuilder().withDefaults().addLabels(YSArray(LabelData("label1"))).withSubject("user_subj3"))
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(RotateToLandscape()).then(AssertAction()).then(OpenMessageAction(0))
  }

}

open class MailListViewInThreadLessFolderTab: RegularYandexMailTestBase {
  public init() {
    super.init("MessageListView. Вид списка писем в нетредовальной папке в планшетах")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(6832).setTags(YSArray(DeviceType.Tab))
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.nextThread("subj1", 2).createLabel(LabelData("label1")).nextCustomMessage(MessageSpecBuilder().withDefaults().addLabels(YSArray(LabelData("label1"))).withSubject("user_subj3"))
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(RotateToLandscape()).then(GroupModeInitialSelectAction(0)).then(GroupModeSelectAction(1)).then(GroupModeMarkSpamAction()).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.spam))
  }

}

open class MailListViewInImportantLabelTab: RegularYandexMailTestBase {
  public init() {
    super.init("MessageListView. Отображение писем в метке Важные в планшетах")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(10868).iosCase(6781).setTags(YSArray(DeviceType.Tab))
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.nextMessage("subj1").nextThread("subj2", 3).createLabel(LabelData("label1")).nextCustomMessage(MessageSpecBuilder().withDefaults().addLabels(YSArray(LabelData("label1"))).withSubject("user_subj3"))
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(GroupModeInitialSelectAction(0)).then(GroupModeSelectAction(1)).then(GroupModeSelectAction(2)).then(GroupModeMarkImportantAction()).then(RotateToLandscape()).then(OpenFolderListAction()).then(GoToFilterImportantAction()).then(AssertAction()).then(OpenMessageAction(0))
  }

}

open class MailListViewNavigateByArrowsTab: RegularYandexMailTestBase {
  public init() {
    super.init("MessageListView. Переключение между письмами в просмотре письма по стрелкам")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(6857).iosCase(6811).ignoreOn(MBTPlatform.IOS).setTags(YSArray(DeviceType.Tab))
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.nextMessage("subj1").nextMessage("subj2").nextMessage("subj3")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(RotateToLandscape()).then(OpenMessageAction(0)).then(ArrowDownClickAction(0)).then(AssertAction()).then(ArrowUpClickAction())
  }

}

open class MailListViewInUnreadLabel2pane: RegularYandexMailTestBase {
  public init() {
    super.init("MessageListView.2pane. Вид писем в метке Непрочитанные с открытым письмом")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(10867).iosCase(6779).setTags(YSArray(DeviceType.Tab))
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.nextMessage("subj1").nextMessage("subj2").nextMessage("subj3").nextMessage("subj4").nextMessage("subj5")
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(RotateToLandscape()).then(OpenFolderListAction()).then(GoToFilterUnreadAction()).then(AssertAction()).then(OpenMessageAction(0)).then(AssertAction()).then(MessageViewBackToMailListAction()).then(OpenMessageAction(1))
  }

}

open class MailListViewInbox: RegularYandexMailTestBase {
  public init() {
    super.init("MessageListView. Отображение списка писем папки Входящие.")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.androidCase(10777).iosCase(8)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.nextMessage("subj1").nextMessage("subj2").nextMessage("subj3").createLabel(LabelData("label1")).nextCustomMessage(MessageSpecBuilder().withDefaults().addLabels(YSArray(LabelData("label1"))).withSubject("user_subj3"))
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(GoToFolderAction(DefaultFolderName.inbox)).then(AssertAction()).then(MarkAsRead(1)).then(AssertAction())
  }

}

