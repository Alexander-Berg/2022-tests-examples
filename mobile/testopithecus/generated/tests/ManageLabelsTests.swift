// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM tests/manage-labels-tests.ts >>>

import Foundation

open class ManageLabelsAddNewLabelTest: RegularYandexMailTestBase {
  public init() {
    super.init("LabelsManager. Добавление новой метки")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.iosCase(5874).androidCase(10223)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenLabelManagerAction()).then(OpenCreateLabelScreenAction()).then(EnterNameForNewLabelAction("new label")).then(SetNewLabelColorAction(2)).then(SubmitNewLabelAction()).then(CloseLabelManagerAction())
  }

}

open class ManageLabelsEditLabelTest: RegularYandexMailTestBase {
  public init() {
    super.init("LabelsManager. Изменение метки")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.iosCase(5879).androidCase(10240)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.nextCustomMessage(MessageSpecBuilder().withDefaults().addLabels(YSArray(LabelData("label1"))).withSubject("subj1")).nextCustomMessage(MessageSpecBuilder().withDefaults().addLabels(YSArray(LabelData("label1"), LabelData("label2"))).withSubject("subj2"))
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenLabelManagerAction()).then(OpenEditLabelScreenAction("label1")).then(EnterNameForEditedLabelAction("edited label")).then(SetEditedLabelColorAction(1)).then(SubmitEditedLabelAction()).then(CloseLabelManagerAction())
  }

}

open class ManageLabelsDeleteOpenedLabelByLongSwipeTest: RegularYandexMailTestBase {
  public init() {
    super.init("LabelsManager. Удаление метки")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.iosCase(5884).androidCase(10227)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.nextCustomMessage(MessageSpecBuilder().withDefaults().addLabels(YSArray(LabelData("label1"))).withSubject("subj1")).nextCustomMessage(MessageSpecBuilder().withDefaults().addLabels(YSArray(LabelData("label1"), LabelData("label2"))).withSubject("subj2"))
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenLabelManagerAction()).then(DeleteLabelAction("label1", ContainerDeletionMethod.tap)).then(CloseLabelManagerAction())
  }

}

open class ManageLabelsValidateViewTest: RegularYandexMailTestBase {
  public init() {
    super.init("LabelsManager. Внешний вид экрана Управление метками")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.iosCase(5869).androidCase(10320)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.createLabel(LabelData("label1")).createLabel(LabelData("label2"))
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenLabelManagerAction()).then(AssertSnapshotAction(self.description))
  }

}

open class ManageLabelsValidateAddLabelViewTest: RegularYandexMailTestBase {
  public init() {
    super.init("LabelsManager. Внешний вид экрана Новая метка")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.iosCase(5870).androidCase(10407)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.createLabel(LabelData("label1")).createLabel(LabelData("label2"))
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenLabelManagerAction()).then(OpenCreateLabelScreenAction())
  }

}

open class ManageLabelsValidateEditLabelViewTest: RegularYandexMailTestBase {
  public init() {
    super.init("LabelsManager. Внешний вид экрана Изменить метку")
  }

  open override func setupSettings(_ settings: TestSettings) -> Void {
    settings.iosCase(5871).androidCase(10321)
  }

  open override func prepareAccount(_ mailbox: MailboxBuilder) -> Void {
    mailbox.createLabel(LabelData("label1")).createLabel(LabelData("label2"))
  }

  @discardableResult
  open override func testScenario(_ account: UserAccount) -> TestPlan {
    return self.yandexLogin(account).then(OpenFolderListAction()).then(OpenLabelManagerAction()).then(OpenEditLabelScreenAction("label1"))
  }

}

