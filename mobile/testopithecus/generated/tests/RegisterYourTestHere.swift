// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM tests/register-your-test-here.ts >>>

import Foundation

open class AllMailTests {
  private let registry: TestsRegistry<MailboxBuilder> = TestsRegistry<MailboxBuilder>()
  public static let `get`: TestsRegistry<MailboxBuilder> = AllMailTests().registerAllTestsAndGetThem()
  private init() {
  }

  @discardableResult
  private func registerAllTestsAndGetThem() -> TestsRegistry<MailboxBuilder> {
    self.registerStoriesTests()
    self.registerShortSwipeMenuTests()
    self.registerGroupModeTests()
    self.registerShortSwipeTests()
    self.registerLongSwipeTests()
    self.registerManageFoldersTests()
    self.registerManageLabelsTests()
    self.registerTabsTests()
    self.registerTabbarTests()
    self.registerClearFolderTests()
    self.registerQuickReplyTests()
    self.registerSettingTests()
    self.registerTranslatorTests()
    self.registerMessageListViewTests()
    self.registerMailViewTests()
    self.registerFolderListTests()
    self.registerComposeTests()
    self.registerOtherTests()
    self.registerAuthorizationTests()
    self.registerPinTests()
    self.registerSearchTests()
    self.registerFiltersTests()
    return self.registry
  }

  private func registerShortSwipeMenuTests() -> Void {
    self.registry.regular(ShortSwipeMenuMarkAsReadMessageTest()).regular(ShortSwipeMenuMarkAsUnreadMessageTest()).regular(ShortSwipeMenuDeleteMessageTest()).regular(ShortSwipeMenuDeleteThreadTest()).regular(ShortSwipeMenuImportantMessageTest()).regular(ShortSwipeMenuImportantThreadTest()).regular(ShortSwipeMenuUnImportantThreadTest()).regular(ShortSwipeMenuMoveToFolderMessageTest()).regular(ShortSwipeMenuMoveToInboxFromTrashTest()).regular(ShortSwipeMenuMarkAsReadThreadTest()).regular(ShortSwipeMenuMarkAsUnreadThreadTest()).regular(ShortSwipeMenuMarkAsSpamThreadTest()).regular(ShortSwipeMenuMarkAsNotSpamMessageTest()).regular(ShortSwipeMenuUnImportantMessageTest()).regular(ShortSwipeMenuMoveToFolderThreadTest()).regular(ShortSwipeMenuApplyLabelToThreadTest()).regular(ShortSwipeMenuApplyLabelToMessageTest()).regular(ShortSwipeMenuRemoveLabelFromMessageTest()).regular(ShortSwipeMenuRemoveLabelFromThreadTest()).regular(ShortSwipeMenuArchiveMessageFromSpamTest()).regular(ShortSwipeMenuArchiveThreadFromUserFolderTest()).regular(ShortSwipeMenuUndoDeleteThreadTest()).regular(ShortSwipeMenuUndoArchiveMessageTest()).regular(ShortSwipeMenuUndoDeleteMessageTest()).regular(ShortSwipeMenuUndoArchiveThreadTest()).regular(ShortSwipeMenuUndoSpamMessageTest()).regular(ShortSwipeMenuUndoSpamThreadTest()).regular(ShortSwipeMenuDeleteFromTrashTest()).regular(ShortSwipeMenuMarkReadUnreadInCompactModeTest()).regular(ShortSwipeMenuAddLabelInCompactModeTest()).regular(ShortSwipeMenuMarkUnmarkAsSpamInCompactModeTest()).regular(ShortSwipeMenuDeleteMessageFromTrashInCompactModeTest()).regular(ShortSwipeMenuArchiveMessageInCompactModeTest()).regular(SearchAndMarkMessageReadByShortSwipeMenuTest()).regular(SearchAndDeleteMessageByShortSwipeMenuTest()).regular(SearchAndMoveMessageToAnotherFolderByShortSwipeMenuTest()).regular(MoveMessageFromInboxTabToMailingListTabByShortSwipeMenuTest()).regular(MarkMessageImportantInMailingListTabByShortSwipeMenuTest()).regular(MarkMessageUnimportantInSocialNetworksTabByShortSwipeMenuTest()).regular(UnmarkLabelInInboxTabByShortSwipeMenuTest())
  }

  private func registerStoriesTests() -> Void {
    self.registry.regular(StoriesDifferentAccountTest()).regular(StoriesHideTest()).regular(StoriesRotationTest())
  }

  private func registerGroupModeTests() -> Void {
    self.registry.regular(CanOpenMessageAfterGroupActionTest()).regular(GroupModeCancelSelectionTest()).regular(GroupModeUnmarkImportantTest()).regular(GroupModeMarkLabelTest()).regular(GroupModeUnmarkLabelTest()).regular(GroupModeMarkReadMessageTest()).regular(GroupModeMarkUnreadMessageTest()).regular(GroupModeArchiveMessagesTest()).regular(GroupModeMarkImportantTest()).regular(GroupModeMarkSpamTest()).regular(GroupModeArchiveThreadTest()).regular(GroupModeSelectAllTest()).regular(GroupModeMarkReadThreadTest()).regular(GroupModeMarkUnreadThreadTest()).regular(GroupModeDeleteThreadTest()).regular(GroupModeMarkSpamThreadTest()).regular(GroupModeUnmarkSpamTest()).regular(GroupModeMoveThreadsToInboxTest()).regular(GroupModeMoveMessageToUserFolderFromInboxTest()).regular(GroupModeInitialSelectTest()).regular(GroupModeExitByTapOnSelectedMessagesTest()).regular(GroupModeDeleteFromTrashTest()).regular(GroupModeInitialSelectInCompactModeTest()).regular(GroupModeUndoDeleteThreadTest()).regular(GroupModeUndoSpamMessagesAndThreadsTest()).regular(GroupModeUndoArchiveThreadTest()).regular(GroupModeUndoSpamMessageTest()).regular(GroupModeUndoArchiveMessageTest()).regular(GroupModeUndoArchiveMessagesAndThreadsTest()).regular(GroupModeUndoSpamThreadTest()).regular(GroupModeUndoDeleteMessageTest()).regular(GroupModeUndoDeleteMessagesAndThreadsTest()).regular(GroupModeDeleteMessageInCompactModeTest()).regular(GroupModeMarkAsSpamNotSpamMessageInCompactModeTest()).regular(GroupModeArchiveMessageFromSearchInCompactModeTest()).regular(GroupModeMarkImportantUnimportantMessageInCompactModeTest()).regular(GroupModeAddRemoveLabelInCompactModeTest()).regular(GroupModeMardMessagesAsRead2paneTest()).regular(GroupModeDeleteMessage2paneTest()).regular(GroupModeSelectAllMessagesInSearchTest()).regular(GroupModeMoveMessageFromTabInboxToUserFolderTest()).regular(GroupModeMoveMessageToSpamFromSocialTabTest()).regular(GroupModeApplyLabelToMessageInMailingListTabTest()).regular(GroupMarkAsReadDifferentMessagesTest()).regular(GroupMarkAsReadMessagesTest()).regular(GroupDeleteMessagesTest())
  }

  private func registerShortSwipeTests() -> Void {
    self.registry.regular(ShortSwipeToDeleteThreadTest()).regular(ShortSwipeToDeleteMessageTest()).regular(ShortSwipeToArchiveMessageTest()).regular(ShortSwipeToArchiveThreadTest()).regular(ShortSwipeToDeleteFromTrashTest()).regular(ShortSwipeToArchiveFromArchiveThreadTest()).regular(ShortSwipeUndoDeleteThreadTest()).regular(ShortSwipeUndoArchiveMessageTest()).regular(ShortSwipeUndoDeleteMessageTest()).regular(ShortSwipeUndoArchiveThreadTest()).regular(SwipeToReadMessageInCompactModeTest()).regular(ShortSwipeToDeleteInCompactModeTest()).regular(ShortSwipeToArchiveInCompactModeTest()).regular(ShortSwipeDeleteMessageAtSearch2paneTest()).regular(ShortSwipeArchiveMessageAtSearch2paneTest()).regular(ShortSwipeMarkMessageAsReadAtSearch2paneTest()).regular(ShortSwipeDeleteMessage2paneTest()).regular(ShortSwipeArchiveMessage2paneTest()).regular(ShortSwipeMarkMessageAsRead2paneTest()).regular(ShortSwipeUndoDeleteMessage2paneTest()).regular(ShortSwipeUndoArchiveMessage2paneTest()).regular(SwipeToReadMessageTest()).regular(SwipeToUnreadMessageTest()).regular(SwipeToReadThreadTest()).regular(SwipeToUnreadThreadTest()).regular(ShortSwipeDeleteMessageAtSearchTest()).regular(ShortSwipeDeleteThreadLandscapeTest()).regular(ShortSwipeMarkMessageAsReadAtSearchTest()).regular(SwipeToReadMessageFromInboxTest()).regular(SwipeToDeleteMessageFromTrashTest())
  }

  private func registerLongSwipeTests() -> Void {
    self.registry.regular(LongSwipeToDeleteMessageTest()).regular(LongSwipeToDeleteThreadTest()).regular(LongSwipeToArchiveFromArchiveThreadTest()).regular(LongSwipeToArchiveThreadTest()).regular(LongSwipeToArchiveMessageTest()).regular(LongSwipeToDeleteFromTrashTest()).regular(LongSwipeUndoDeleteMessageTest()).regular(LongSwipeUndoArchiveThreadTest()).regular(LongSwipeUndoDeleteThreadTest()).regular(LongSwipeUndoArchiveMessageTest()).regular(LongSwipeToArchiveInCompactModeTest()).regular(LongSwipeLongSwipeToDeleteFromSearchInCompactModeTest()).regular(LongSwipeUndoDeleteMessageAtSearchTest()).regular(LongSwipeDeleteMessageAtSearchTest()).regular(LongSwipeArchiveMessageAtSearchTest()).regular(LongSwipeDeleteMessageAtTabMailingListsTest()).regular(LongSwipeDeleteThreadLandscapeTest()).regular(LongSwipeDeleteThread2paneTest()).regular(LongSwipeDeleteMessageAtSearch2paneTest()).regular(LongSwipeToDeleteFromImportantTest()).regular(LongSwipeToDeleteFromTrashUndoTest()).regular(LongSwipeToDeleteDraftInCompactModeTest()).regular(LongSwipeToArchiveMsgFromLabelInCompactModeTest()).regular(LongSwipeToDeleteThreadInCompactModeTest()).regular(LongSwipeToArchiveMessageInLandscapeTest()).regular(LongSwipeToUndoDeleteMessageLandscapeTest()).regular(LongSwipeToUndoArchiveMessageLandscapeTest()).regular(LongSwipeToArchiveTemplateTest()).regular(LongSwipeToArchiveThreadWithUndoTest())
  }

  private func registerManageFoldersTests() -> Void {
    self.registry.regular(ManageFoldersAddNewFolderInRootTest()).regular(ManageFoldersDeleteFolderWithSubfoldersByLongSwipeTest()).regular(ManageFoldersEditFolderTest()).regular(ManageFoldersValidateViewTest()).regular(ManageFoldersValidateEditFolderViewTest()).regular(ManageFoldersValidateAddFolderViewTest()).regular(ManageFoldersValidateFolderLocationViewTest()).regular(ManageFoldersDeleteFolderTest())
  }

  private func registerManageLabelsTests() -> Void {
    self.registry.regular(ManageLabelsAddNewLabelTest()).regular(ManageLabelsEditLabelTest()).regular(ManageLabelsDeleteOpenedLabelByLongSwipeTest()).regular(ManageLabelsValidateViewTest()).regular(ManageLabelsValidateAddLabelViewTest()).regular(ManageLabelsValidateEditLabelViewTest())
  }

  private func registerSearchTests() -> Void {
    self.registry.regular(SearchAndMoveToSpamMessage()).regular(SearchAndDeleteMessageFromUserFolder()).regular(SearchAndDeleteMessageShortSwipeFromTemplates()).regular(SearchAndGroupDeleteMessageTestFromTemplates()).regular(SearchAndGroupDeleteMessageTestFromDraft()).regular(SearchAndMarkImportantMessageShortSwipe()).regular(SearchAndMarkMessageRead()).regular(SearchAndMarkMessageReadFromUserFolder()).regular(SearchAndMarkMessageUnreadFromUserFolder()).regular(SearchAndAddLabelMessageFromUserFolder()).regular(SearchAndAddLabelMessageFromArchive()).regular(SearchAndAddLabelMessage()).regular(SearchAndMarkMessageUnreadBySwipeFromSent()).regular(SearchAndMarkMessageUnreadFromSpam()).regular(SearchAndDeleteMessageFromSpam()).regular(MarkAsReadInSearch()).regular(SearchMessageListViewInCompactModeTest()).regular(SearchAndOpenMessage()).regular(SearchAndOpenMessageIn2Pane()).regular(RotateDeviceInZeroSuggestTest()).regular(SaveQueryToZeroSuggestTest()).regular(SearchMessagesViaZeroSuggestIn2PaneTest()).regular(SearchMessagesViaZeroSuggestTest()).regular(SearchUnreadMessagesViaZeroSuggestTest())
  }

  private func registerComposeTests() -> Void {
    self.registry.regular(ComposeForwardViaShortSwipeMenuTest()).regular(ComposeReplyViaShortSwipeMenuTest()).regular(ComposeSelectSenderFromSuggestTest()).regular(ComposeEmptyRecipientsSuggestTest()).regular(ComposeEnterAndDeleteTextLandscapeTest()).regular(ComposeCloseSenderSuggestTest()).regular(ComposeMinimizeRecipientsSuggestAfterSomeActionsTest()).regular(ComposeSuggestOfManyContactTest()).regular(ComposeCreateYabbleWithLongEmailTest()).regular(ComposeReplyFromMailViewTest()).regular(ComposeForwardFromMailViewTest()).regular(ComposeSuggestOfSomeContactTest()).regular(ComposeLongEmailInSuggestTest()).regular(ComposeCreateYabbleWithNumericEmailTest()).regular(ComposeDeleteYabbleByTapOnCrossTest()).regular(ComposeSendMessageWithLongSubjectTest()).regular(ComposeSendMessageWithNotGeneratedValidYabbleTest()).regular(ComposeSendMessageToRecipientWithLatinAndCyrillicLettersInEmailTest()).regular(ComposeSendEmptyMessageTest()).regular(ComposeSendMessageToRecipientInCCFieldTest()).regular(ComposeSendMessageWithAllFilledFieldsTest()).regular(ComposeSuggestMissingAddedRecipientsTest()).regular(ComposeSuggestDomainTest()).regular(ComposeSuggestRotateTest()).regular(ComposeSuggestBehaviorWhileEnterEmailTest())
  }

  private func registerOtherTests() -> Void {
    self.registry.regular(FormatTextTest()).regular(MoveToSpamFirstMessageTest()).regular(MoveToFolderTest()).regular(MarkAllThreadMessagesReadByMarkingMainMessageTest()).regular(MarkUnreadAfterReadTest()).regular(ReadMessageAfterOpeningTest()).regular(ArchiveFirstMessageTest()).regular(LabelAllThreadMessagesImportantByLabellingMainMessageTest()).regular(MarkAsImportantTest())
  }

  private func registerAuthorizationTests() -> Void {
    self.registry.regular(ChoseAccountFromAccountsListTest()).regular(SwitchAccountTest())
  }

  private func registerPinTests() -> Void {
    self.registry.regular(ChangePinTest()).regular(ResetPinTest()).regular(TurnOffPinTest()).regular(TurnOnPinTest())
  }

  private func registerFolderListTests() -> Void {
    self.registry.regular(ChangeFoldersInboxCustomTest()).regular(ValidateFolderListTest()).regular(ValidateLabelListTest()).regular(NewFolderFromBackTestAndroid(), false).regular(NewFolderFromBackTestIos(), false).regular(NewLabelFromBackTestAndroid(), false).regular(NewLabelFromBackTestIos(), false).regular(ChangeFoldersArchiveSpamTrashTest()).regular(ChangeFoldersSentDraftTest()).regular(LongFolderNameViewTest()).regular(LongLabelNameViewTest())
  }

  private func registerMailViewTests() -> Void {
    self.registry.regular(AddLabelsFromMessageView()).regular(ArchiveMessageFromThreadFromMessageView()).regular(ArchiveSingleMessageFromMessageView()).regular(MarkAsNotSpamFromMessageViewAndroid()).regular(DeleteLabelsFromMessageView()).regular(DeleteMessageByTapOnIconTest()).regular(DeleteMessageByTapOnTopBarTest()).regular(DeleteMessageFromMessageViewThreadModeOff()).regular(DeleteMessageInSearchByTapOnTopBarTest()).regular(DeleteSingleMessageFromMessageViewTest()).regular(DeleteSingleMessageFromThreadFromMessageViewTest()).regular(LablesViewFromMessageView()).regular(MarkAsNotSpamFromMessageView()).regular(MarkAsReadByExpandThreadTest()).regular(MarkAsReadByOpeningMessageViewTest()).regular(MarkAsReadFromMessageViewTest()).regular(MarkAsSpamFromMessageView()).regular(MarkAsUnreadFromMessageViewTest()).regular(MarkImportantFromMessageView()).regular(MarkUnimportantFromMessageView()).regular(MoveMessageFromThreadToTrashFromMailViewTest()).regular(MoveMessageOfThreadToArchiveFromMailViewTest()).regular(MoveMessageToSpamFromMailViewFromSearchTest()).regular(MoveMessageToSpamFromMailViewTest()).regular(MoveMessageToTabFromMailViewTest()).regular(MoveMessageToTrashFromMailViewFromSearchTest()).regular(MoveMessageToTrashFromMailViewTest()).regular(MoveMessageToUsersFolderFromMessageView()).regular(MoveMessageToUsersFolderFromThreadFromMessageView()).regular(MarkAsSpamMessageFromThreadFromMessageView()).regular(UndoMessageDeleteFromMessageView()).regular(MarkImportantMessageFromThreadFromMessageView()).regular(AddAndDeleteLabelsFromMessageView()).regular(DeleteMessageByTapOnIcon2PaneTest()).regular(ViewOperationsInInboxFolderWithLabeledMsg()).regular(ViewOperationsInInboxFolder()).regular(ViewOperationsInSentFolder()).regular(ViewOperationsInArchiveFolderWithLabeledMsg()).regular(ViewOperationsInUserFolder()).regular(MarkLabelInMessageView()).regular(UndoMessageDeleteFromMessage2paneView()).regular(MessageViewCreateAndMarkLabelTest()).regular(MailViewArchiveMessageByTapOnTopBarTest()).regular(MailViewArchiveThreadByTapOnTopBarTest()).regular(MailViewDeleteThreadByTapOnTopBarTest()).regular(MailViewMarkAsSpamOneMessageInThreadLandscapeTest()).regular(MailView2paneUndoMessageDeleteInSearchTest()).regular(MailView2paneUndoDeleteOneMessageInThreadTest()).regular(MailView2paneUndoArchiveOneMessageInThreadTest()).regular(MailView2paneUndoSpamMessageTest()).regular(MailView2paneUndoSpamMessageInSearchTest()).regular(MailViewMarkAsSpamMessageFromThread2paneTest())
  }

  private func registerMessageListViewTests() -> Void {
    self.registry.regular(GoToTabByTabsNotification()).regular(MailListViewInCompactMode()).regular(MarkAsImportantMessageInTabSubscriptionTest()).regular(TabNotificationInEmptyMessageList()).regular(TabNotificationInTheFirstInMailList()).regular(TabNotificationInTheMiddleMailList()).regular(ThreadModeTurnOffAndThenOnTest()).regular(TabNotificationInCompactMode()).regular(TabsNotificationOnlyInInbox()).regular(TabsNotificationInLandscape()).regular(DisplayTabsNotificationAfterMoveMessage()).regular(GroupModeWithTabNotification()).regular(MailListViewInThreadFolder()).regular(MailListViewInThreadLessFolder()).regular(MailListViewInThreadFolderLandscape()).regular(MailListViewInThreadLessFolderLandscape()).regular(MailListViewInUnreadLabel()).regular(MailListViewInUnreadLabelLandscape()).regular(MailListViewInImportantLabel()).regular(MailListViewInUserLabel()).regular(MailListViewInThreadFolderTab()).regular(MailListViewInThreadLessFolderTab()).regular(MailListViewInImportantLabelTab()).regular(MailListViewNavigateByArrowsTab()).regular(ChangeFilterTest()).regular(LabelViewLoadingTest()).regular(InboxTopBarDisplayTest(AccountType2.Yandex)).regular(InboxTopBarDisplayTest(AccountType2.YandexTeam))
  }

  private func registerTranslatorTests() -> Void {
    self.registry.regular(AbsentOfTranslatorBarIfSourceLanguageIsEqualToTargetLanguageTests()).regular(AddLanguageToIgnoredLanguagesListAndDeleteTests()).regular(AddLanguageToRecentLanguagesListTests()).regular(ChangeDefaultTranslateLanguageTest()).regular(HideTranslatorBarForAutoLanguageTests()).regular(HideTranslatorBarTest()).regular(ResetTranslateAfterReopenMessageTests()).regular(RevertToOriginalMessageLanguageTests()).regular(TranslateMessage2paneTests())
  }

  private func registerSettingTests() -> Void {
    self.registry.regular(ChangingActionOnSwipeTest()).regular(ClearCacheTest()).regular(OpenAboutSettingsTest()).regular(OpenAccountSettingsTest()).regular(TurningOnCompactModeTest()).regular(TurningOffCompactModeTest()).regular(ValidateAccountSettingsTest()).regular(ValidateGeneralSettingsTest()).regular(ValidateRootSettingsTest()).regular(DefaultActionOnSwipeTest()).regular(ViewAccountSettingsInLandscapeTest()).regular(ViewSettingsTestTab()).regular(ViewSettingsInLandscapeTest()).regular(UndoClearCacheTest())
  }

  private func registerClearFolderTests() -> Void {
    self.registry.regular(ClearSpamTest()).regular(CancelClearSpamTest()).regular(ClearTrashTest()).regular(CancelClearTrashTest())
  }

  private func registerQuickReplyTests() -> Void {
    self.registry.regular(QuickReplyToMessageTests()).regular(QuickReplyOpenFilledComposeTests()).regular(QuickReplyRotateTests()).regular(QuickReplyIsTextFieldExpandedTests()).regular(SmartReplyMissingIfSettingsDisabledTest()).regular(SmartReplyShowIfSettingsEnabledTest())
  }

  private func registerTabbarTests() -> Void {
    self.registry.regular(TabBarOpenCalendarTest()).regular(TabBarOpenTelemostTest()).regular(TabBarOpenDocumentsTest()).regular(TabBarOpenMoreTabTest()).regular(TabBarItemsYandexLandscapeTest()).regular(TabBarCalendarDateLabelTest()).regular(TabBarShownInMailListTest()).regular(TabBarNotShownInMailViewTest()).regular(TabBarNotShownInSearchTest()).regular(TabBarNotShownInComposeTest()).regular(TabBarNotShownInFolderListTest()).regular(TabBarNotShownInSettingsTest()).regular(TabBarHideInGroupModeTest()).regular(ShtorkaCloseByTapOverTest()).regular(ShtorkaCloseBySwipeTest()).regular(ShtorkaOpenNotesTest()).regular(ShtorkaOpenDiskTest())
  }

  private func registerTabsTests() -> Void {
    self.registry.regular(MoveThreadFromMailingListToSocialNetworksTest()).regular(MoveThreadFromSocialNetworksTabToUserFolderTest()).regular(MoveThreadFromUserFolderToInboxTest()).regular(UndoMoveMessageToArchiveFromInboxTabTest()).regular(UndoMoveMessageToSpamTest()).regular(DeleteThreadInTabTest()).regular(DeleteMessageByTapOnTopBarInTabTest()).regular(TurnOffTabsTest()).regular(TurnOnTabsTest()).regular(UndoDeleteMessageFromTabTest())
  }

  private func registerFiltersTests() -> Void {
    self.registry.regular(ValidateFiltersListPt1Test()).regular(ValidateFiltersListPt2Test())
  }

}

