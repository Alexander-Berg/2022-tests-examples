// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/components/translator/target-language-list-component.ts >>>

import Foundation

open class TargetLanguageListComponent: MBTComponent {
  public static let type: String = "TranslatorTargetLanguageListComponent"
  @discardableResult
  open func getComponentType() -> MBTComponentType {
    return TargetLanguageListComponent.type
  }

  @discardableResult
  open func assertMatches(_ model: App, _ application: App) throws -> Void {
    let modelTranslatorLanguageList: TranslatorLanguageList! = TranslatorLanguageListFeature.`get`.castIfSupported(model)
    let appTranslatorLanguageList: TranslatorLanguageList! = TranslatorLanguageListFeature.`get`.castIfSupported(application)
    if modelTranslatorLanguageList != nil && appTranslatorLanguageList != nil {
      let modelCurrentTargetLanguage: String! = (try modelTranslatorLanguageList.getCurrentTargetLanguage())
      let appCurrentTargetLanguage: String! = (try appTranslatorLanguageList.getCurrentTargetLanguage())
      (try assertTrue(modelCurrentTargetLanguage == appCurrentTargetLanguage, "Current target language is incorrect"))
      let modelDefaultTargetLanguage = (try modelTranslatorLanguageList.getDefaultTargetLanguage())
      let appDefaultTargetLanguage = (try appTranslatorLanguageList.getDefaultTargetLanguage())
      (try assertStringEquals(modelDefaultTargetLanguage, appDefaultTargetLanguage, "Default target language is incorrect"))
      let modelRecentTargetLanguages = (try modelTranslatorLanguageList.getRecentTargetLanguages())
      let appRecentTargetLanguages = (try appTranslatorLanguageList.getRecentTargetLanguages())
      (try assertInt32Equals(modelRecentTargetLanguages.length, appRecentTargetLanguages.length, "Incorrect number of recent languages"))
      for modelLanguage in modelRecentTargetLanguages {
        (try assertTrue(appRecentTargetLanguages.includes(modelLanguage), "Application list of recent target languages not include \(modelLanguage)"))
      }
    }
  }

  @discardableResult
  open func tostring() -> String {
    return self.getComponentType()
  }

}

