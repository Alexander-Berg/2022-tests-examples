// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/components/accounts-list-component.ts >>>

import Foundation

open class AccountsListComponent: MBTComponent {
  public static let type: String = "AccountSwitcher"
  @discardableResult
  open func getComponentType() -> MBTComponentType {
    return AccountsListComponent.type
  }

  @discardableResult
  open func assertMatches(_ model: App, _ application: App) throws -> Void {
  }

  @discardableResult
  open func tostring() -> String {
    return self.getComponentType()
  }

}

open class AllAccountsManagerActions: MBTComponentActions {
  private var accounts: YSArray<UserAccount>
  public init(_ accounts: YSArray<UserAccount>) {
    self.accounts = accounts
  }

  @discardableResult
  open func getActions(_ model: App) -> YSArray<MBTAction> {
    let actions: YSArray<MBTAction> = YSArray()
    AccountsListFeature.`get`.performIfSupported(model, {
      (mailboxModel) in
      for i in stride(from: 0, to: self.accounts.length, by: 1) {
        actions.push(ChoseAccountFromAccountsListAction(self.accounts[i]))
      }
    })
    return actions
  }

}

