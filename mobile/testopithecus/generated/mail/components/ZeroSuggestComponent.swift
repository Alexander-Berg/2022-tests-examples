// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/components/zero-suggest-component.ts >>>

import Foundation

open class ZeroSuggestComponent: MBTComponent {
  public static let type: String = "ZeroSuggestComponent"
  @discardableResult
  open func assertMatches(_ model: App, _ application: App) throws -> Void {
    let zeroSuggestModel: ZeroSuggest! = ZeroSuggestFeature.`get`.castIfSupported(model)
    let zeroSuggestApplication: ZeroSuggest! = ZeroSuggestFeature.`get`.castIfSupported(application)
    if zeroSuggestModel != nil && zeroSuggestApplication != nil {
      let actualZeroSuggest = (try zeroSuggestApplication.getZeroSuggest())
      let expectedZeroSuggest = (try zeroSuggestModel.getZeroSuggest())
      (try assertInt32Equals(expectedZeroSuggest.length, actualZeroSuggest.length, "The number of suggestions in the list is incorrect"))
      for i in stride(from: 0, to: actualZeroSuggest.length, by: 1) {
        (try assertStringEquals(expectedZeroSuggest[i], actualZeroSuggest[i], "Zero suggest is incorrect"))
      }
    }
    (try TabBarComponent().assertMatches(model, application))
  }

  @discardableResult
  open func tostring() -> String {
    return "ZeroSuggestComponent"
  }

  @discardableResult
  open func getComponentType() -> String {
    return ZeroSuggestComponent.type
  }

}

open class AllZeroSuggestActions: MBTComponentActions {
  @discardableResult
  open func getActions(_ model: App) -> YSArray<MBTAction> {
    let actions: YSArray<MBTAction> = YSArray()
    return actions
  }

}

