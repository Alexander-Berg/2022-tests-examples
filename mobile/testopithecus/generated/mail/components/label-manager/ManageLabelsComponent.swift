// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/components/label-manager/manage-labels-component.ts >>>

import Foundation

open class ManageLabelsComponent: MBTComponent {
  public static let type: String = "ManageLabelsComponent"
  @discardableResult
  open func getComponentType() -> String {
    return ManageLabelsComponent.type
  }

  @discardableResult
  open func assertMatches(_ model: App, _ application: App) throws -> Void {
    let manageableLabelModel: ManageableLabel! = ManageableLabelFeature.`get`.castIfSupported(model)
    let manageableLabelApplication: ManageableLabel! = ManageableLabelFeature.`get`.castIfSupported(application)
    if manageableLabelModel != nil && manageableLabelApplication != nil {
      let labelListModel = (try manageableLabelModel.getLabelList())
      let labelListApplication = (try manageableLabelApplication.getLabelList())
      (try assertInt32Equals(labelListModel.length, labelListApplication.length, "Different number of labels"))
      for label in labelListModel {
        (try assertBooleanEquals(true, labelListApplication.includes(label), "Missing label \(label)"))
      }
    }
  }

  @discardableResult
  open func tostring() -> String {
    return self.getComponentType()
  }

}

open class ManageLabelsActions: MBTComponentActions {
  @discardableResult
  open func getActions(_ _model: App) -> YSArray<MBTAction> {
    let actions: YSArray<MBTAction> = YSArray()
    return actions
  }

}

