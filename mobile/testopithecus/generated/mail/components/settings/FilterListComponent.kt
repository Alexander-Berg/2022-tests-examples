// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/components/settings/filter-list-component.ts >>>

package com.yandex.xplat.testopithecus

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*
import com.yandex.xplat.eventus.*
import com.yandex.xplat.mapi.*
import com.yandex.xplat.testopithecus.common.*

public open class FilterListComponent: MBTComponent {
    open override fun getComponentType(): MBTComponentType {
        return FilterListComponent.type
    }

    open override fun assertMatches(model: App, application: App): Unit {
        val filtersListModel = FiltersListFeature.`get`.castIfSupported(model)
        val filtersListApp = FiltersListFeature.`get`.castIfSupported(application)
        if (filtersListModel != null && filtersListApp != null) {
            assertBooleanEquals(filtersListModel.isPromoShown(), filtersListApp.isPromoShown(), "Prmo shown status is incorrect")
            val filtersModel = filtersListModel.getFilterList()
            val filtersApp = filtersListApp.getFilterList()
            assertInt32Equals(filtersModel.size, filtersApp.size, "Incorrect number of filters")
            for (i in (0 until filtersModel.size step 1)) {
                val filterModel = filtersModel[i]
                val filterApp = filtersApp[i]
                assertTrue(FilterView.matches(filterModel, filterApp), "Different filter. Model: ${filterModel.tostring()}, app: ${filterApp.tostring()}")
            }
        }
    }

    open override fun tostring(): String {
        return this.getComponentType()
    }

    companion object {
        @JvmStatic val type: MBTComponentType = "FilterListComponent"
    }
}

