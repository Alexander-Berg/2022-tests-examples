// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/components/apply-label-component.ts >>>

package com.yandex.xplat.testopithecus

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*
import com.yandex.xplat.eventus.*
import com.yandex.xplat.mapi.*
import com.yandex.xplat.testopithecus.common.*

public open class ApplyLabelComponent: MBTComponent {
    open override fun assertMatches(model: App, application: App): Unit {
        val modelApplyLabel = ApplyLabelFeature.`get`.castIfSupported(model)
        val appApplyLabel = ApplyLabelFeature.`get`.castIfSupported(application)
        if (modelApplyLabel == null || appApplyLabel == null) {
            return
        }
        val modelLabelList = modelApplyLabel.getLabelList()
        val appLabelList = appApplyLabel.getLabelList()
        for (label in modelLabelList) {
            assertTrue(appLabelList.contains(label), "There is no label ${label}")
        }
        val modelSelectedLabels = modelApplyLabel.getSelectedLabels()
        val appSelectedLabels = appApplyLabel.getSelectedLabels()
        for (label in modelSelectedLabels) {
            assertTrue(appSelectedLabels.contains(label), "Label ${label} is not selected")
        }
    }

    open override fun tostring(): String {
        return this.getComponentType()
    }

    open override fun getComponentType(): MBTComponentType {
        return ApplyLabelComponent.type
    }

    companion object {
        @JvmStatic val type: MBTComponentType = "AddLabelComponent"
    }
}

