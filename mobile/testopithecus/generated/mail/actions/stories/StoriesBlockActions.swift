// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/actions/stories/stories-block-actions.ts >>>

import Foundation

open class AbstractStoriesBlockAction: BaseSimpleAction<StoriesBlock, MBTComponent> {
  public override init(_ type: MBTActionType) {
    super.init(type)
  }

  @discardableResult
  open override func requiredFeature() -> Feature<StoriesBlock> {
    return StoriesBlockFeature.`get`
  }

  @discardableResult
  open override func events() -> YSArray<EventusEvent> {
    return YSArray()
  }

}

open class HideStoriesBlockAction: AbstractStoriesBlockAction {
  public static let type: MBTActionType = "HideStoriesBlockAction"
  public init() {
    super.init(HideStoriesBlockAction.type)
  }

  @discardableResult
  open override func performImpl(_ modelOrApplication: StoriesBlock, _ currentComponent: MBTComponent) throws -> MBTComponent {
    (try modelOrApplication.hideStories())
    return currentComponent
  }

  @discardableResult
  open override func canBePerformed(_ model: App) throws -> Bool {
    let storyModel: StoriesBlock! = StoriesBlockFeature.`get`.castIfSupported(model)
    let isHidden = (try storyModel!.isHidden())
    return storyModel == nil || !isHidden
  }

}

open class OpenStoryFromBlockAction: AbstractStoriesBlockAction {
  public static let type: MBTActionType = "OpenStoryFromBlockAction"
  private var position: Int32
  public init(_ position: Int32) {
    self.position = position
    super.init(OpenStoryFromBlockAction.type)
  }

  @discardableResult
  open override func performImpl(_ modelOrApplication: StoriesBlock, _ currentComponent: MBTComponent) throws -> MBTComponent {
    (try modelOrApplication.openStory(self.position))
    return currentComponent
  }

}

