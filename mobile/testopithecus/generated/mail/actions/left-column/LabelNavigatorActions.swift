// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/actions/left-column/label-navigator-actions.ts >>>

import Foundation

open class GoToLabelAction: MBTAction {
  public static let type: MBTActionType = "GoToLabel"
  private var label: LabelName
  public init(_ label: LabelName) {
    self.label = label
  }

  @discardableResult
  open func supported(_ modelFeatures: YSArray<FeatureID>, _ applicationFeatures: YSArray<FeatureID>) -> Bool {
    return LabelNavigatorFeature.`get`.includedAll(modelFeatures, applicationFeatures)
  }

  @discardableResult
  open func canBePerformed(_ model: App) throws -> Bool {
    let labelNavigatorModel = LabelNavigatorFeature.`get`.forceCast(model)
    let labels = (try labelNavigatorModel.getLabelList())
    return labels.filter({
      (label) in
      label == self.label
    }).length > 0
  }

  @discardableResult
  open func perform(_ model: App, _ application: App, _ _history: MBTHistory) throws -> MBTComponent {
    (try LabelNavigatorFeature.`get`.forceCast(model).goToLabel(self.label))
    (try LabelNavigatorFeature.`get`.forceCast(application).goToLabel(self.label))
    return MaillistComponent()
  }

  @discardableResult
  open func events() -> YSArray<EventusEvent> {
    return YSArray()
  }

  @discardableResult
  open func getActionType() -> String {
    return GoToLabelAction.type
  }

  @discardableResult
  open func tostring() -> String {
    return "GoToLabel(\(self.label))"
  }

}

