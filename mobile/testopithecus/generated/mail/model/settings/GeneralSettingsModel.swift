// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/model/settings/general-settings-model.ts >>>

import Foundation

open class GeneralSettingsModel: GeneralSettings, IosGeneralSettings, AndroidGeneralSettings {
  private var actionOnSwipe: ActionOnSwipe = ActionOnSwipe.delete
  private var cancelSendingOption: CancelSendingOption = CancelSendingOption.threeSeconds
  private var browserToOpenLinks: Browser = Browser.safari
  private var voiceControlLanguage: Language = Language.english
  private var adsEnabled: Bool = true
  private var systemThemeSyncEnabled: Bool = true
  private var darkThemeEnabled: Bool = false
  private var compactModeEnabled: Bool = false
  private var smartRepliesEnabled: Bool = true
  private var voiceControlEnabled: Bool = true
  private var iconBadgeEnabledForActiveAccount: Bool = false
  private var doNotDisturbMode: Bool = false
  private let pin: PinModel
  public init(_ pin: PinModel) {
    self.pin = pin
  }

  @discardableResult
  open func openGeneralSettings() throws -> Void {
  }

  @discardableResult
  open func closeGeneralSettings() throws -> Void {
  }

  @discardableResult
  open func clearCache() throws -> Void {
  }

  @discardableResult
  open func isDoNotDisturbModeEnabled() throws -> Bool {
    return self.doNotDisturbMode
  }

  @discardableResult
  open func switchDoNotDisturbMode() throws -> Void {
    self.doNotDisturbMode = !self.doNotDisturbMode
  }

  @discardableResult
  open func tapToClearCacheAndCancel() throws -> Void {
  }

  @discardableResult
  open func setActionOnSwipe(_ action: ActionOnSwipe) throws -> Void {
    self.actionOnSwipe = action
  }

  @discardableResult
  open func getActionOnSwipe() throws -> ActionOnSwipe {
    return self.actionOnSwipe
  }

  @discardableResult
  open func getCancelSendingEmail() throws -> CancelSendingOption {
    return self.cancelSendingOption
  }

  @discardableResult
  open func getSelectedBrowser() throws -> Browser {
    return self.browserToOpenLinks
  }

  @discardableResult
  open func getVoiceControlLanguage() throws -> Language {
    return self.voiceControlLanguage
  }

  @discardableResult
  open func isIconBadgeForActiveAccountEnabled() throws -> Bool {
    return self.iconBadgeEnabledForActiveAccount
  }

  @discardableResult
  open func isLoginUsingPasswordEnabled() throws -> Bool {
    return (try self.pin.isLoginUsingPasswordEnabled())
  }

  @discardableResult
  open func switchIconBadgeForActiveAccount() throws -> Void {
    self.iconBadgeEnabledForActiveAccount = !self.iconBadgeEnabledForActiveAccount
  }

  @discardableResult
  open func isAdsEnabled() throws -> Bool {
    return self.adsEnabled
  }

  @discardableResult
  open func isCompactModeEnabled() throws -> Bool {
    return self.compactModeEnabled
  }

  @discardableResult
  open func isDarkThemeEnabled() throws -> Bool {
    return self.darkThemeEnabled
  }

  @discardableResult
  open func isSmartRepliesEnabled() throws -> Bool {
    return self.smartRepliesEnabled
  }

  @discardableResult
  open func isSystemThemeSyncEnabled() throws -> Bool {
    return self.systemThemeSyncEnabled
  }

  @discardableResult
  open func isVoiceControlEnabled() throws -> Bool {
    return self.voiceControlEnabled
  }

  @discardableResult
  open func openLinksIn(_ browser: Browser) throws -> Void {
    self.browserToOpenLinks = browser
  }

  @discardableResult
  open func setCancelSendingEmail(_ option: CancelSendingOption) throws -> Void {
    self.cancelSendingOption = option
  }

  @discardableResult
  open func setVoiceControlLanguage(_ language: Language) throws -> Void {
    self.voiceControlLanguage = language
  }

  @discardableResult
  open func switchAds() throws -> Void {
    self.adsEnabled = !self.adsEnabled
  }

  @discardableResult
  open func switchCompactMode() throws -> Void {
    self.compactModeEnabled = !self.compactModeEnabled
  }

  @discardableResult
  open func switchDarkTheme() throws -> Void {
    self.darkThemeEnabled = !self.darkThemeEnabled
  }

  @discardableResult
  open func switchSmartReplies() throws -> Void {
    self.smartRepliesEnabled = !self.smartRepliesEnabled
  }

  @discardableResult
  open func switchSystemThemeSync() throws -> Void {
    self.systemThemeSyncEnabled = !self.systemThemeSyncEnabled
  }

  @discardableResult
  open func switchVoiceControl() throws -> Void {
    self.voiceControlEnabled = !self.voiceControlEnabled
  }

}

