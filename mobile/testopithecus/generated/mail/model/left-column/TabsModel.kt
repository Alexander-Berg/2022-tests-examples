// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/model/left-column/tabs-model.ts >>>

package com.yandex.xplat.testopithecus

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*
import com.yandex.xplat.eventus.*
import com.yandex.xplat.mapi.*
import com.yandex.xplat.testopithecus.common.*

public open class TabsModel(var model: MessageListDisplayModel, private var accHandler: MailAppModelHandler, private var undoModel: UndoModel): Tabs {
    open override fun isEnableTabs(): Boolean {
        return this.accHandler.getCurrentAccount().accountSettings.sortingEmailsByCategoryEnabled
    }

    open override fun SwitchOffTabs(): Unit {
        this.accHandler.getCurrentAccount().accountSettings.sortingEmailsByCategoryEnabled = false
    }

    open override fun SwitchOnTabs(): Unit {
        this.accHandler.getCurrentAccount().accountSettings.sortingEmailsByCategoryEnabled = true
    }

    open override fun isDisplayNotificationTabs(tabsName: FolderName): Boolean {
        return (this.model.getCurrentContainer().name == DefaultFolderName.inbox && this.accHandler.getCurrentAccount().messagesDB.getTabsToMessage(tabsName).size != 0)
    }

    open override fun isUnreadNotificationTabs(tabsName: FolderName): Boolean {
        val messageListInTab = this.accHandler.getCurrentAccount().messagesDB.getMessageList(MessageListDatabaseFilter().withFolder(tabsName))
        for (msg in messageListInTab) {
            if (!msg.read) {
                return true
            }
        }
        return false
    }

    private fun isFirstTabNotificationInMessageList(firstMessage: MessageView, firstMessageInOtherTabs: MessageView): Boolean {
        return firstMessage.timestamp > firstMessageInOtherTabs.timestamp
    }

    open override fun getPositionTabsNotification(tabsName: FolderName): Int {
        val messageList = this.model.getMessageList(10)
        val msgListInMailingLists = this.accHandler.getCurrentAccount().messagesDB.getMessageList(MessageListDatabaseFilter().withFolder(DefaultFolderName.mailingLists))
        val msgListInSocialNetworks = this.accHandler.getCurrentAccount().messagesDB.getMessageList(MessageListDatabaseFilter().withFolder(DefaultFolderName.socialNetworks))
        var position: Int = 0
        var firstMessage: MessageView
        var firstMessageinOtherTabs: MessageView?
        if (tabsName == DefaultFolderName.mailingLists) {
            firstMessage = msgListInMailingLists[0]
            firstMessageinOtherTabs = if (msgListInSocialNetworks.size != 0) msgListInSocialNetworks[0] else null
        } else {
            firstMessage = msgListInSocialNetworks[0]
            firstMessageinOtherTabs = if (msgListInMailingLists.size != 0) msgListInMailingLists[0] else null
        }
        for (msg in messageList) {
            if (msg.timestamp < firstMessage.timestamp) {
                break
            }
            position = position + 1
        }
        if (firstMessageinOtherTabs != null) {
            position = if (this.isFirstTabNotificationInMessageList(firstMessage, firstMessageinOtherTabs)) position else position + 1
        }
        return position
    }

    open override fun goToTabByNotification(tabsName: FolderName): Unit {
        this.model.setCurrentContainer(MessageContainer(formatFolderName(tabsName), MessageContainerType.folder))
        this.undoModel.resetUndoShowing()
    }

}

