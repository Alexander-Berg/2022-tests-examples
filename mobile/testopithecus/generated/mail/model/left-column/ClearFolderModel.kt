// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/model/left-column/clear-folder-model.ts >>>

package com.yandex.xplat.testopithecus

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*
import com.yandex.xplat.eventus.*
import com.yandex.xplat.mapi.*
import com.yandex.xplat.testopithecus.common.*

public open class ClearFolderModel(var accountDataHandler: MailAppModelHandler): ClearFolderInFolderList {
    open override fun doesClearSpamButtonExist(): Boolean {
        return !this.accountDataHandler.getCurrentAccount().messagesDB.isContainerEmpty(MessageContainer(DefaultFolderName.spam, MessageContainerType.folder))
    }

    open override fun doesClearTrashButtonExist(): Boolean {
        return !this.accountDataHandler.getCurrentAccount().messagesDB.isContainerEmpty(MessageContainer(DefaultFolderName.trash, MessageContainerType.folder))
    }

    open override fun clearSpam(confirmDeletionIfNeeded: Boolean): Unit {
        if (confirmDeletionIfNeeded) {
            this.clearFolder(DefaultFolderName.spam)
        }
    }

    open override fun clearTrash(confirmDeletionIfNeeded: Boolean): Unit {
        if (confirmDeletionIfNeeded) {
            this.clearFolder(DefaultFolderName.trash)
        }
    }

    private fun clearFolder(folder: FolderName): Unit {
        val messagesToDelete: YSArray<MessageId> = this.getMessagesInFolder(folder)
        for (mid in messagesToDelete) {
            this.accountDataHandler.getCurrentAccount().messagesDB.removeMessagePermanently(mid)
        }
    }

    private fun getMessagesInFolder(folder: FolderName): YSArray<MessageId> {
        return this.accountDataHandler.getCurrentAccount().messagesDB.getMessageIdList(MessageListDatabaseFilter().withContainer(MessageContainer(folder, MessageContainerType.folder)).withIsInThreadMode(false))
    }

}

