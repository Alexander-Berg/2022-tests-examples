// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/model/left-column/clear-folder-model.ts >>>

import Foundation

open class ClearFolderModel: ClearFolderInFolderList {
  public var accountDataHandler: MailAppModelHandler
  public init(_ accountDataHandler: MailAppModelHandler) {
    self.accountDataHandler = accountDataHandler
  }

  @discardableResult
  open func doesClearSpamButtonExist() throws -> Bool {
    return !self.accountDataHandler.getCurrentAccount().messagesDB.isContainerEmpty(MessageContainer(DefaultFolderName.spam, MessageContainerType.folder))
  }

  @discardableResult
  open func doesClearTrashButtonExist() throws -> Bool {
    return !self.accountDataHandler.getCurrentAccount().messagesDB.isContainerEmpty(MessageContainer(DefaultFolderName.trash, MessageContainerType.folder))
  }

  @discardableResult
  open func clearSpam(_ confirmDeletionIfNeeded: Bool) throws -> Void {
    if confirmDeletionIfNeeded {
      (try self.clearFolder(DefaultFolderName.spam))
    }
  }

  @discardableResult
  open func clearTrash(_ confirmDeletionIfNeeded: Bool) throws -> Void {
    if confirmDeletionIfNeeded {
      (try self.clearFolder(DefaultFolderName.trash))
    }
  }

  @discardableResult
  private func clearFolder(_ folder: FolderName) throws -> Void {
    let messagesToDelete: YSArray<MessageId> = self.getMessagesInFolder(folder)
    for mid in messagesToDelete {
      self.accountDataHandler.getCurrentAccount().messagesDB.removeMessagePermanently(mid)
    }
  }

  @discardableResult
  private func getMessagesInFolder(_ folder: FolderName) -> YSArray<MessageId> {
    return self.accountDataHandler.getCurrentAccount().messagesDB.getMessageIdList(MessageListDatabaseFilter().withContainer(MessageContainer(folder, MessageContainerType.folder)).withIsInThreadMode(false))
  }

}

