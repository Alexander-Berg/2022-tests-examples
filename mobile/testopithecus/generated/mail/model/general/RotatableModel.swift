// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/model/general/rotatable-model.ts >>>

import Foundation

open class RotatableModel: Rotatable {
  public var landscape: Bool = false
  private var listeners: YSArray<RotateListener> = YSArray()
  @discardableResult
  open func rotateToLandscape() throws -> Void {
    self.landscape = true
    self.notifyRotated()
  }

  @discardableResult
  open func rotateToPortrait() throws -> Void {
    self.landscape = false
    self.notifyRotated()
  }

  @discardableResult
  open func copy() -> RotatableModel {
    let copy = RotatableModel()
    copy.landscape = self.landscape
    return copy
  }

  @discardableResult
  open func isInLandscape() throws -> Bool {
    return self.landscape
  }

  open func attach(_ listener: RotateListener) -> Void {
    self.listeners.push(listener)
  }

  open func notifyRotated() -> Void {
    for listener in self.listeners {
      listener.rotated(self.landscape)
    }
  }

}

public protocol RotateListener {
  func rotated(_ landscape: Bool) -> Void
}

