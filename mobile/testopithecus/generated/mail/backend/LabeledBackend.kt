// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/backend/labeled-backend.ts >>>

package com.yandex.xplat.testopithecus

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*
import com.yandex.xplat.eventus.*
import com.yandex.xplat.mapi.*
import com.yandex.xplat.testopithecus.common.*

public open class MarkableImportantBackend(private var mailListDisplayBackend: MessageListDisplayBackend, private var clientsHandler: MailboxClientHandler): MarkableImportant {
    open override fun markAsImportant(order: Int): Unit {
        val tid = this.mailListDisplayBackend.getThreadMessage(order).tid!!
        val lid = this.clientsHandler.getCurrentClient().getLabelList().filter( {
            label ->
            label.type == LabelType.important
        })[0].lid
        this.clientsHandler.getCurrentClient().markThreadWithLabel(tid, lid)
    }

    open override fun markAsUnimportant(order: Int): Unit {
        val tid = this.mailListDisplayBackend.getThreadMessage(order).tid!!
        val lid = this.clientsHandler.getCurrentClient().getLabelList().filter( {
            label ->
            label.type == LabelType.important
        })[0].lid
        this.clientsHandler.getCurrentClient().unmarkThreadWithLabel(tid, lid)
    }

}

