// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/backend/multi-account-backend.ts >>>

import Foundation

open class MultiAccountBackend: MultiAccount {
  private var clientsHandler: MailboxClientHandler
  public init(_ clientsHandler: MailboxClientHandler) {
    self.clientsHandler = clientsHandler
  }

  @discardableResult
  open func switchToAccount(_ login: Login) throws -> Void {
    self.clientsHandler.switchToClientForAccountWithLogin(login)
  }

  @discardableResult
  open func logoutFromAccount(_ login: Login) throws -> Void {
    self.clientsHandler.getLoggedInAccounts().filter({
      (account) in
      account.login != login
    })
  }

  @discardableResult
  open func getCurrentAccount() throws -> Login {
    return self.clientsHandler.getCurrentClient().oauthAccount.account.login
  }

  @discardableResult
  open func getNumberOfAccounts() throws -> Int32 {
    return (try self.getLoggedInAccountsList()).length
  }

  @discardableResult
  open func getLoggedInAccountsList() throws -> YSArray<Login> {
    return self.clientsHandler.getLoggedInAccounts().map({
      (acc) in
      acc.login
    })
  }

  @discardableResult
  open func addNewAccount() throws -> Void {
  }

}

