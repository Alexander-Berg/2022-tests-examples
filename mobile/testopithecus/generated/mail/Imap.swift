// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/imap.ts >>>

import Foundation

public protocol Imap {
  func connect(_ cb: @escaping (YSError?) -> Void) -> Void
  func appendMessage(_ folder: String, _ message: MessageSpec, _ cb: @escaping (YSError?) -> Void) -> Void
  func createFolder(_ folder: String, _ cb: @escaping (YSError?) -> Void) -> Void
  func deleteMessages(_ folder: String, _ messageCount: Int32, _ cb: @escaping (YSError?) -> Void) -> Void
  func deleteFolder(_ folder: String, _ cb: @escaping (YSError?) -> Void) -> Void
  @discardableResult
  func openFolder(_ folder: String) -> XPromise<ImapFolderInfo>
  func expungeFolder(_ folder: String, _ cb: @escaping (YSError?) -> Void) -> Void
  @discardableResult
  func fetchAllFolders() -> XPromise<YSArray<ImapFolderDisplay>>
  func disconnect(_ cb: @escaping (YSError?) -> Void) -> Void
}

open class ImapFolderInfo {
  public let messageCount: Int32
  public init(_ messageCount: Int32) {
    self.messageCount = messageCount
  }

}

open class ImapFolderDisplay {
  public let name: String
  public init(_ name: String) {
    self.name = name
  }

}

public protocol ImapProvider {
  @discardableResult
  func provide(_ account: MailAccountSpec) -> Imap
}

