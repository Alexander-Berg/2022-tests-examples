// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/feature/tab-bar-feature.ts >>>

package com.yandex.xplat.testopithecus

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*
import com.yandex.xplat.eventus.*
import com.yandex.xplat.mapi.*
import com.yandex.xplat.testopithecus.common.*

public open class TabBarFeature private constructor(): Feature<TabBar>("TabBar", "Таббар") {
    companion object {
        @JvmStatic var `get`: TabBarFeature = TabBarFeature()
    }
}

public interface TabBar {
    fun isShown(): Boolean
    fun getCurrentItem(): TabBarItem
    fun tapOnItem(item: TabBarItem): Unit
}

public open class TabBarIOSFeature private constructor(): Feature<TabBarIOS>("TabBarIOS", "Специфичные для таббара на iOS методы") {
    companion object {
        @JvmStatic var `get`: TabBarIOSFeature = TabBarIOSFeature()
    }
}

public interface TabBarIOS {
    fun getItems(): YSArray<TabBarItem>
    fun getCalendarIconDate(): String
}

public open class TabBarAndroidFeature private constructor(): Feature<TabBarAndroid>("TabBarAndroid", "Специфичные для таббара на Android методы") {
    companion object {
        @JvmStatic var `get`: TabBarAndroidFeature = TabBarAndroidFeature()
    }
}

public interface TabBarAndroid {
    fun getItems(): YSArray<TabBarItem>
}

public open class ShtorkaFeature private constructor(): Feature<Shtorka>("Shtorka", "Шторка с сервисами, которая открывается по тапу на More в таббаре") {
    companion object {
        @JvmStatic var `get`: ShtorkaFeature = ShtorkaFeature()
    }
}

public interface Shtorka {
    fun closeBySwipe(): Unit
    fun closeByTapOver(): Unit
    fun getShownBannerType(): ShtorkaBannerType?
    fun tapOnBanner(): Unit
    fun closeBanner(): Unit
    fun tapOnItem(item: TabBarItem): Unit
}

public open class ShtorkaAndroidFeature private constructor(): Feature<ShtorkaAndroid>("ShtorkaAndroid", "Специфичные для шторки на Android методы") {
    companion object {
        @JvmStatic var `get`: ShtorkaAndroidFeature = ShtorkaAndroidFeature()
    }
}

public interface ShtorkaAndroid {
    fun getItems(): YSArray<TabBarItem>
}

public open class ShtorkaIOSFeature private constructor(): Feature<ShtorkaIOS>("ShtorkaIOS", "Специфичные для шторки на iOS методы") {
    companion object {
        @JvmStatic var `get`: ShtorkaIOSFeature = ShtorkaIOSFeature()
    }
}

public interface ShtorkaIOS {
    fun getItems(): YSArray<TabBarItem>
}

public enum class ShtorkaBannerType {
    docs,
    scanner,
    mail360,
}
public enum class TabBarItem(val value: String) {
    mail("Mail"),
    calendar("Calendar"),
    documents("Documents"),
    telemost("Telemost"),
    contacts("Contacts"),
    more("More"),
    disk("Disk"),
    notes("Notes"),
    scanner("Scanner"),
    subscriptions("Subscriptions"),
    ;
    override fun toString(): String = value
}
