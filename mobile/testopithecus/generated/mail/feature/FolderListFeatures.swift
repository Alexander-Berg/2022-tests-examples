// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/feature/folder-list-features.ts >>>

import Foundation

public typealias FolderName = String

public typealias LabelName = String

open class FolderNavigatorFeature: Feature<FolderNavigator> {
  public static var `get`: FolderNavigatorFeature = FolderNavigatorFeature()
  private init() {
    super.init("FolderNavigator", "Фича списка папок: открыть/закрыть список, переход в папку")
  }

}

public protocol FolderNavigator {
  @discardableResult
  func openFolderList() throws -> Void
  @discardableResult
  func closeFolderList() throws -> Void
  @discardableResult
  func getFoldersList() throws -> YSMap<FolderName, Int32>
  @discardableResult
  func goToFolder(_ folderDisplayName: String, _ parentFolders: YSArray<String>) throws -> Void
  @discardableResult
  func isInTabsMode() throws -> Bool
  @discardableResult
  func ptrFoldersList() throws -> Void
  @discardableResult
  func getCurrentContainer() throws -> String!
}

open class FilterNavigatorFeature: Feature<FilterNavigator> {
  public static var `get`: FilterNavigatorFeature = FilterNavigatorFeature()
  public init() {
    super.init("FilterNavigator", "Навигатор по фильтрам из сайдбара.")
  }

}

public protocol FilterNavigator {
  @discardableResult
  func goToFilterImportant() throws -> Void
  @discardableResult
  func goToFilterUnread() throws -> Void
  @discardableResult
  func goToFilterWithAttachments() throws -> Void
}

open class LabelNavigatorFeature: Feature<LabelNavigator> {
  public static var `get`: LabelNavigatorFeature = LabelNavigatorFeature()
  public init() {
    super.init("LabelNavigator", "Фича для простмотра списка писем с соответствующей меткой. Открывается через сайдбар.")
  }

}

public protocol LabelNavigator {
  @discardableResult
  func getLabelList() throws -> YSArray<LabelName>
  @discardableResult
  func goToLabel(_ labelName: String) throws -> Void
}

open class ClearFolderInFolderListFeature: Feature<ClearFolderInFolderList> {
  public static var `get`: ClearFolderInFolderListFeature = ClearFolderInFolderListFeature()
  public init() {
    super.init("ClearFolderInFolderList", "Фича очистки папок Спам и Удаленные через список писем, от confirmDeletionIfNeeded зависит, подтвердим ли мы удаление или нет")
  }

}

public protocol ClearFolderInFolderList {
  @discardableResult
  func clearSpam(_ confirmDeletionIfNeeded: Bool) throws -> Void
  @discardableResult
  func doesClearSpamButtonExist() throws -> Bool
  @discardableResult
  func clearTrash(_ confirmDeletionIfNeeded: Bool) throws -> Void
  @discardableResult
  func doesClearTrashButtonExist() throws -> Bool
}

