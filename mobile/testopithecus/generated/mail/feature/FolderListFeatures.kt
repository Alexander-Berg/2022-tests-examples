// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/feature/folder-list-features.ts >>>

package com.yandex.xplat.testopithecus

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*
import com.yandex.xplat.eventus.*
import com.yandex.xplat.mapi.*
import com.yandex.xplat.testopithecus.common.*

public typealias FolderName = String

public typealias LabelName = String

public open class FolderNavigatorFeature private constructor(): Feature<FolderNavigator>("FolderNavigator", "Фича списка папок: открыть/закрыть список, переход в папку") {
    companion object {
        @JvmStatic var `get`: FolderNavigatorFeature = FolderNavigatorFeature()
    }
}

public interface FolderNavigator {
    fun openFolderList(): Unit
    fun closeFolderList(): Unit
    fun getFoldersList(): YSMap<FolderName, Int>
    fun goToFolder(folderDisplayName: String, parentFolders: YSArray<String>): Unit
    fun isInTabsMode(): Boolean
    fun ptrFoldersList(): Unit
    fun getCurrentContainer(): String?
}

public open class FilterNavigatorFeature(): Feature<FilterNavigator>("FilterNavigator", "Навигатор по фильтрам из сайдбара.") {
    companion object {
        @JvmStatic var `get`: FilterNavigatorFeature = FilterNavigatorFeature()
    }
}

public interface FilterNavigator {
    fun goToFilterImportant(): Unit
    fun goToFilterUnread(): Unit
    fun goToFilterWithAttachments(): Unit
}

public open class LabelNavigatorFeature(): Feature<LabelNavigator>("LabelNavigator", "Фича для простмотра списка писем с соответствующей меткой. Открывается через сайдбар.") {
    companion object {
        @JvmStatic var `get`: LabelNavigatorFeature = LabelNavigatorFeature()
    }
}

public interface LabelNavigator {
    fun getLabelList(): YSArray<LabelName>
    fun goToLabel(labelName: String): Unit
}

public open class ClearFolderInFolderListFeature(): Feature<ClearFolderInFolderList>("ClearFolderInFolderList", "Фича очистки папок Спам и Удаленные через список писем, от confirmDeletionIfNeeded зависит, подтвердим ли мы удаление или нет") {
    companion object {
        @JvmStatic var `get`: ClearFolderInFolderListFeature = ClearFolderInFolderListFeature()
    }
}

public interface ClearFolderInFolderList {
    fun clearSpam(confirmDeletionIfNeeded: Boolean): Unit
    fun doesClearSpamButtonExist(): Boolean
    fun clearTrash(confirmDeletionIfNeeded: Boolean): Unit
    fun doesClearTrashButtonExist(): Boolean
}

