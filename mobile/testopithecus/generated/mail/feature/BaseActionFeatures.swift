// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/feature/base-action-features.ts >>>

import Foundation

open class ArchiveMessageFeature: Feature<ArchiveMessage> {
  public static var `get`: ArchiveMessageFeature = ArchiveMessageFeature()
  private init() {
    super.init("ArchiveMessage", "Базовая фича архивации сообщения. В мобильных по дефолту выполняется через Short swipe.")
  }

}

public protocol ArchiveMessage {
  @discardableResult
  func archiveMessage(_ order: Int32) throws -> Void
}

open class DeleteMessageFeature: Feature<DeleteMessage> {
  public static var `get`: DeleteMessageFeature = DeleteMessageFeature()
  private init() {
    super.init("DeleteMessage", "Дефолтная фича удаления сообщения." + "В мобильных реализуется через full swipe, в Лизе через тулбар.")
  }

}

public protocol DeleteMessage {
  @discardableResult
  func deleteMessage(_ order: Int32) throws -> Void
}

open class MarkableImportantFeature: Feature<MarkableImportant> {
  public static var `get`: MarkableImportantFeature = MarkableImportantFeature()
  private init() {
    super.init("MarkableImportant", "Базовая фича метки важности. В мобильных по дефолту выполняется через Short swipe.")
  }

}

public protocol MarkableImportant {
  @discardableResult
  func markAsImportant(_ order: Int32) throws -> Void
  @discardableResult
  func markAsUnimportant(_ order: Int32) throws -> Void
}

open class MarkableReadFeature: Feature<MarkableRead> {
  public static var `get`: MarkableReadFeature = MarkableReadFeature()
  private init() {
    super.init("MarkableRead", "Дефолтная фича управления статусом прочитанности письма." + "В мобильных реализуется через full swipe, в Лизе через тулбар.")
  }

}

public protocol MarkableRead {
  @discardableResult
  func markAsRead(_ order: Int32) throws -> Void
  @discardableResult
  func markAsUnread(_ order: Int32) throws -> Void
}

open class MovableToFolderFeature: Feature<MovableToFolder> {
  public static var `get`: MovableToFolderFeature = MovableToFolderFeature()
  private init() {
    super.init("MovableToFolder", "Фича переноса соообщения в другую папку. На мобильных по дефолту реализуется через Short swipe.")
  }

}

public protocol MovableToFolder {
  @discardableResult
  func moveMessageToFolder(_ order: Int32, _ folderName: FolderName) throws -> Void
}

open class SpamableFeature: Feature<Spamable> {
  public static var `get`: SpamableFeature = SpamableFeature()
  private init() {
    super.init("Spamable", "Фича пометки письма спамом. По дефолту в мобильных осуществляется через Short swipe.")
  }

}

public protocol Spamable {
  @discardableResult
  func moveToSpam(_ order: Int32) throws -> Void
  @discardableResult
  func moveFromSpam(_ order: Int32) throws -> Void
}

