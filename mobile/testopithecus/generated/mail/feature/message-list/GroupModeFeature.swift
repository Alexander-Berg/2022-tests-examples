// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/feature/message-list/group-mode-feature.ts >>>

import Foundation

open class GroupModeFeature: Feature<GroupMode> {
  public static var `get`: GroupModeFeature = GroupModeFeature()
  private init() {
    super.init("GroupMode", "Действия с письмами в режиме групповых операций." + "InitialSelectMessage переводит в компонент GroupMode и производится по лонг тапу." + "SelectMessage выделяет письма, если мы уже в режиме групповых операций по обычному тапу.")
  }

}

public protocol GroupMode {
  @discardableResult
  func getNumberOfSelectedMessages() throws -> Int32
  @discardableResult
  func isInGroupMode() throws -> Bool
  @discardableResult
  func selectMessage(_ byOrder: Int32) throws -> Void
  @discardableResult
  func selectAllMessages() throws -> Void
  @discardableResult
  func initialMessageSelect(_ byOrder: Int32) throws -> Void
  @discardableResult
  func getSelectedMessages() throws -> YSSet<Int32>
  @discardableResult
  func markAsRead() throws -> Void
  @discardableResult
  func markAsUnread() throws -> Void
  @discardableResult
  func delete() throws -> Void
  @discardableResult
  func openApplyLabelsScreen() throws -> Void
  @discardableResult
  func markAsImportant() throws -> Void
  @discardableResult
  func markAsUnimportant() throws -> Void
  @discardableResult
  func markAsSpam() throws -> Void
  @discardableResult
  func markAsNotSpam() throws -> Void
  @discardableResult
  func openMoveToFolderScreen() throws -> Void
  @discardableResult
  func archive() throws -> Void
  @discardableResult
  func unselectMessage(_ byOrder: Int32) throws -> Void
  @discardableResult
  func unselectAllMessages() throws -> Void
}

