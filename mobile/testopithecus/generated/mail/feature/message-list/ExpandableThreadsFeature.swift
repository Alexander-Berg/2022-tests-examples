// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/feature/message-list/expandable-threads-feature.ts >>>

import Foundation

open class ExpandableThreadsModelFeature: Feature<ReadOnlyExpandableThreads> {
  public static var `get`: ExpandableThreadsModelFeature = ExpandableThreadsModelFeature()
  private init() {
    super.init("ReadOnlyExpandableThreads", "TODO: добрый человек, напиши тут, про что эта фича")
  }

}

public protocol ReadOnlyExpandableThreads {
  @discardableResult
  func isExpanded(_ threadOrder: Int32) throws -> Bool
  @discardableResult
  func isRead(_ threadOrder: Int32, _ messageOrder: Int32) throws -> Bool
  @discardableResult
  func getMessagesInThread(_ threadOrder: Int32) throws -> YSArray<MessageView>
}

open class ExpandableThreadsFeature: Feature<ExpandableThreads> {
  public static var `get`: ExpandableThreadsFeature = ExpandableThreadsFeature()
  private init() {
    super.init("ExpandableThreads", "TODO: добрый человек, напиши тут, про что эта фича")
  }

}

public protocol ExpandableThreads {
  @discardableResult
  func markThreadMessageAsRead(_ threadOrder: Int32, _ messageOrder: Int32) throws -> Void
  @discardableResult
  func markThreadMessageAsUnRead(_ threadOrder: Int32, _ messageOrder: Int32) throws -> Void
  @discardableResult
  func expandThread(_ order: Int32) throws -> Void
  @discardableResult
  func collapseThread(_ order: Int32) throws -> Void
}

