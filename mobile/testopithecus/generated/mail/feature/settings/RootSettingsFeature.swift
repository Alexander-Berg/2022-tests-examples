// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/feature/settings/root-settings-feature.ts >>>

import Foundation

open class RootSettingsFeature: Feature<RootSettings> {
  public static var `get`: RootSettingsFeature = RootSettingsFeature()
  private init() {
    super.init("RootSettings", "Корневой экран настроек, достуный по тапу на кнопку \"Настройки\"." + " В iOS - отдельный экран с возможностью перехода в General и Account и About settings," + " в Android - слит воедино с экраном General settings.")
  }

}

public protocol RootSettings {
  @discardableResult
  func openRootSettings() throws -> Void
  @discardableResult
  func isAboutCellExists() throws -> Bool
  @discardableResult
  func isHelpAndFeedbackCellExists() throws -> Bool
  @discardableResult
  func getAccounts() throws -> YSArray<String>
  @discardableResult
  func getTitle() throws -> String
  @discardableResult
  func closeRootSettings() throws -> Void
}

open class AndroidRootSettingsFeature: Feature<AndroidRootSettings> {
  public static var `get`: AndroidRootSettingsFeature = AndroidRootSettingsFeature()
  private init() {
    super.init("AndroidRootSettingsFeature", "Специфичные для Android главные настройки.")
  }

}

public protocol AndroidRootSettings {
  @discardableResult
  func addAccount() throws -> Void
  @discardableResult
  func isAddAccountCellExists() throws -> Bool
}

open class IOSRootSettingsFeature: Feature<IOSRootSettings> {
  public static var `get`: IOSRootSettingsFeature = IOSRootSettingsFeature()
  private init() {
    super.init("IOSRootSettingsFeature", "Специфичные для iOS главные настройки.")
  }

}

public protocol IOSRootSettings {
  @discardableResult
  func isGeneralSettingsCellExists() throws -> Bool
}

