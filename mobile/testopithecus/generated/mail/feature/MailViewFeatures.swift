// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/feature/mail-view-features.ts >>>

import Foundation

open class MessageViewerAndroidFeature: Feature<MessageViewerAndroid> {
  public static var `get`: MessageViewerAndroidFeature = MessageViewerAndroidFeature()
  private init() {
    super.init("MessageViewerAndroid", "Специфичные для андроида действия с открытым письмом.")
  }

}

public protocol MessageViewerAndroid {
  @discardableResult
  func deleteMessageByIcon() throws -> Void
  @discardableResult
  func getDefaultSourceLanguage() throws -> LanguageName
}

open class MessageViewerFeature: Feature<MessageViewer> {
  public static var `get`: MessageViewerFeature = MessageViewerFeature()
  private init() {
    super.init("MessageViewer", "Фича для управления открытым письмом. Несколько меток добавляются установкой нескольких чекбоксов в popup")
  }

}

public protocol MessageViewer {
  @discardableResult
  func openMessage(_ order: Int32) throws -> Void
  @discardableResult
  func isMessageOpened() -> Bool
  @discardableResult
  func closeMessage() throws -> Void
  @discardableResult
  func getOpenedMessage() throws -> FullMessageView
  @discardableResult
  func checkIfRead() throws -> Bool
  @discardableResult
  func checkIfSpam() throws -> Bool
  @discardableResult
  func checkIfImportant() throws -> Bool
  @discardableResult
  func getLabels() throws -> YSSet<String>
  @discardableResult
  func deleteLabelsFromHeader(_ labels: YSArray<LabelName>) throws -> Void
  @discardableResult
  func markAsUnimportantFromHeader() throws -> Void
  @discardableResult
  func arrowDownClick() throws -> Void
  @discardableResult
  func arrowUpClick() throws -> Void
}

open class ThreadViewNavigatorFeature: Feature<ThreadViewNavigator> {
  public static let `get`: ThreadViewNavigatorFeature = ThreadViewNavigatorFeature()
  private init() {
    super.init("ThreadViewNavigator", "Навигационный тулбар в просмотре письма, можно переключаться между письмами треда и " + "удалить/архивировать (в зависимости от действия по свайпу) тред. Есть во всех Android и в планшетах на IOS")
  }

}

public protocol ThreadViewNavigator {
  @discardableResult
  func deleteCurrentThread() throws -> Void
  @discardableResult
  func archiveCurrentThread() throws -> Void
}

public protocol FullMessageView {
  var head: MessageView { get }
  var to: YSSet<String> { get }
  var body: String { get }
  var lang: LanguageName { get }
  var quickReply: Bool { get }
  var smartReplies: YSArray<String> { get }
  @discardableResult
  func tostring() -> String
}

public protocol MessageView {
  var from: String { get set }
  var to: String { get }
  var subject: String { get }
  var read: Bool { get }
  var important: Bool { get }
  var threadCounter: Int32! { get set }
  var attachments: YSArray<AttachmentView> { get }
  var firstLine: String { get }
  var timestamp: Int64 { get }
  @discardableResult
  func tostring() -> String
}

public protocol AttachmentView {
  var displayName: String { get }
}

