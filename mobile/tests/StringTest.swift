//
//  StringTest.swift
//  UtilsTests
//
//  Created by Timur Turaev on 12.08.2020.
//  Copyright © 2020 Yandex. All rights reserved.
//

import Foundation
import XCTest
@testable import Utils

internal final class StringTest: XCTestCase {
    func testLocalization() {
        let key = "PromoDefaultMailAppTitle"

        XCTAssertEqual(key.localizedString(), "Your default mail")
    }

    func testEncodedStringForOpeningInBrowser() {
        let testLink = "https://some.test.link/redirect?&client=foo&sign=36"
        let encodedLink = "https%3A%2F%2Fsome.test.link%2Fredirect%3F%26client=foo%26sign=36"
        XCTAssertEqual(testLink.encodedStringForOpeningInBrowser(), encodedLink)
    }

    func testDecodingString() {
        XCTAssertEqual("==wdllmV05WZ052bDt0V".yandexDecoded, "WKContentView")
        XCTAssertEqual("==wdllmV5J3bzNXZjNWQzVnbp10dllmV05WZ052bDt0V".yandexDecoded, "WKContentViewMinusAccessoryView")
        XCTAssertNil("???".yandexDecoded)
        XCTAssertEqual("".yandexDecoded, "")
        XCTAssertEqual("==QM".yandexDecoded, "1")
        XCTAssertEqual("Pi77Cip4".yandexDecoded, "☂️")
        XCTAssertEqual(NSString(string: "==QM").yandexDecodedNSString, "1")
    }

    // https://st.yandex-team.ru/MOBILEMAIL-17352
    func testRemovingUnpronounceableCharacters() {
        // swiftlint:disable line_length
        let base64 = "0KDQsNGB0YHQutCw0LfRi9Cy0LDQtdC8INC+INGC0L7QvCwg0YfRgtC+INGN0YLQviDQt9C90LDRh9C40YIg0LTQu9GPINCy0LDRgS4gwqDigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAgyDigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAg+KAjCDCoOKAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCDIMKg4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIMg4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIPigIwgwqDigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAgyDCoOKAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCDIOKAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCD4oCMIMKg4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIMgwqDigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAgyDigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAg+KAjCDCoOKAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCDIMKg4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIMg4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIPigIwgwqDigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAgyDCoOKAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCDIOKAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCD4oCMIMKg4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIMgwqDigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAgyDigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAg+KAjCDCoOKAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCDIMKg4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIMg4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIPigIwgwqDigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAgyDCoOKAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCDIOKAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCD4oCMIMKg4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIMgwqDigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAgyDigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAg+KAjCDCoOKAjMKg4oCD4oCD4oCD4oCD4oCD4oCMwqDigIPigIPigIPigIPigIPigIzCoOKAg+KAg+KAg+KAg+KAg+KAjMKg4oCD4oCD4oCD4oCD4oCDIO+/vArvv7wK77+8CtCh0L7QstGB0LXQvCDRgdC60L7RgNC+INCy0YHRkSDQvdGD0LbQvdC+0LUsINCy0LDQttC90L7QtSDQuMKg0LvRjtCx0LjQvNC+0LUg0LLRi8Kg0LHRg9C00LXRgtC1INC/0L7QutGD0L/QsNGC0Ywg0YPQttC1INC90LDCoNCv0L3QtNC10LrRgS7QnNCw0YDQutC10YLQtS4g0J3QvsKg0L3QtcKg0LLQvtC70L3Rg9C50YLQtdGB0YwsINCy0LDRgSDQstGB0ZEg0YLQsNC6wqDQttC1INCx0YPQtNGD0YIg0LbQtNCw0YLRjDog77+8INCS0YvQs9C+0LTQvdGL0LUg0LHQvtC90YPRgdGLIOKAqNC30LDCoNC/0L7QutGD0L/QutC4INC4wqDQv9GA0L7RgdGC0L4g0YLQsNC6Kgrvv7wg0JDQutGG0LjQuCDQuMKg0YHQutC40LTQutC4IOKAqNC60LDQttC00YvQuSDQtNC10L3RjArvv7wg0KLRgNC4INCx0LXRgdC/0LvQsNGC0L3Ri9C1IOKAqNC00L7RgdGC0LDQstC60Lgg0LLCoNC80LXRgdGP0YYK77+8INCt0LrQvtC90L7QvNC40Y8g0LTQvsKgOTklIOKAqNGBwqDQsdC+0L3Rg9GB0LDQvNC4INCh0J/QkNCh0JjQkdCeCtCQwqDQstC+0YIg0YfRgtC+INC40LfQvNC10L3QuNGC0YHRjzog4oCiINCf0L7Qu9GD0YfQsNGC0Ywg0L/QuNGB0YzQvNCwINCy0YvCoNCx0YPQtNC10YLQtSDQvtGCwqDQr9C90LTQtdC60YEuINCc0LDRgNC60LXRgtCwINGBwqDQv9C+0YfRgtGLLCDQutC+0YLQvtGA0LDRjyDQvtC60LDQvdGH0LjQstCw0LXRgtGB0Y8g0L3QsMKgIG1h4oCMcmvigIxldOKAjC7igIx5YW7igIxkZXjigIwu4oCMcnUK4oCiINCV0YHQu9C4INCy0YvCoNC30LDRhdC+0LTQuNGC0LUg0YfQtdGA0LXQtyBTYmVywqBJRCwg0LTQvsKgMzDCoNGB0LXQvdGC0Y/QsdGA0Y8g0LXQs9C+INC90YPQttC90L4g0LHRg9C00LXRgiDRgdCy0Y/Qt9Cw0YLRjCDRgcKg0LDQutC60LDRg9C90YLQvtC8INCywqDQr9C90LTQtdC60YHQtS4g0KHQtNC10LvQsNGC0Ywg0Y3RgtC+INC80L7QttC90L4g0LLCoNCb0LjRh9C90L7QvCDQutCw0LHQuNC90LXRgtC1LgrigKIg0JjCoNCz0LvQsNCy0L3QvtC1OiDQt9CwwqDQv9C+0LrRg9C/0LrQsNC80Lgg0LLQsNC8INGC0LXQv9C10YDRjMKg4oCUINC90LDCoNCv0L3QtNC10LrRgS7QnNCw0YDQutC10YIK0JXRgdC70Lgg0YPCoNCy0LDRgSDQvtGB0YLQsNC70LjRgdGMINCy0L7Qv9GA0L7RgdGLLCDQt9Cw0YXQvtC00LjRgtC1wqDRgdGO0LTQsC4g4oCo0KPQstC40LTQuNC80YHRjyDQvdCwwqDQr9C90LTQtdC60YEu0JzQsNGA0LrQtdGC0LUhCu+/vArQrtGA0LjQtNC40YfQtdGB0LrQsNGPwqDQuNC90YTQvtGA0LzQsNGG0LjRjwrQntGC0L/QuNGB0LDRgtGM0YHRj8Kg0L7RgsKg0YDQsNGB0YHRi9C70LrQuArQntC/0LvQsNGC0LDCoNC4wqDQtNC+0YHRgtCw0LLQutCwCu+/vCDvv7wK77+8IO+/vCDvv7wg77+8Ckdvb2dsZSBQbGF5INC4wqDQu9C+0LPQvtGC0LjQvyBHb29nbGUgUGxheSDRj9Cy0LvRj9GO0YLRgdGPINGC0L7QstCw0YDQvdGL0LzQuCDQt9C90LDQutCw0LzQuCDQutC+0YDQv9C+0YDQsNGG0LjQuCBHb29nbGUgSW5jLiBBcHBsZSDQuMKg0LvQvtCz0L7RgtC40L8gQXBwbGUg0Y/QstC70Y/RjtGC0YHRjyDQt9Cw0YDQtdCz0LjRgdGC0YDQuNGA0L7QstCw0L3QvdGL0LzQuCDRgtC+0LLQsNGA0L3Ri9C80Lgg0LfQvdCw0LrQsNC80Lgg0LrQvtC80L/QsNC90LjQuCBBcHBsZSBJbmMuINCywqDQodCo0JAg0LjCoNC00YDRg9Cz0LjRhSDRgdGC0YDQsNC90LDRhS4gQXBwIFN0b3JlINGP0LLQu9GP0LXRgtGB0Y8g0LfQvdCw0LrQvtC8INC+0LHRgdC70YPQttC40LLQsNC90LjRjyDQutC+0LzQv9Cw0L3QuNC4IEFwcGxlIEluYy4g4oCo4oCoKtCf0L7QtNGA0L7QsdC90LXQtSDQvsKg0JHQvtC90YPRgdCw0YUg0L3QsCBodHRwczovL2JlcnUucnUvcHJvbW8vYm9udXMK0KbQtdC90Ysg0LjCoNGB0LrQuNC00LrQuCDQtNC10LnRgdGC0LLQuNGC0LXQu9GM0L3RiyDQvdCwwqDQvNC+0LzQtdC90YIg0L7RgtC/0YDQsNCy0LrQuCDQv9C40YHRjNC80LAuINCe0J7QnsKgwqvQr9C90LTQtdC60YEu0JzQsNGA0LrQtdGCwrsgwqnCoDIwMjAuIDEy4oCMMTDigIw5OSwg0LMuINCc0L7RgdC60LLQsCwg0J3QvtCy0LjQvdGB0LrQuNC5INCx0YPQu9GM0LLQsNGALCDQtNC+0LzCoDgsINC/0L7QvNC10YnQtdC90LjQtSA5LjAzLCDRjdGC0LDQtsKgOS4g0J7Qk9Cg0J06IDEx4oCMNjfigIw3NOKAjDY04oCMOTHigIwzOeKAjDUuIOKAqOKAqNCQ0LrRhtC40Y8g0L/QviDQsdC10YHQv9C70LDRgtC90L7QuSDQtNC+0YHRgtCw0LLQutC1INC/0YDQvtCy0L7QtNC40YLRgdGPINC00L4gMzEuMTIuMjAyMCDQsy4sINC/0L7QtNGA0L7QsdC90LXQtTogd3d3LmJlcnUucnUvZnJlZWRlbGl2ZXJ5Cu+/vA=="

        let badString = String(data: Data(base64Encoded: base64)!, encoding: .utf8)!
        let goodString = badString.stringByRemovingUnpronounceableCharacters(saveParagraphs: true)
        let goodStringToo = goodString.stringByRemovingUnpronounceableCharacters(saveParagraphs: true)

        XCTAssertEqual(badString.count, 2136)
        XCTAssertEqual(goodString.count, 1324)
        XCTAssertEqual(goodString, goodStringToo)
    }
}
