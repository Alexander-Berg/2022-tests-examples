import { routeNumberRecord } from './routes';

const selectors = {
  noLogin: {
    hello: '.app__wrapper .stub__content',
    title: '.app__wrapper .auth__stub-title',
    description: '.app__wrapper .auth__stub-description',
    newCompany: '.create-company-form__title',
    registerForm: {
      form: '.create-company-form',
      field: (name: string) => `.create-company-form__field[data-test-anchor=${name}]`,
      input: (name: string) => `.create-company-form__field[data-test-anchor=${name}] input`,
      select: (name: string) =>
        `.create-company-form__field[data-test-anchor=${name}] .dropdown-icon`,
      termsOfUse: '.create-company-form__term-of-use',
      termsOfUseCheckbox: '.create-company-form__term-of-use #term-of-use',
      termsOfUseLabel: '.create-company-form__term-of-use label[for="term-of-use"]',
      submit: '.create-company-form button[type="submit"]',
      error: '.create-company-form__error',
      complete: '[data-test-anchor="company-register-complete-popup"]',
    },
    passportRegistrationLink:
      '.auth__stub-action a[href*="https://passport.yandex.ru/registration"]',
    passportSignInLink: '.auth__stub-action[data-test-anchor="sign-in-wrap"]',
  },
  noAccess: {
    button: '[data-test-anchor="no-access-wrap"]',
  },
  superUserRights: {
    addCompanyButton: '.create-company_link-type',
    companySelect: '.sidebar .company-selector .select-item',
    companyDropdown: '.sidebar .selector[data-test-anchor="companies"]',
  },
  managerRights: {
    depotSelect: '.sidebar .company-selector .select-item',
    depotDropdown: '.sidebar .selector[data-test-anchor="depots"]',
  },
  sidebar: {
    view: '.sidebar',
    closeButton: '.sidebar .sidebar__footer-container .menu-item.menu-item_is-right-icon_null',
    closeButtonTitle: '.toggle-sidebar-button__title',
    selectedItem: '.sidebar a.menu-item.menu-item_is-active span',
    menu: {
      mvrp: '[data-test-anchor="mvrp"]',
      collections: '[data-test-anchor="collections"]',
      vehiclesReferenceBook: '[data-test-anchor="vehicles-reference-book"]',
      zonesReferenceBook: '[data-test-anchor="zones-reference-book"]',
      settingsGroup: '.sidebar a[data-test-anchor="settings"]',
      company: '.sidebar a[href*="all/settings"]',
      depots: '[data-test-anchor="depots-menu-item"]',
      users: '.sidebar a[href*="all/users/managers"]',
      monitoringGroup: '.sidebar a[data-test-anchor="monitoring"]',
      couriers: '[data-test-anchor="couriers-menu-item"]',
      courierNameMenuItem: '[data-test-anchor="courierNameSubItem"]',
      couriersSettings: '[data-test-anchor="couriers-settings"]',
      dashboard: '[data-test-anchor="dashboardMenuItem"]',
      map: '[data-test-anchor="map-menu-item"]',
      orders: '[data-test-anchor="orders-menu-item"]',
      developmentGroup: '.sidebar a[data-test-anchor="development"]',
      errorEmitter: '.sidebar a[data-test-anchor="errorEmitter"]',
      reports: '.sidebar a[data-test-anchor="reports"]',
      reportsItems: {
        courierQualityReport: '#reportsSection a[data-test-anchor="courier-quality-report"]',
        planFact: '#reportsSection a[data-test-anchor="plan-fact"]',
      },
      help: '.sidebar a[data-test-anchor="help"]',
      helpItems: {
        documentation: 'a[data-test-anchor="help-documentation"]',
        interfaceGuide: 'a[data-test-anchor="help-interface-guide"]',
        referenceGuide: 'a[data-test-anchor="help-reference-guide"]',
        new: 'a[data-test-anchor="help-new"]',
        getTemplate: 'a[data-test-anchor="help-get-template"]',
      },
      support: 'a[data-test-anchor="support"]',
      contactSupport: 'a[data-test-anchor="contact-support"]',
    },
    tariffInfo: '[data-test-anchor="tariffMenuItem"]',
    settingsGroup: {
      managers: '[data-test-anchor="managers-menu-item"]',
    },
    serviceLogo: '.sidebar .logo-container a',
    user: {
      control: '.sidebar .user-menu-item_main',
      panel: '.sidebar .sidebar-user__container.sidebar-user__container_is-open',
      view: '.sidebar .sidebar-user',
      logout: '.sidebar .sidebar-user [data-test-anchor=user-settings-logout-link]',
      manageAccountLink: '.sidebar .sidebar-user [data-test-anchor=user-settings-manage-link]',
      mailLink: '.sidebar .sidebar-user [data-test-anchor=user-settings-mail-link]',
      settingsLink: '.sidebar .sidebar-user [data-test-anchor=user-settings-link]',
      supportLink: '.sidebar .sidebar-user [data-test-anchor=user-settings-support-link]',
      addAccountLink: '.sidebar .sidebar-user [href*="auth?mode=add-user"]',
      users: {
        all: '.sidebar .sidebar-user .user-menu-item__title:not(:nth(0))',
        current: '.sidebar .sidebar-user .user-menu-item_is-active',
        inactiveUserName:
          '.sidebar .user-accounts .user-menu-item__title:not(.user-menu-item_is-active)',
      },
    },
    companySelector: {
      iconLetterCompany: '.sidebar .company-selector .select-item__letter-icon-wrapper',
      control: '.sidebar .company-selector>.select-item',
      block: '.sidebar .company-selector',
      blockClosed: '.sidebar .company-selector:not(.company-selector_active)',
      toggleControl: '[data-test-anchor="company-selector-toggle"]',
      panel: '.sidebar .company-selector .company-selector__body',
      depots: {
        title: '.sidebar .selector[data-test-anchor="depots"] .selector__title',
        dropdown: '.sidebar .selector[data-test-anchor="depots"]',
        dropdownButton: '.sidebar .selector[data-test-anchor="depots"] button',
        dropdownList: '.sidebar .selector[data-test-anchor="depots"] .selector__list',
        currentDepotAddress: '.sidebar .select-item .select-item__description',
        search: {
          input: '.sidebar .selector[data-test-anchor="depots"] .selector__search-input',
          clearIcon: '.sidebar .selector[data-test-anchor="depots"] .selector__clear-icon',
          notFound: '.sidebar .selector[data-test-anchor="depots"] .selector__not-found',
        },
        dropdownItems: {
          list: '.sidebar .selector[data-test-anchor="depots"] .ReactVirtualized__Grid',
          firstDepot:
            '.sidebar .selector[data-test-anchor="depots"] .ReactVirtualized__Grid__innerScrollContainer div:nth-child(1) .select-item',
          secondDepot: '.sidebar .selector[data-test-anchor="depots"] .select-item:nth(1)',
          lastDepot:
            '.sidebar .selector[data-test-anchor="depots"] .ReactVirtualized__Grid__innerScrollContainer div:last-child .select-item',
          anyDepot: '.sidebar .selector[data-test-anchor="depots"] .select-item',
          anyInactiveDepot:
            '.sidebar .selector[data-test-anchor="depots"] .select-item:not(.select-item_current)',
          allDepots: '.sidebar .selector[data-test-anchor="depots"] .select-item:first-child',
        },
        timezone: '.header .depot-time .depot-time__zone',
        timezoneSettingsControl: 'a .depot-time__settings-trigger',
      },
      orgs: {
        input: '.sidebar .selector[data-test-anchor="companies"] input',
        dropdownButton: '.sidebar .selector[data-test-anchor="companies"] button',
        dropdown: '.sidebar .selector[data-test-anchor="companies"] .scroll-bar-provider',
        dropdownList: '.sidebar .selector[data-test-anchor="companies"] .selector__list',
        showAll: '.sidebar .selector[data-test-anchor="companies"] .selector__show-all',
        currentName: '.sidebar .select-item .select-item__title_main',
        currentNameDisabled: '.sidebar .select-item .select-item__title_main',
        search: {
          input: '.sidebar .selector[data-test-anchor="companies"] .selector__search-input',
          clearIcon: '.sidebar .selector[data-test-anchor="companies"] .selector__clear-icon',
          notFound: '.sidebar .selector[data-test-anchor="companies"] .selector__not-found',
        },
        dropdownItems: {
          list: '.sidebar .selector[data-test-anchor="companies"] .ReactVirtualized__Grid',
          firstOrg: '.sidebar .selector[data-test-anchor="companies"] .select-item:nth-child(1)',
          lastOrg: '.sidebar .selector[data-test-anchor="companies"] .select-item:last-child',
          anyOrg: '.sidebar .selector[data-test-anchor="companies"] .select-item',
          anyOrgName:
            '.sidebar .selector[data-test-anchor="companies"] .select-item .company-title__name',
          notice: '.sidebar .selector[data-test-anchor="companies"] .selector__not-found-title',
          anyInactiveOrg:
            '.sidebar .selector[data-test-anchor="companies"] .select-item:not(.select-item_current)',
          getInactiveOrg: (id: string) =>
            `.sidebar .selector[data-test-anchor="companies"] .select-item[data-test-anchor="company-select_${id}"]`,
          name: '.company-title__name',
        },
      },
    },
  },
  users: {
    title: '[data-test-anchor="users-title"]',
    userList: '[data-test-anchor="user-list"]',
    usersHint: '[data-test-anchor="users-hint"]',
    user: '[data-test-anchor="user-list"] .users__item',
    addForm: '[data-test-anchor="add-form"]',
    addInput: '[data-test-anchor="add-input"]',
    addBtn: '[data-test-anchor="add-form"] > button[type="submit"]',
    removeBtn: '[data-test-anchor="delete-user-button"] > button',
    error: '[data-test-anchor="users-validate"]',
    search: '[data-test-anchor="user-list"] input',
    info: '[data-test-anchor="user-info"]',
  },
  user: {
    deleteBtn: '[data-test-anchor="delete-user"]',
    roleRadio: '[data-test-anchor="user-role-radio"]',
    checkedRadioInput: '.radio-buttons__button_checked',
    info: {
      forbiddenSelfChanges: '[data-test-anchor="forbidden-self-changes"]',
      sectionDepotsWarning: '[data-test-anchor="section-depots-warning"]',
      forbiddenSelfDelete: '[data-test-anchor="forbidden-self-delete"]',
    },
  },
  settings: {
    labels: {
      apikey: '.settings [data-test-anchor="apikey-field"] [data-test-anchor="field-label"]',
      availableServices: '.settings [data-test-anchor="available-services-label"]',
      presettledReasons:
        '.settings [data-test-anchor="presettled_reasons"] [data-test-anchor="field-label"]',
    },
    sections: {
      availableServices: '.settings>[data-test-anchor="available-services"]',
    },
    values: {
      presettledReasons: '.settings [data-test-anchor="presettled_reasons"] input',
    },
    company: {
      inputs: {
        automaticDeliveryDetectionCheckbox:
          '[data-test-anchor="automatic-delivery-detection-checkbox"]',
        radiusOfAutoDetection: '[data-test-anchor="radius-of-auto-detection"]',
        serviceDurationCoefficient: '[data-test-anchor="service-duration-coefficient"]',
        clientSMSCheckbox: '[data-test-anchor="company-client-sms-checkbox"]',
        intervalSMS: '[data-test-anchor="smsNearbyOrder"]',
        label: '[data-test-anchor="field-label"]',
        hint: '.settings-input__field-hint',
      },
      submit: {
        common: '[data-test-anchor="company-common-save-button"]',
        sms: '[data-test-anchor="company-sms-save-button"]',
      },
      chips: {
        common: '[data-test-anchor="company-common-chip"]',
        sms: '[data-test-anchor="company-sms-chip"]',
      },
    },
    depots: {
      buttons: {
        addDepot: '[data-test-anchor="add-new-depot"]',
        createDepot: '[data-test-anchor="create-depot-button"]',
        saveDepot: '[data-test-anchor="save-depot-button"]',
        deleteDepot: '[data-test-anchor="delete-depot-button"]',
      },
      inputs: {
        address: '.edit-depot__fieldset .geo-coding-suggest input[id^=react-select]',
        number: '[data-test-anchor="edit-depot-number-input"]',
        name: '[data-test-anchor="edit-depot-name-input"]',
        radius: '[data-test-anchor="edit-depot-radius-input"]',
      },
      selects: {
        address: '.edit-depot__geo-suggest',
        timeZone: '.edit-depot .select_timezone',
      },
      checkbox: {
        allowEditRoute: '.edit-depot__checkbox',
      },
      map: {
        container: '[data-test-anchor="edit-depot-map"]',
        placemark: '[data-test-anchor="edit-depot-map"] ymaps[class*=placemark-overlay] svg',
        events: '[data-test-anchor="edit-depot-map"] ymaps[class*=events-pane]',
        ground: '[data-test-anchor="edit-depot-map"] ymaps[class*=ground-pane]',
        zone: '[data-test-anchor="edit-depot-map"] ymaps[class*=graphics-canvas] canvas',
        zoom: {
          plus: '[data-test-anchor="edit-depot-map"] ymaps[class*=zoom__plus]',
          minus: '[data-test-anchor="edit-depot-map"] ymaps[class*=zoom__minus]',
          runner: '[data-test-anchor="edit-depot-map"] ymaps[class*=zoom__runner]',
          scale: '[data-test-anchor="edit-depot-map"] ymaps[class*=zoom__scale]',
        },
      },
      dropdownOption: '.dropdown__option',
      geocodingSuggestOption: '.geo-coding-suggest__address__option',
      depotOption: '[data-test-anchor="depots-setting-item-option"]',
    },
  },
  footer: {
    copyrightLink: '.footer .footer__copyright a',
    errorControl: '.footer .errors-toggle',
    errorEmitter: '.footer .error-emitter',
  },
  errorEmitter: {
    dropdown: '.error-emitter .error-emitter__dropdown',
    emitButton: '.error-emitter .error-emitter__emit',
    dropdownOptions: {
      vanilaJs: '.error-emitter__dropdown option[value="vanila-js"]',
      react: '.error-emitter__dropdown option[value="react"]',
      requestClient: '.error-emitter__dropdown option[value="request-client"]',
      requestServer: '.error-emitter__dropdown option[value="request-server"]',
      sagaUncatched: '.error-emitter__dropdown option[value="saga-uncatched"]',
      sagaCatched: '.error-emitter__dropdown option[value="saga-catched"]',
      selector: '.error-emitter__dropdown option[value="selector"]',
      action: '.error-emitter__dropdown option[value="action"]',
      reducerTrigeredSaga: '.error-emitter__dropdown option[value="reducer-trigered-saga"]',
    },
  },
  content: {
    usersCourier: {
      addUser: {
        textarea: '.users__add textarea',
        submit: '.users__add button',
      },
      list: {
        courierItem: '.users__search .users__item',
        courierName: '.users__search .users__item .users__col_name',
        courierRemove: '.users__search .users__item .users__col_delete button',
      },
    },
    mvrp: {
      start: '[data-test-anchor="start-mvrp"]',
      startNewPlanning: '[data-test-anchor="start-new-planning"]',
      fileInput: '[data-test-anchor="file-input-in-start-screen"]',
      routes: {
        firstRow: '.solver-routes .solver-routes__route:nth-child(1) .react-grid-Row',
        firstRowSomeVisibleCell:
          '.solver-routes .solver-routes__route:nth-child(1) .react-grid-Row .react-grid-Cell:nth-child(4)',
      },
      activeRoute: {
        headerSomeVisibleCell:
          '.solver-active-route .react-grid-Header div.react-grid-HeaderCell:nth-child(8)',
        firstOrderRow:
          '.solver-active-route .solver-active-route__order:nth-child(1) .react-grid-Row',
        firstOrderRowSomeVisibleCell:
          '.solver-active-route .solver-active-route__order:nth-child(2) .react-grid-Row .react-grid-Cell:nth-child(7)',
      },
      startPlanningButton: '[data-test-anchor="plan-routes-button"]',
      solverViewLoaded: '.solver.solver_loaded',
      export: {
        exportModalCloseButton: '.export-modal [aria-label="Закрыть"]',
        exportButtonOpenModal: '.solver-header .solver-header__solve',
        headerButtonNewPlanning: '.solver-header .solver-header__new',
        exportButtonMonitoring: '[data-test-anchor="export-task-button-with-monitoring"]',
        exportMonitoringPrepare: {
          view: '.export-monitoring-prepare',
          statePrepareIcon: '.export-monitoring-prepare__state-icon',
          stateSuccessText:
            '.export-monitoring-prepare__state-message.export-monitoring-prepare__state-message_state_success',
          routesExistWarnings:
            '.export-monitoring-warning.export-monitoring-prepare__routes-exist-warning',
          routesExistWarningsButtons:
            '.export-monitoring-warning .export-monitoring-warning__actions button',
          warningTitle: '.export-monitoring-warning .export-monitoring-warning__title',
          exportSuccess: '.export-monitoring-prepare__export-success',
          actionUploadMonitoringButton: '.export-monitoring-prepare__actions',
          toMonitoringButton:
            '.export-monitoring-prepare__export-success ~ .export-monitoring-prepare__actions button',
        },
      },
    },
    import: {
      tabs: {
        map: '[data-test-anchor="import-tab-map"]',
        vehicles: '[data-test-anchor="import-tab-vehicles"]',
        depots: '[data-test-anchor="import-tab-depots"]',
        errorIcon: '.title-icon_error',
        activeIcon: '.planning-header-tab__icon_active',
        tabContent: '.import-planning__active-tab',
      },
      orders: {
        table: '',
      },
      map: {
        mapContainer: '.import-map__map-container',
        sidebarElementHead: '.geo-coding-section__head',
        getSidebarItem: (id: string) =>
          `.geo-coding-bar .geo-coding-match__point[data-test-anchor=point-${id}]`,
        activeSidebarItemModifier: 'geo-coding-match__point_selected',
        infoPanel: '.geo-coding-panel',
        infoPanelClose: '.geo-coding-panel__close',
        addressInput: '.geo-coding-suggest__address__input input',
        placemark: 'ymaps[class*=placemark-overlay] svg',
        anyPoint: 'ymaps[class*=placemark-overlay] svg',
        selectedPoint: 'ymaps[class*=--marker] img[data-test-anchor^=geocoding-selected_pin]',
        eventsPane: 'ymaps[class*=events-pane]',
        yellowSVG: '#eec500',
        greenSVG: '#37BE00',
        depotSVG: '#1d99fe',
      },
      notifications: {
        body: '.import-planning__active-tab .notification__body',
        actionButton: '.import-planning__active-tab .notification__footer button',
        list: '.import-planning__active-tab .notifications__list-render',
        listElement: '.import-planning__active-tab .notification',
        activeNotification: '.import-planning__active-tab .notification_active',
      },
      fileInput: '[data-test-anchor="file-input-in-planning"]',
      dnd: '[data-test-anchor="import-planning-dnd"]',
      useVehiclesSource: '[data-test-anchor="use-vehicles-source"]',
      vehiclesRefBookTable: '[data-test-anchor="vehicles-ref-book-table"]',
    },
    dashboard: {
      view: '.dashboard.dashboard_loaded',
      dayTitle: '.dashboard-orders .text-date-picker span',
      dayOrderNumber: '.dashboard .dashboard-orders__title-orders',
      dayStartedRoutesNumber: '.dashboard span.dashboard-couriers__title-started-count',
      dayTotalRoutesNumber: '.dashboard span.dashboard-couriers__title-total-count',
      importRoutes: 'button[data-test-anchor="dashboard-import-routes"]',
      moreOptionsDropdown: {
        button: 'button[data-test-anchor="more-route-options-button"]',
        options: {
          createRoute: '[data-test-anchor="create-route"]',
          deleteRoutes: '[data-test-anchor="delete-routes"]',
        },
      },
      couriers: {
        firstRoute:
          '.dashboard-couriers__table .dashboard-couriers__table-row:nth-child(2) .dashboard-couriers__courier-name-link',
        secondRoute:
          '.dashboard-couriers__table .dashboard-couriers__table-row:nth-child(3) .dashboard-couriers__route-name',
        firstRouteFirstOrder:
          '.dashboard-couriers__table .dashboard-couriers__table-row:nth-child(2) .dashboard-couriers__nodes-cell button:nth-child(1)',
        sort: {
          activeSnippet: '.dashboard-couriers-sort .dashboard-couriers-sort__item_active',
          byName: '.dashboard-couriers-sort .dashboard-couriers-sort__item:nth-child(1)',
          byLate: '.dashboard-couriers-sort .dashboard-couriers-sort__item:nth-child(2)',
          byFinished: '.dashboard-couriers-sort .dashboard-couriers-sort__item:nth-child(3)',
          byRoutingMode: '.dashboard-couriers-sort .dashboard-couriers-sort__item:nth-child(4)',
          byCourierPositionState:
            '.dashboard-couriers-sort .dashboard-couriers-sort__item:nth-child(5)',
        },
        table: {
          orders: {
            root: '.dashboard-couriers__nodes',
            menu: '.dashboard-couriers-button_dropdown',
            menuOption: '.dropdown-button__option',
            anyOrder: '.dashboard-couriers-button:not(.dashboard-couriers-button_dropdown)',
            anyClickable: 'button.dashboard-couriers-button_isClickable',
            finishedLate:
              'button[data-test-anchor~="dashboard-couriers-order-button_category_untimely-finished"]',
            cancelled: '*[data-test-anchor~="dashboard-couriers-order-button_category_cancelled"]',
            late: 'button[data-test-anchor~="dashboard-couriers-order-button_category_late"]',
            finished: '*[data-test-anchor~="dashboard-couriers-order-button_category_finished"]',
            sequenced: '*[data-test-anchor~="dashboard-couriers-order-button_category_sequenced"]',
            dropdown: '*[data-test-anchor~="dashboard-couriers-order-dropdown"]',
            addOrderButton:
              '.dropdown-button__options-list_is-open div[data-test-anchor="dashboard-couriers-add-order-button"]',
          },
          view: '.dashboard-couriers',
          todayRow: `a[title=${routeNumberRecord.TODAY}]`,
          twoAdditionalOrderRow: `a[title=${routeNumberRecord.TWO_ADDITIONAL_ORDERS_TODAY}]`,
          row: '.dashboard-couriers__table .dashboard-couriers__table-row',
          courierLink:
            '.dashboard-couriers__table .dashboard-couriers__table-row:nth-child(2) a.dashboard-couriers__courier-name-link',
          courierNames: '.dashboard-couriers__table-row a.dashboard-couriers__courier-name-link',
          courierNameContainer: '.dashboard-couriers__courier-name',
          routeName: '.dashboard-couriers__route-name',
          courierOrders: '.dashboard-couriers__table-row .dashboard-couriers__orders',
        },
      },
      orders: {
        modal: {
          newOrderView: 'div[data-test-anchor="order-details-create-view"]',
          showTable: 'div[data-test-anchor="order-details-show-table"]',
          editTable: 'div[data-test-anchor="order-details-edit-table"]',
          removeConfirmWindow: 'div[data-test-anchor="order-details-remove-confirm-window"]',
          courierNumber: '.order-details__data-cell.order-details__data-cell_key_courier_name',
          removeButton: 'button[data-test-anchor="order-details-action-remove"]',
          removeConfirmButton: 'button[data-test-anchor="order-details-action-remove-confirm"]',
          removeCancelButton: 'button[data-test-anchor="order-details-action-remove-cancel"]',
          saveButton: 'button[data-test-anchor="order-details-action-save"]',
          cancelButton: 'button[data-test-anchor="order-details-action-cancel"]',
          chatButton: '.courier-chat-button__container button',
          createButton: 'button[data-test-anchor="order-details-action-create"]',
          editInput: '.order-details__data-cell input',
          orderNumberInput: '.order-details__data-cell_key_number input',
          addressInput: '.order-details__data-cell_key_address input[type="text"]',
          addressSuggestion:
            '.order-details__data-cell_key_address .geo-coding-suggest__address__option',
          map: '.order-details__map .map',
        },
        chart: {
          view: '.dashboard-orders__chart',
          all: '.dashboard-orders__chart .dashboard-orders__chart-col',
          cancelled: '.dashboard-orders__chart .dashboard-orders__chart-col_type_cancelled',
          finishedLate:
            '.dashboard-orders__chart .dashboard-orders__chart-col_type_untimely-finished',
          finished: '.dashboard-orders__chart .dashboard-orders__chart-col_type_finished',
          sequenced: '.dashboard-orders__chart .dashboard-orders__chart-col_type_sequenced',
          late: '.dashboard-orders__chart .dashboard-orders__chart-col_type_late',
          unsequenced: '.dashboard-orders__chart .dashboard-orders__chart-col_type_disabled',
        },
        legend: {
          cancelled: '.dashboard-orders__legend .dashboard-orders__legend-col_type_cancelled',
          finishedLate:
            '.dashboard-orders__legend .dashboard-orders__legend-col_type_untimely-finished',
          finished: '.dashboard-orders__legend .dashboard-orders__legend-col_type_finished',
          sequenced: '.dashboard-orders__legend .dashboard-orders__legend-col_type_sequenced',
          late: '.dashboard-orders__legend .dashboard-orders__legend-col_type_late',
          unsequenced: '.dashboard-orders__legend .dashboard-orders__legend-col_type_disabled',
        },
        legendValue: '.dashboard-orders__legend .dashboard-orders__legend-col-header',
      },
    },
    orders: {
      view: '.orders',
      tableLoaded: '.orders__table.orders__table_loaded',
      tableRows: '.react-grid-Row',
      tableRow: (num: number) => `.orders__table_loaded .react-grid-Row:nth-child(${num})`,
      tableCell: '.react-grid-Cell',
      firstTableRow: '.react-grid-Row:first-child',
      firstOrder: '.react-grid-Row:first-child .react-grid-Cell:first-child',
      table: 'div.react-grid-Container',
      statusCell: '.react-grid-Row .react-grid-Cell:nth-child(5)',
      lateCell: '.react-grid-Row .react-grid-Cell:nth-child(11)',
      dateFilter: {
        presetYesterday: '[data-test-anchor="dateRangeFilter_yesterday"]',
        presetToday: '[data-test-anchor="dateRangeFilter_today"]',
        presetTomorrow: '[data-test-anchor="dateRangeFilter_tomorrow"]',
        selectedPreset: '.date-presets__preset.date-presets__preset_selected',
        input: '.date-filter .react-datepicker__input-container .bb-ui-picker__text',
        days: {
          yesterday: 'button.date-presets__preset:first-child',
        },
      },
      columnSettings: {
        opener: '.orders__toolbox .column-settings-button',
        clearButton: '.column-settings-overlay [data-test-anchor="clear-button"]',
        checkbox: (key: string) => `.setting-row[data-test-anchor=${key}]`,
        dndWrap: '.column-settings-overlay .dnd-wrap',
      },
      tableHeader: {
        field: (key: string) => `[data-test-anchor="column-header--${key}"]`,
        anyField: '.map-data-table__title-block',
        sortIcon: '.map-data-table__sort-icon',
        dataGridDescSelector: '.react-grid-HeaderCell-sortable--descending',
        dataGridAscSelector: '.react-grid-HeaderCell-sortable--ascending',
        dataGridResize: '.react-grid-HeaderCell__draggable',
        container: '.react-grid-HeaderCell',
        headerTitle: '.map-data-table__header-title',
      },
      filter: {
        input: '.filter input',
        tag: '.filter .react-tagsinput-tag',
        closeButton: '.filter .react-tagsinput-remove',
      },
      message: '.orders .stub__content',
      downloadBtn: '[data-test-anchor="download-btn"]',
    },
    courier: {
      view: '.courier',
      name: '.courier__name',
      chatButton: '.courier-chat-button__container button',
      ordersTable: '.data-table',
      addOrderButton: '[data-test-anchor="add-order-button"]',
      changeOrderButton: '[data-test-anchor="change-order-button"]',
      optimizeRouteButton: '[data-test-anchor="optimize-route-button"]',
      loader: 'div[data-test-anchor="courier-route-loading"]',
      date: {
        root: '.courier__date',
        presetYesterday: '[data-test-anchor="dateRangeFilter_yesterday"]',
        presetToday: '[data-test-anchor="dateRangeFilter_today"]',
        presetTomorrow: '[data-test-anchor="dateRangeFilter_tomorrow"]',
        input: '.react-datepicker__input-container .bb-ui-picker__text',
      },
      details: {
        root: '.courier-details',
        label: '.courier-details__label',
        value: '.courier-details__value',
        smsTumbler: '.tumbler',
      },
      route: {
        map: {
          common: {
            details: {
              root: '.courier-map__route-details',
              label: '.courier-map__label',
              value: '.courier-map__value',
              routeBuiltValue: 'div[data-test-anchor="courier-map-details-route-built-value"]',
              coordsSentValue: 'div[data-test-anchor="courier-map-details-coords-sent-value"]',
              gpsTrackerValue: 'strong[data-test-anchor="courier-map-details-gps-tracker-value"]',
            },
            container: '.courier-route__map',
            map: '.map',
            slider: '.courier-map__time-slider',
            sliderHandle: '.rc-slider-handle',
            prevCourierPositionButton: '.courier-map__prev-step',
            nextCourierPositionButton: '.courier-map__next-step',
            time: '.courier-map__time-container',
            courierButton: '.courier-map__courier-button',
            resizer: '.resizer',
          },
          yandex: {
            places: 'ymaps [class*=places-pane]',
            placemark: 'ymaps[class*=placemark]',
            eventsLayer: 'ymaps[class*=events-pane]',
            trackLayer: 'ymaps[class*=node-pane]',
            routeTrackCanvas: '.ymaps-2-1-79-areas-pane .ymaps-2-1-79-graphics-canvas canvas',
            depotIcon: '[data-test-anchor="depot-icon"]',
            rulerIcon: 'ymaps [class*=float-button-icon_icon_ruler]',
            zoom: 'ymaps[class*=zoom]',
            zoomPlus: 'ymaps[class*=zoom__plus] ymaps[class*=zoom__icon]',
            zoomMinus: 'ymaps[class*=zoom__minus] ymaps[class*=zoom__icon]',
            courierPosition: 'ymaps [class*=image]',
            activeOrder: '[data-test-anchor="order-active-pretty"]',
            activeSelectedOrder: '[data-test-anchor="order-active-selected-pretty"]',
            tooltip: 'ymaps[class*=balloon__content]',
            tooltipClose: 'ymaps[class*=balloon__close-button]',
            tooltipPoint: 'ymaps[class*=balloon-overlay]',
            orderPinTooltip: 'ymaps[class*=balloon__content]',
            orderPinTooltipTitle: '.yandex-balloon-title',
            getOrderPinTooltipTableRow: (rowNumber: number) =>
              `.yandex-balloon-content-table .yandex-balloon-content-table__row:nth-child(${rowNumber})`,
            orderPinTooltipClose: 'ymaps[class*=balloon__close-button]',
            trafficButton: 'ymaps[class*=traffic]',
            scaleLine: 'ymaps[class*=scaleline__label]',
          },
          google: {
            zoomPlus: (lang: 'es' | 'eng') =>
              `button[aria-label="${lang === 'es' ? 'Ampliar' : 'Zoom in'}"]`,
            zoomMinus: (lang: 'es' | 'eng') =>
              `button[aria-label="${lang === 'es' ? 'Reducir' : 'Zoom out'}"]`,
            tooltip: '[role="dialog"].gm-style-iw',
            tooltipClose: (lang: 'es' | 'eng') =>
              `button[aria-label="${lang === 'es' ? 'Cerrar' : 'Close'}"]`,
            tooltipPoint: '.gm-style-iw-a',
          },
        },
        changeRouteDropdown: {
          button: '.header-route__right-block button',
          options: {
            changeCourierOnCourier: '[data-test-anchor="change-courier-on-courier"]',
            moveOrders: '[data-test-anchor="move-orders"]',
            changeCourierOnTracker: '[data-test-anchor="change-courier-on-tracker"]',
            removeRoute: '[data-test-anchor="remove route"]',
          },
        },
        selector: {
          root: '.route-selector__routes-list',
          routeButton: '.route-selector__route-button',
          activeRouteButton: '.route-selector__route-button_active',
          routeName: '.route-selector__route-name',
        },
        table: '.courier-route-table',
        tableHeader: (field: string) => `.react-grid-HeaderCell.columnName_${field}`,
        noRoutes: '.courier__empty-routes',
        tableRow: '.courier-route-table .data-table__row',
        getTableRow: (rowNumber: number) =>
          `.courier-route-table .data-table__row:nth-child(${rowNumber})`,
        tableCellOrderNumber: '.columnName_number',
        tableSettings: '.courier-route__table-settings',
        tableActions: '.courier-route-table__actions',
        tableColumns: {
          number: '.react-grid-HeaderCell.columnName_number',
          status: '.react-grid-HeaderCell.columnName_status',
          timeWindow: '.react-grid-HeaderCell.columnName_time_window',
          arrivalTime: '.react-grid-HeaderCell.columnName_arrival_time',
          failedTimeWindow: '.react-grid-HeaderCell.columnName_failed_time_window',
          serviceDuration: '.react-grid-HeaderCell.columnName_service_duration_s',
          sharedServiceDuration: '.react-grid-HeaderCell.columnName_shared_service_duration_s',
          address: '.react-grid-HeaderCell.columnName_address',
          customerName: '.react-grid-HeaderCell.columnName_customer_name',
          comments: '.react-grid-HeaderCell.columnName_comments',
        },
      },
    },
    couriers: {
      title: '[data-test-anchor="monitoring_couriers_title"]',
      paranja: '.app__wrapper .paranja[data-test-anchor="courier-loader"]',
      view: '.courier',
      loaded: '.courier .courier-route_loaded',
      backButton: '.courier .courier__back-link',
      list: '.couriers-list',
      hint: '.couriers-list__info',
      tableRows: '.couriers-list .couriers-line__item',
      searchContainer: '.couriers-list__search',
      search: {
        container: '.couriers-list__search',
        line: '.couriers-line__item',
        lineLink: '.couriers-line__details',
        lineName: '.couriers-line__details-name',
        lineNumber: '.couriers-line__details-number',
        lineRemove: '.couriers-line__remove .modal-footer-button',
        lineSms: '.couriers-line__sms input',
        input: '.couriers-list__list .textinput__control',
        cancel: '.search > .textinput > .icon',
        message: '[data-test-anchor="nothing-found-search-message"]',
        tumbler: '.couriers-line__sms .tumbler',
        checkedTumbler: '.tumbler_checked_yes',
      },
      newCourier: {
        title: '[data-test-anchor="monitoring_couriers_addCourierTitle"]',
        phone: '#new-courier-phone',
        number: '#new-courier-number',
        submitButton: '#add-new-courier-submit',
        phoneCross: '[data-test-anchor="new-courier-phone"] .ui-text-input__right-icon',
        numberCross: '[data-test-anchor="new-courier-number"] .ui-text-input__right-icon',
      },
      removeCourier: {
        dialogContainer: '#react-aria-modal-dialog',
        submitButton: '#react-aria-modal-dialog .modal-footer-button_danger',
      },
      singleCourier: {
        view: '.courier',
        courierName: '.courier .courier__name',
        orderRow: '.courier .react-grid-Canvas .react-grid-Row',
        courierDetails: {
          loginValue: '.courier-details .courier-details__value:nth-child(2)',
          phoneValue: '.courier-details .courier-details__value:nth-child(4)',
          smsTumbler: {
            any: '.courier-details .courier-details__value .tumbler__box button.tumbler__button',
            on: '.courier-details .courier-details__value .tumbler__box button[aria-pressed=true]',
            off: '.courier-details .courier-details__value .tumbler__box button[aria-pressed=false]',
          },
          info: '.courier-details .courier-details__info',
          settingsLink: '.courier-details .courier-details__info a',
          emptyRoutes: '.courier__empty-routes',
        },
        dateFilter: {
          block: '.courier .date-filter__group',
        },
        routeActions: {
          dropdownButton: '.dropdown-button__container button',
          moveOnTraker: '[data-test-anchor="change-courier-on-tracker"]',
          removeRoute: '[data-test-anchor="remove route"]',
        },
        resizer: '.courier .resizer__control',
        routesList: {
          active: '.route-selector__routes-list .route-selector__route-button_active',
          second: `.route-selector__routes-list button[data-test-anchor="${routeNumberRecord.TWO_ADDITIONAL_ORDERS_TODAY}"]`,
          info: '.header-route__routes .route-selector__routes-stub',
          emptyRoute: '.courier__empty-routes',
        },
        map: {
          view: '.courier .courier-map ymaps[class$=map]',
        },
      },
      dateFilter: {
        selectedPreset: '.date-presets__preset.date-presets__preset_selected',
        input: '.date-filter .react-datepicker__input-container .bb-ui-picker__text',
      },
    },
    map: {
      view: '.couriers-map-V2',
    },
    depots: {
      view: '.depots-settings',
      header: '.depots-settings__header',
      list: {
        search: '.depots-settings .search input',
        anyDepotItem: '.depots-settings [data-test-anchor="depots-setting-item-option"]',
        createDepotButton: '.depots-settings [data-test-anchor="add-new-depot"]',
      },
      singleDepot: {
        view: '.edit-depot',
        viewLoaded: '.edit-depot.edit-depot_loaded',
        back: '.edit-depot__back',
      },
    },
    settings: {
      view: '.settings',
    },
    referenceBook: {
      vehicles: {
        title: '.vehicles-reference-book__title',
        addVehicle: '[data-test-anchor="add-vehicle"]',
        downloadXLSButton: '.vehicles-reference-book__action.modal-footer-button',
        vehicleFormModeSwitcher: '[data-test-anchor="vehicle-form-mode-switcher"]',
        table: '.vehicles-reference-book__table',
        tableSettingsButton: '.column-settings-button',
        tableRow: '.vehicles-reference-book__table .data-table__row',
        tableHeaders: '.styled-data-table__header-title',
        tableRows: '.react-grid-Row',
        tableCell: '.react-grid-Cell',
        tableBody: '.react-grid-Viewport',
        tableSize: '.styled-data-table__footer',
        columnSettings: {
          opener: '.column-settings-button',
          clearButton: '[data-test-anchor="clear-button"]',
          checkbox: (key: string) => `.setting-row[data-test-anchor=${key}]`,
          dndWrap: '.column-settings-overlay .dnd-wrap',
        },
        tableHeader: {
          field: (key: string) => `.react-grid-HeaderCell.columnName_${key}`,
          anyField: '.react-grid-HeaderCell',
          sortIcon: '.react-grid-HeaderCell__draggable',
          dataGridDescSelector: '.react-grid-HeaderCell-sortable--descending',
          dataGridAscSelector: '.react-grid-HeaderCell-sortable--ascending',
          dataGridResize: '.react-grid-HeaderCell__draggable',
          container: '.react-grid-HeaderCell',
        },
        tableHead: '.react-grid-HeaderRow',
        tableColumn: (key: string) => `.columnName_${key}`,
        modal: {
          editVehicleTitle: '.edit-vehicle-modal__header__title',
          closerModal: '.bb-ui-close-button',
          submitButton: '[data-test-anchor="submit-vehicle-form"]',
          deleteButton: '.edit-vehicle-modal__delete-button',
          dialogRemove: '.dialog__content_size_small',
          dialogRemoveVehicle: {
            dialogRemoveTitle: '.dialog__content_size_small .dialog__title',
            dialogRemoveSubtitle: '.dialog__content_size_small .dialog__subtitle',
            dialogRemoveCloser: '.dialog__content_size_small .bb-ui-close-button',
            dialogRemoveCancelButton: '#dialog-cancel-button',
            dialogRemoveButton: '#dialog-remove-submit',
          },
          inputsHaveError: '.ui-text-input_hasError .textinput__box',
          errorTooltip: '.form-control__error-tooltip',
          closerErrorTooltip: '.input-tooltip__closer',
          extended: {
            nameInput: '[data-test-anchor="vehicle-name-input"]',
            numberInput: '[data-test-anchor="vehicle-number-input"]',
            capacityWeightInput: '[data-test-anchor="vehicle-capacityWeight-input"]',
            dimensionsAccordionButton: '[data-test-anchor="dimensions-accordion-button"]',
            courierAccordionButton: '[data-test-anchor="courier-accordion-button"]',
            couriersParameters: {
              parametersCourierInputsLabel:
                '[data-test-anchor="parameters-courier-inputs"] .form-control__label',
              startOfShiftLabel:
                '[data-test-anchor="start-of-shift-drop-down"] .form-control__label',
              startOfShiftDropdown:
                '[data-test-anchor="start-of-shift-drop-down"] .form-control__input',
              finishOfShiftLabel:
                '[data-test-anchor="finish-of-shift-drop-down"] .form-control__label',
              finishOfShiftDropdown:
                '[data-test-anchor="finish-of-shift-drop-down"] .form-control__input',
              selectStartFinishShift: '.css-kj6f9i-menu.select-input__menu',
              selectAdressGarage: '.geo-coding-suggest__option',
              maxRunsInput: '.form-control__input [data-test-anchor="vehicle-maxRuns-input"]',
              imeiInput: '.form-control__input [data-test-anchor="vehicle-imei-input"]',
              geocodingAdressGarageInput: '.geo-coding-suggest__address__input',
              geocodingAdressGarageLabel: '.start-finish-locations__label',
            },
            capacityAccordionButton: '[data-test-anchor="capacity-accordion-button"]',
            shiftsAccordionButton: '[data-test-anchor="shifts-accordion-button"]',
            shifts: {
              shiftTimeStart:
                'div.extended-vehicle-form-shifts-field__field_start input.textinput__control',
              shiftTimeEnd:
                'div.extended-vehicle-form-shifts-field__field_end input.textinput__control',
            },
            costsAccordionButton: '[data-test-anchor="costs-accordion-button"]',
            costs: {
              costKmInput: '[data-test-anchor="cost-km-input"]',
              costHourInput: '[data-test-anchor="cost-hour-input"]',
              costFixedInput: '[data-test-anchor="cost-fixed-input"]',
            },
          },
          simple: {
            nameInput: '[data-test-anchor="simple-modal-name-input"]',
            nameInputLabel: '.simple-vehicle-form__field_name .field-label',
            numberInput: '[data-test-anchor="simple-modal-number-input"]',
          },
        },
        emptyMessage: {
          noVehicleIcon: '.vehicles-reference-book__empty-message__icon',
          noVehicleTitle: '.vehicles-reference-book__empty-message__title',
          noVehicleDescription: '.vehicles-reference-book__empty-message__description',
        },
      },
      zones: {
        table: '[data-test-anchor="zones-table"]',
        tableRow: {
          zoneName: '[data-test-anchor="zones-table-row__zone-name"]',
        },
        deleteZone: '[data-test-anchor="delete-zone"]',
        cancelEditing: '[data-test-anchor="cancel-zone-editing"]',
        zoneDataListHead: '[data-test-anchor="zone-data-list-head"]',
        zoneDataListBody: '[data-test-anchor="zone-data-list-body"]',
        zoneDataListEditBtn: '[data-test-anchor="zone-data-list-edit-btn"]',
        zoneDataListModal: '.zone-data-list-modal',
        zoneDataListModalSaveBtn: '[data-test-anchor="zone-data-list-modal-save-btn"]',
        zoneDataListModalCancelBtn: '[data-test-anchor="zone-data-list-modal-cancel-btn"]',
      },
    },
  },
  table: {
    checkboxCheckAll: '[data-test-anchor="checkbox-check-all"]',
  },
  modal: {
    paranja: '.app__wrapper .paranja',
    closeButton: '.simple-modal__header button',
    orderPopup: {
      view: 'div[role="dialog"] .order-details__modal',
      editTitle: 'div[data-test-anchor="title-order-new"]',
      loader: 'div[data-test-anchor="order-request-loading"]',
      closeButton: '.order-details__modal .bb-ui-close-button',
      createButton: 'button.order-details__button[type=submit]',
      backdrop: '.order-details__backdrop',
      title:
        '.order-details__modal .order-details__title div[data-test-anchor="title-order-number"]',
      numberRow: '.order-details__data-cell.order-details__data-cell_key_number',
      clientRow: '.order-details__data-cell.order-details__data-cell_key_customer_name',
      statusRow: '.order-details__data-cell.order-details__data-cell_key_status',
      dateRow: '.order-details__data-cell.order-details__data-cell_key_route_date',
      shipmentIntervalRow: '.order-details__data-cell.order-details__data-cell_key_time_window',
      weightRow: '.order-details__data-cell.order-details__data-cell_key_weight',
      serviceTimeRow: '.order-details__data-cell.order-details__data-cell_key_service_duration_s',
      sharedServiceTimeRow:
        '.order-details__data-cell.order-details__data-cell_key_shared_service_duration_s',
      clientPhoneRow: '.order-details__data-cell.order-details__data-cell_key_phone',
      commentRow: '.order-details__data-cell.order-details__data-cell_key_comments',
      lateRow: '.order-details__data-cell.order-details__data-cell_key_failed_time_window',
      courierNameRow: '.order-details__data-cell.order-details__data-cell_key_courier_name',
      courierNameRowLink: '.order-details__data-cell.order-details__data-cell_key_courier_name a',
      addressRow: '.order-details__data-cell.order-details__data-cell_key_address',
      addressRowLink: '.order-details__data-cell.order-details__data-cell_key_address a',
      deliveredRow: '.order-details__data-cell.order-details__data-cell_key_delivered_at_time',
      confirmedRow: '.order-details__data-cell.order-details__data-cell_key_confirmed_at_time',
      arrivalTimeRow: '.order-details__data-cell.order-details__data-cell_key_arrival_time',
      deliveredRadiusRow:
        '.order-details__data-cell.order-details__data-cell_key_mark_delivered_radius',
      watcher: '.order-details__data-cell.order-details__data-cell_key_companies_names',
      buttonGetTrackLink: '.tracking-link button',
      trackingLink: '.tracking-link__link',
      editFooter: '.order-details__editor',
      editButton: 'button[data-test-anchor="order-details-edit"]',
      removeButton: 'button[data-test-anchor="order-details-action-remove"]',
      map: {
        container: '.order-details__map>div',
        placemark: 'ymaps[class*=placemark-overlay] svg',
        events: '.order-details__map ymaps[class*=events-pane]',
        ground: '.order-details__map ymaps[class*=ground-pane]',
        traffic: '.order-details__map ymaps[class*=float-button_traffic]',
        balloon: {
          view: 'ymaps[class*=balloon-overlay] ymaps[class*=balloon]',
          closeButton:
            'ymaps[class*=balloon-overlay] ymaps[class*=balloon]  ymaps[class*=balloon__close-button]',
        },
        zoom: {
          plus: '.order-details__map ymaps[class*=zoom__plus]',
          minus: '.order-details__map ymaps[class*=zoom__minus]',
          runner: '.order-details__map ymaps[class*=zoom__runner]',
          scale: '.order-details__map ymaps[class*=zoom__scale]',
        },
      },
    },
    errorPopup: {
      view: '.errors-panel',
      heading: '.errors-panel__heading',
      formButton: '.errors-panel__form-button',
      log: 'ul[data-test-anchor="errors-panel-log"]',
      supportButton: 'button[data-test-anchor="errors-panel-support-button"]',
      supportLink: 'a[data-test-anchor="errors-panel-support-link"]',
      helpLink: 'a.errors-panel__help-link',
      closeButton: '.errors-panel .bb-ui-close-button',
      messageTitle: '.error-message__title',
    },

    dialog: {
      title: '.dialog__title',
      submit: '#dialog-remove-submit',
      cancel: '#dialog-cancel-button',
    },

    moveRoute: {
      moveRouteOnTracker: {
        dialog: '#move-route-on-tracker',
      },
      helpLink: '.modal-base__help-link',
      cancel: '.modal-base__cancel-button',
      close: '.modal-base__container .bb-ui-close-button',
    },

    createRoute: {
      root: '.create-route-modal',
      nameField: '.create-route-modal__route-name-field',
      dateField: '.create-route-modal__route-date-field',
      depotField: '.create-route-modal__route-depot-field',
      courierField: '.create-route-modal__route-courier-field',
      modeField: '.create-route-modal__route-mode-field',
      fieldLabel: '.form-control__label',
      fieldInput: '.form-control__input',
      fieldError: '.form-control__error',
      textInput: '.textinput__control',
      createRouteSubmit: '.create-route-modal button[type="submit"]',
      closeButton: '.create-route-modal .bb-ui-close-button',
    },
    transferOnTracker: {
      root: '#move-route-on-tracker',
      title: '.modal-base__title',
      trackerNumberInput: 'input[data-test-anchor="tracker-number"]',
      submitButton: ' .modal-base__submit-group button[type="submit"]',
      cancelButton: '.modal-base__cancel-button',
      helpLink: '.modal-base__help-link',
      closeIcon: '.bb-ui-close-button__icon_theme_default',
    },
    changeRouteCourier: {
      root: '.modal-change-route-courier',
      title: '.modal-change-route-courier .modal-base__title',
      subtitle: '.modal-change-route-courier .modal-base__sub-title',
      searchInput: '.modal-change-route-courier .table-search-wrapper__search-input input',
      searchField: '.modal-change-route-courier .table-search-wrapper__search-input',
      searchFieldClearIcon:
        '.modal-change-route-courier .table-search-wrapper__search-input .ui-text-input__clear-icon',
      couriersTable: {
        row: '.modal-change-route-courier .select-courier-table .data-table__row',
        headCell: '.modal-change-route-courier .select-courier-table  .react-grid-HeaderCell',
        loginHeadCell:
          '.modal-change-route-courier .select-courier-table .react-grid-HeaderCell.columnName_number',
        phoneHeadCell:
          '.modal-change-route-courier .select-courier-table .react-grid-HeaderCell.columnName_phone',
        loginCells:
          '.modal-change-route-courier .select-courier-table .columnName_number.react-grid-Cell',
        phoneCells:
          '.modal-change-route-courier .select-courier-table .columnName_phone.react-grid-Cell',
        phoneHeadCellSortAscending:
          '.modal-change-route-courier .select-courier-table .react-grid-HeaderCell.columnName_phone .react-grid-HeaderCell-sortable.react-grid-HeaderCell-sortable--ascending',
        checkedRadio: '.designed-radio.designed-radio_checked.table-with-options__option-box',
        noDataTitle: '.select-courier-table .select-courier-table__no-data-title',
      },
      submitButton: '.modal-change-route-courier  .modal-base__submit-group button[type="submit"]',
      addNewCourierButton:
        '.modal-change-route-courier .modal-base__submit-group button[data-test-anchor="new-courier-button"]',
      cancelButton: '.modal-change-route-courier .modal-base__cancel-button',
      newCourierNumber: 'input#new-courier-number',
      newCourierPhone: 'input#new-courier-phone',
      newCourierSubmit: 'button[data-test-anchor="new-courier-submit"]',
      scrollbar: '.modal-change-route-courier  .scroll-bar-provider__track-vertical > div',
    },

    helpVideo: {
      popup: '[aria-label="help video"]',
      title: 'div[data-test-anchor="modal-title"]',
      info: 'div[data-test-anchor="modal-help-info"]',
      helpLink: 'a[data-test-anchor="modal-help-link"]',
      video: '[aria-label="help video"] video',
      videoSource: '[aria-label="help video"] video source',
      close: '[aria-label="help video"] .bb-ui-close-button',
      closeButton: '[aria-label="help video"] button[type="reset"]',
      play: 'button[data-test-anchor="video-play-button"]',
    },

    importRoutes: {
      view: '.import-modal__content',
      loader: 'div[data-test-anchor="modal-loader"]',
      tabs: {
        settings: '.planning-setting',
      },
      sidebar: {
        tab: '.import-modal .import-sidebar__tab',
        submitImport: 'button[data-test-anchor="modal-sidebar-submit"]',
        fileInput: 'input[data-test-anchor="modal-sidebar-file-input"]',
      },
      map: {
        ordersHead: '.geo-coding-section__head',
        orderRow: '.geo-coding-match__point',
        panel: {
          container: '.geo-coding-panel',
          column: '.geo-coding-panel__column',
          button: '.geo-coding-panel__button',
          closeButton: '.geo-coding-panel .bb-ui-close-button',
        },
      },
    },
  },
  select: {
    value: '.select-input__single-value',
    placeholder: '.select-input__placeholder',
    optionsList: '.select-input__menu-list',
    option: '.select-input__option',
  },
  suggest: {
    container: '.geo-coding-suggest',
    input: '.geo-coding-suggest__address__input input',
    clear: '.geo-coding-suggest__address__clear-indicator',
    list: '.geo-coding-suggest__address__menu-list',
    listOptions: '.geo-coding-suggest__address__option',
    noOptions: '.geo-coding-suggest__address__menu-notice--no-options',
  },
  datePicker: {
    datePickerPopup: '.react-datepicker__tab-loop',
    labels: {
      yesterday: 'div.date-filter .date-presets button:first-child',
      tomorrow: 'div.date-filter .date-presets button:last-child',
    },
    input: 'div.react-datepicker__input-container',
    openButton: 'div.react-datepicker__input-container button.bb-ui-picker',
    daysGrid: {
      view: 'div.date-filter .react-datepicker',
      currentMonthTitle: '.react-datepicker .react-datepicker__current-month',
      previousMonthButton: 'div.react-datepicker .react-datepicker__navigation--previous',
      nextMonthButton: 'div.react-datepicker .react-datepicker__navigation--next',
      days: {
        '15': '.react-datepicker__day.react-datepicker__day--015',
        today: '.react-datepicker__day.react-datepicker__day--today',
        superFirst:
          '.react-datepicker .react-datepicker__week:first-child .react-datepicker__day:first-child',
        superLast:
          '.react-datepicker .react-datepicker__week:last-child .react-datepicker__day:last-child',
      },
    },
  },
  passport: {
    form: '.passport-Domik-Form',
    loginInput: 'input[name="login"]',
    passwordInput: 'input[name="passwd"]',
    shortSessionCheckbox: '.passport-Checkbox',
    submitButton: '.passport-Button:first-child',
    ignorePhoneButton: '.request-phone_back-button button',
    ignoreSocialButton: '.request-social_back-button button',
  },
  managers: {
    search: '.textinput__control',
    emailInput: '.textarea__input',
    searchItem: '.users__item',
    email: '.users__col_name',
    clearIcon: '.icon',
    retryButton: '.users__col.users__col_retry.users__col_show-on-hover',
  },
  tracker: {
    map: '#map',
    mapLegend: {
      title: '.map-legend__title',
      description: '.map-legend__description',
    },
    order: {
      warning: '.order .order__item .warning',
    },
    history: {
      view: '.card.card_name_history .history',
      items: '.card.card_name_history .history .history__item',
    },
    detailsButton: '.order .order__item:last-child button',
  },
  courierQualityReport: {
    searchField: '.deliveries .filter input',
    datePickerStart: '.date-range-filter .date-range-filter__group_start',
    datePickerEnd: '.date-range-filter .date-range-filter__group_end',
    datePickerPresets: {
      dayBeforeYesterday: 'button[data-test-anchor="dateRangeFilter_dayBeforeYesterday"]',
      yesterday: 'button[data-test-anchor="dateRangeFilter_yesterday"]',
      today: 'button[data-test-anchor="dateRangeFilter_today"]',
    },
    datePickerButton: '.date-range-filter__button-wrap button',
    downloadXLSXButton: '[data-test-anchor="download-btn"]',
    table: '.deliveries__table',
    tableRow: '.deliveries__table  .data-table__row',
    preloader: '.courier-quality-table-preloader',
    noData: '.stub__content',
    tableHeaders: '.widget-HeaderCell__value',
    tableRows: '.react-grid-Row',
    tableCell: '.react-grid-Cell',
    tableBody: '.react-grid-Viewport',
    tableCellRoutingMode: '.columnName_route_routing_mode',
    columnSettings: {
      opener: '.deliveries__toolbox .column-settings-button',
      clearButton: '.column-settings-overlay [data-test-anchor="clear-button"]',
      checkbox: (key: string) => `.setting-row[data-test-anchor=${key}]`,
      dndWrap: '.column-settings-overlay .dnd-wrap',
    },
    tableHeader: {
      field: (key: string) => `.columnName_${key}`,
      anyField: '.react-grid-HeaderCell',
      sortIcon: '.react-grid-HeaderCell__draggable',
      dataGridDescSelector: '.react-grid-HeaderCell-sortable--descending',
      dataGridAscSelector: '.react-grid-HeaderCell-sortable--ascending',
      dataGridResize: '.react-grid-HeaderCell__draggable',
      container: '.react-grid-HeaderCell',
    },
    tableHead: '.react-grid-HeaderRow',
    tableColumn: (key: string) => `.columnName_${key}`,
  },
} as const;

export default selectors;
