#!/usr/bin/python
import unittest;
import base64;
import wkb;

class TestPrepareWkbForGeolib (unittest.TestCase):

    def testPoint(self):
        prepareResult = wkb.prepareWkbForGeolib(base64.b64decode('AAAAAAFAGAAAAAAAAEAkAAAAAAAA'));
        self.assertEqual(prepareResult.getTypeName(), 'Point');

    def testLineString(self):
        prepareResult = wkb.prepareWkbForGeolib(base64.b64decode('AIAAAAIAAAAJQUl/EnPhiwhBS46kgLKoQQAAAAAAAAAAQUmMVIC70WpBS3z2/+duuQAAAAAAAAAAQUmTlgAGkutBS3jCZWsZ/wAAAAAAAAAAQUmd1XWfXO9BS3V42FdXyAAAAAAAAAAAQUm98af7RDtBS3Ksf3G0DgAAAAAAAAAAQUnKqaV9qXdBS2vgv15FfQAAAAAAAAAAQUnTHtfPdHVBS2yQWgywtQAAAAAAAAAAQUncS3Hjm8ZBS2NIWUnliwAAAAAAAAAAQUnsYLJbQnlBS1oFpZyYLAAAAAAAAAAA'));
        self.assertEqual(prepareResult.getTypeName(), 'LineString');

    def testMultiLineString(self):
        prepareResult = wkb.prepareWkbForGeolib(base64.b64decode('AIAAAAUAAAACAIAAAAIAAAAIQUxmjFwJnYJBYGFFX+e4vAAAAAAAAAAAQUxmPkChgJhBYGE3//JXIgAAAAAAAAAAQUxmAJisYPhBYGE4GXSrTgAAAAAAAAAAQUxk9lrofY5BYGFm2a+tWAAAAAAAAAAAQUxj1v57xndBYGGBBknKdwAAAAAAAAAAQUxi4AJR0TlBYGF8QvQTLwAAAAAAAAAAQUxhlxwdLwJBYGGHGbSWrQAAAAAAAAAAQUxg3c0JiqdBYGGCQAzVvwAAAAAAAAAAAAAAAAIAAAADQUxqnUyjcExBYGJbSWn2fEFMawLkARX5QWBiLMzIU31BTGsVNIL4w0FgYh68z60g'));
        self.assertEqual(prepareResult.getTypeName(), 'MultiLineString');

    def testPolygon(self):
        prepareResult = wkb.prepareWkbForGeolib(base64.b64decode('AIAAAAMAAAABAAAACkFJfbYybQRUQUvOWPJVjBEAAAAAAAAAAEFJfIXxsxQoQUvPeTMMqHgAAAAAAAAAAEFJfaZyg8NDQUvQnhh9FyYAAAAAAAAAAEFJfxAMUnNrQUvPc/95ftcAAAAAAAAAAEFJgEex5GXOQUvQjhpHUgIAAAAAAAAAAEFJfXOXcVyiQUvTBIvIg4wAAAAAAAAAAEFJelpbrGySQUvRBJmyT+kAAAAAAAAAAEFJeaZ1mr1ZQUvP3mYWkp4AAAAAAAAAAEFJe/5PC3vjQUvMo9quVEUAAAAAAAAAAEFJfbYybQRUQUvOWPJVjBEAAAAAAAAAAA=='));
        self.assertEqual(prepareResult.getTypeName(), 'Polygon');

    def testMultiPolygon(self):
        prepareResult = wkb.prepareWkbForGeolib(base64.b64decode('AQYAAAADAAAAAQMAAAABAAAAJAAAAB1STo46flVBJVw4di/pRkGemlOGC39VQcG8/aBg5UZBiyPvTFF/VUHCLMl6BuFGQdHKz0KAflVBJTzPKXvgRkGv4wSXU3xVQbevWuzv30ZBfdOIZPd6VUHkE+D/799GQSoj93GxelVBCaE1ZSHcRkEWKhuaDXxVQTd1hlLH10ZBHZrjLNx/VUEL8ZfyEs9GQVRBiGPDgVVBFBgqLtPFRkFG/9QZw4FVQeupRYgMtkZBNUUZo/GAVUH+oioY8JtGQa4cdlWVf1VB8V8UXd2URkFNRfNB3XxVQQxQkudDh0ZB/yxqBoF7VUFhd+BmF4VGQTDM29JTeVVB/mfat6KFRkEbxGyp93dVQfJ6oE/miEZBg23ac+F2VUHMfX8QD5FGQYbWT0/6dFVBNBnVGHycRkG/dV/7cHFVQdPPdpYDo0ZBPi1aA6BwVUFKMxuCXadGQaA+vxagcFVB7vpEgberRkE2kBPrK3FVQS+zaNGcsEZB9sjQSohyVUExCUUk87pGQS/Z6lyIclVBF/ldTdi/RkFU4ZVFLHFVQZTI6EV2x0ZBqeopD3RuVUGp4i6vV9JGQRsLXjN0blVBFVmZMvXZRkFxI4VOdG5VQaK2Gjt84EZBZIy+akVvVUF04slN1uRGQZR8OhOJclVBbpZMjUbqRkHnc4HxEXZVQeZpvFJG6kZBB/O2dIR4VUEIUdPXL+lGQV6c6H8melVB2+xNxC/pRkHexO3t3nxVQdUQnN1F6kZBHVJOjjp+VUElXDh2L+lGQQEDAAAAAQAAAAwAAABzTIp1TYVVQSK2+ZXn60ZBJTQBOvGDVUGODPvM0OpGQUtcrKytgFVB10YP5OfrRkGuC5qr3H9VQZBCbtNy7EZBU1xKjFF/VUHUoNADoO5GQVNcSoxRf1VBIUYuvEHwRkFGxYOoIoBVQej0bkCF80ZBGXTFjtqCVUEEkAgF3/dGQcE7nunBhFVBHjAkAlT3RkFcJBvC2IVVQX8Jt6om9UZBQBwOudiFVUHBoXGuV/FGQXNMinVNhVVBIrb5lefrRkEBAwAAAAEAAAALAAAAtRDmjBlqVUFrYH5lFM9GQSfphBJ4aFVBYhmD3Z/PRkH22AjgG2dVQYFaW4JB0UZB1DnT0pBmVUFnSnSrJtZGQYQBSg0cZ1VBRfORTJfbRkGP2od7A2lVQdPA3i7E3UZBr1m9/nVrVUF4+NMHxN1GQTCiwvZGbFVBcCGkWfXZRkFgaqmKAWxVQSwzDQNu00ZBAylvyHVrVUFlhMx+KtBGQbUQ5owZalVBa2B+ZRTPRkE='));
        self.assertEqual(prepareResult.getTypeName(), 'MultiPolygon');

if __name__ == '__main__':
    unittest.main()
