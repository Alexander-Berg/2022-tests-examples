{
    "reactor": {
        "queues": [
            {
                "configuration": {
                    "parallelism": 1,
                    "priority_function": "TIME_ELDEST_FIRST",
                    "max_queued_instances": 1,
                    "max_running_instances_per_reaction": 1,
                    "max_queued_instances_per_reaction": 1
                },
                "path": "/maps/analytics/data/company-pretty-format/queue",
                "project": "/maps/analytics/Project",
                "reactions": [
                    "/maps/analytics/data/company-pretty-format/daily"
                ]
            }
        ],
        "artifacts": [
            {
                "path": "/maps/analytics/data/company-pretty-format/1d",
                "project": "/maps/analytics/Project",
                "ttl_days": 90,
                "type": "YT_PATH"
            }
        ],
        "reactions": [
            {
                "path": "/maps/analytics/data/company-pretty-format/daily",
                "project": "/maps/analytics/Project",
                "ttl_days": 90,
                "triggers": [
                    {
                        "type": "CRON",
                        "name": "cron",
                        "cron_expression": "0 0 1 * * ?",
                        "misfire_policy": "FIRE_ALL"
                    }
                ],
                "parameters": {
                    "workflow_id": "de5de133-dc8b-4bd5-9ba2-434aeebb4138",
                    "workflow_owner": "robot-maps-analytics",
                    "quota": "geo-analytics",
                    "retry_policy": {
                        "type": "UNIFORM",
                        "delay": 600000,
                        "retries": 1,
                        "result_cloning_policy": "DO_NOT_CLONE"
                    }
                },
                "expressions": {
                    "globals": "global date = Context.userTime().plusDays(-1);\nglobal parameters = [\"date=\" + date.format(\"yyyy-MM-dd\")].toStringList();",
                    "on_success": "a'/maps/analytics/data/company-pretty-format/1d'.instantiate(\n  Datum.yt(\"hahn\", \"//home/maps/analytics/data/company-pretty-format/\" + date.format(\"yyyy-MM-dd\")),\n  date.truncatedToDays()\n);"
                },
                "inputs": {
                    "globals": {
                        "target": {
                            "type": "CONST",
                            "value": "maps/analytics/data/company-pretty-format"
                        },
                        "parameters": {
                            "type": "VAR",
                            "value": "parameters",
                            "value_type": "PRIMITIVE_LIST_STRING"
                        }
                    }
                }
            }
        ]
    },
    "solomon": {
        "project_id": "maps-analytics",
        "alerts": [
            {
                "id": "_maps_analytics_data_company-pretty-format_daily_failure",
                "projectId": "maps-analytics",
                "name": "Reaction failures on /maps/analytics/data/company-pretty-format/daily",
                "channels": [
                    {
                        "id": "MapsAnalyticsMonitorings",
                        "config": {
                            "notifyAboutStatuses": [
                                "ALARM",
                                "ERROR",
                                "NO_DATA",
                                "OK",
                                "WARN"
                            ],
                            "repeatDelaySecs": 0
                        }
                    }
                ],
                "type": {
                    "expression": {
                        "program": "let lastPoint = last(series_max({project='reactor', cluster='prod', service='prod_push', mode='usertime', path='/maps/analytics/data/company-pretty-format/daily', attribute='failures_count', sensor='reaction*'}));\n\n alarm_if(lastPoint > 0);",
                        "checkExpression": ""
                    }
                },
                "annotations": {
                    "solomon_graph_id": "",
                    "reactor_path": "/maps/analytics/data/company-pretty-format/daily",
                    "message": "",
                    "description": "{{#isAlarm}}Reaction /maps/analytics/data/company-pretty-format/daily is failed{{/isAlarm}}",
                    "juggler_host": "maps-analytics",
                    "juggler_service": "/maps/analytics/data/company-pretty-format/daily_failure"
                },
                "windowSecs": 172800,
                "delaySecs": 0,
                "resolvedEmptyPolicy": "RESOLVED_EMPTY_DEFAULT",
                "noPointsPolicy": "NO_POINTS_DEFAULT"
            },
            {
                "id": "_maps_analytics_data_company-pretty-format_daily_delay",
                "projectId": "maps-analytics",
                "name": "Reactor Artifact appearance delay for /maps/analytics/data/company-pretty-format/daily",
                "channels": [
                    {
                        "id": "MapsAnalyticsMonitorings",
                        "config": {
                            "notifyAboutStatuses": [
                                "ALARM",
                                "ERROR",
                                "NO_DATA",
                                "OK",
                                "WARN"
                            ],
                            "repeatDelaySecs": 0
                        }
                    }
                ],
                "type": {
                    "expression": {
                        "program": "// every reaction publishes one or more artifacts\n// so we get the one of them (max, for example)\nlet source = series_max({project=\"reactor\", cluster=\"prod\", service=\"prod_push\", mode=\"usertime\", path=\"/maps/analytics/data/company-pretty-format/1d\", attribute=\"delay_first_sec\", sensor=\"artifact*\"});\n\nlet time_offset = 3 * 3600; // UTC + 3 hours = MSK time\nlet now = time_interval_end() + time_offset; // in UTC epoch seconds \nlet today = now - 86400 * fract(now / 86400); // start of the day second\nlet now_hours = (now - today) / 3600;\n\nlet last_point_timestamp = last(get_timestamps(source));\nlet last_value = last(drop_nan(source));\nlet completed_hours = (last_point_timestamp + time_offset + last_value - today) / 3600;\nlet completed_hours_str = to_fixed(completed_hours, 1);\n\nlet ALERT_HOURS = 23;\nlet is_not_published = now_hours > ALERT_HOURS && completed_hours < 0; // negative completed_hours means there are no point today\n\nalarm_if(is_not_published);",
                        "checkExpression": ""
                    }
                },
                "annotations": {
                    "solomon_graph_id": "",
                    "reactor_path": "/maps/analytics/data/company-pretty-format/daily",
                    "description": "{{#expression.is_not_published}}Expected /maps/analytics/data/company-pretty-format/1d to publish before {{expression.ALERT_HOURS}}{{/expression.is_not_published}}",
                    "message": "",
                    "juggler_host": "maps-analytics",
                    "juggler_service": "/maps/analytics/data/company-pretty-format/daily_delay"
                },
                "windowSecs": 172800,
                "delaySecs": 0,
                "resolvedEmptyPolicy": "RESOLVED_EMPTY_DEFAULT",
                "noPointsPolicy": "NO_POINTS_DEFAULT"
            }
        ]
    },
    "juggler": {
        "checks": [
            {
                "host": "maps-analytics",
                "namespace": "geo.maps-analytics",
                "notifications": [
                    {
                        "template_name": "on_status_change",
                        "description": "telegram notification",
                        "template_kwargs": {
                            "status": [
                                "CRIT"
                            ],
                            "login": [
                                "MapsAnalyticsMonitorings"
                            ],
                            "method": [
                                "telegram"
                            ]
                        }
                    },
                    {
                        "template_name": "on_status_change",
                        "description": "messenger notification",
                        "template_kwargs": {
                            "status": [
                                "CRIT"
                            ],
                            "login": [
                                "maps_analytics_mes_chat"
                            ],
                            "method": [
                                "yachats"
                            ]
                        }
                    },
                    {
                        "template_name": "on_status_change",
                        "description": "slack notification",
                        "template_kwargs": {
                            "status": [
                                "CRIT"
                            ],
                            "login": [
                                "C01RSD0GGAK"
                            ],
                            "method": [
                                "slack"
                            ]
                        }
                    },
                    {
                        "template_name": "startrek",
                        "description": "startrek notification",
                        "template_kwargs": {
                            "status": [
                                "CRIT"
                            ],
                            "queue": "GEOMONITORINGS",
                            "components": [
                                "maps-analytics"
                            ],
                            "assignee": "@svc_maps-analytics:on-call"
                        }
                    }
                ],
                "service": "/maps/analytics/data/company-pretty-format/daily_failure"
            },
            {
                "host": "maps-analytics",
                "namespace": "geo.maps-analytics",
                "notifications": [
                    {
                        "template_name": "on_status_change",
                        "description": "telegram notification",
                        "template_kwargs": {
                            "status": [
                                "CRIT"
                            ],
                            "login": [
                                "MapsAnalyticsMonitorings"
                            ],
                            "method": [
                                "telegram"
                            ]
                        }
                    },
                    {
                        "template_name": "on_status_change",
                        "description": "messenger notification",
                        "template_kwargs": {
                            "status": [
                                "CRIT"
                            ],
                            "login": [
                                "maps_analytics_mes_chat"
                            ],
                            "method": [
                                "yachats"
                            ]
                        }
                    },
                    {
                        "template_name": "on_status_change",
                        "description": "slack notification",
                        "template_kwargs": {
                            "status": [
                                "CRIT"
                            ],
                            "login": [
                                "C01RSD0GGAK"
                            ],
                            "method": [
                                "slack"
                            ]
                        }
                    },
                    {
                        "template_name": "startrek",
                        "description": "startrek notification",
                        "template_kwargs": {
                            "status": [
                                "CRIT"
                            ],
                            "queue": "GEOMONITORINGS",
                            "components": [
                                "maps-analytics"
                            ],
                            "assignee": "@svc_maps-analytics:on-call"
                        }
                    }
                ],
                "service": "/maps/analytics/data/company-pretty-format/daily_delay"
            }
        ]
    }
}