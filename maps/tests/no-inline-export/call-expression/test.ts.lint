export default a;

export default Type;

export default connect(something);

export {a, b, A, B as C};

export default class A {}
~~~~~~~~~~~~~~~~~~~~~~~~~ [ClassDeclaration]

export = Something;

export default interface SomeInterface {
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    a: number;
~~~~~~~~~~~~~~
}
~ [InterfaceDeclaration]

export default function (): void {
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    return;
~~~~~~~~~~~
}
~ [FunctionDeclaration]

export const a = 3;
~~~~~~~~~~~~~~~~~~~ [FirstStatement]

export let d = 'string';
~~~~~~~~~~~~~~~~~~~~~~~~ [FirstStatement]

export interface A {
~~~~~~~~~~~~~~~~~~~~
    index: number;
~~~~~~~~~~~~~~~~~~
}
~ [InterfaceDeclaration]

export type B = string;
~~~~~~~~~~~~~~~~~~~~~~~ [TypeAliasDeclaration]

export function (): void {
~~~~~~~~~~~~~~~~~~~~~~~~~~
    return;
~~~~~~~~~~~
}
~ [FunctionDeclaration]

export = function (): void {
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    return;
~~~~~~~~~~~
}
~ [FunctionExpression]

[error]: Inline export is forbidden: export has kind %s
[ClassDeclaration]: error % ('ClassDeclaration')
[FunctionDeclaration]: error % ('FunctionDeclaration')
[FunctionExpression]: error % ('FunctionExpression')
[InterfaceDeclaration]: error % ('InterfaceDeclaration')
[TypeAliasDeclaration]: error % ('TypeAliasDeclaration')
[FirstStatement]: error % ('FirstStatement')
