<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:repr="http://maps.yandex.ru/representation/1.x" xmlns:ymaps="http://maps.yandex.ru/ymaps/1.x" xmlns:gml="http://www.opengis.net/gml" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://maps.yandex.ru/representation/1.x" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0">
    <xs:import namespace="http://www.opengis.net/gml" schemaLocation="gml/gml.xsd"/>
    <xs:import namespace="http://maps.yandex.ru/ymaps/1.x" schemaLocation="ymaps.xsd"/>
    <xs:simpleType name="mapType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="MAP"/>
            <xs:enumeration value="SATELLITE"/>
            <xs:enumeration value="HYBRID"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="color">
        <xs:restriction base="xs:hexBinary"/>
    </xs:simpleType>
    <xs:simpleType name="colorModeEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="normal"/>
            <xs:enumeration value="random"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="unitsEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="fraction"/>
            <xs:enumeration value="pixels"/>
            <xs:enumeration value="insetPixels"/>
        </xs:restriction>
    </xs:simpleType>
    <!--===============================================-->
    <xs:element name="Representation" type="repr:RepresentationType" substitutionGroup="ymaps:_Extension"/>
    <xs:complexType name="RepresentationType">
        <xs:complexContent>
            <xs:extension base="ymaps:AbstractExtensionType">
                <xs:sequence>
                    <xs:element ref="repr:View" minOccurs="0"/>
                    <xs:element ref="repr:Style" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="repr:Template" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--===============================================-->
    <xs:element name="View" type="repr:ViewType">
        <xs:annotation>
            <xs:documentation>Задает стартовые парметры отображения</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:complexType name="ViewType">
        <xs:sequence>
            <xs:element name="mapType" type="repr:mapType" default="MAP" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>тип карты</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element ref="gml:boundedBy" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <!--===============================================-->
    <xs:element name="template" type="xs:string"/>
    <xs:element name="Template" type="repr:TemplateType"/>
    <xs:complexType name="TemplateType">
        <xs:sequence>
            <xs:element name="text" type="xs:string"/>
        </xs:sequence>
        <xs:attribute ref="gml:id" use="required"/>
    </xs:complexType>
    <!--===============================================-->
    <xs:element name="Style" type="repr:StyleType"/>
    <xs:complexType name="StyleType">
        <xs:complexContent>
            <xs:extension base="repr:AStyleContainerType">
                <xs:sequence>
                    <xs:element ref="repr:Overwrite" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute ref="gml:id" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="AStyleContainerType" abstract="true">
        <xs:sequence>
            <xs:element name="parentStyle" type="xs:string" minOccurs="0"/>
            <xs:choice>
                <xs:element ref="repr:iconContentStyle" minOccurs="0"/>
                <xs:element ref="repr:iconStyle" minOccurs="0"/>
            </xs:choice>
            <xs:element ref="repr:hintContentStyle" minOccurs="0"/>
            <xs:element ref="repr:balloonContentStyle" minOccurs="0"/>
            <xs:element ref="repr:lineStyle" minOccurs="0"/>
            <xs:element ref="repr:polygonStyle" minOccurs="0"/>
            <xs:element ref="repr:balloonStyle" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="hasHint" type="xs:boolean" use="optional"/>
        <xs:attribute name="hasBalloon" type="xs:boolean" use="optional"/>
    </xs:complexType>
    <!--===============================================-->
    <xs:element name="Overwrite" type="repr:OverwriteType"/>
    <xs:complexType name="OverwriteType">
        <xs:complexContent>
            <xs:extension base="repr:AStyleContainerType">
                <xs:sequence>
                    <xs:element ref="repr:Filter"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--===============================================-->
    <xs:element name="Filter" type="repr:FilterType"/>
    <xs:complexType name="FilterType">
        <xs:sequence>
            <xs:element name="zoomRange" minOccurs="0">
                <xs:complexType>
                    <xs:attribute name="min" use="required">
                        <xs:annotation>
                            <xs:documentation>Минимальный масштаб (включительно)</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="max" use="required">
                        <xs:annotation>
                            <xs:documentation>Максимальны масштаб (включительно)</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <!--===============================================-->
    <xs:complexType name="baseStyleType" abstract="true">
        <xs:sequence>
            <xs:element ref="repr:template"/>
        </xs:sequence>
        <xs:attribute ref="gml:id" use="optional"/>
    </xs:complexType>
    <!--===============================================-->
    <xs:element name="balloonStyle" type="repr:balloonStyleType"/>
    <xs:complexType name="balloonStyleType">
        <xs:sequence>
            <xs:element name="offset" minOccurs="0">
                <xs:complexType>
                    <xs:attribute name="x" type="xs:int" use="required"/>
                    <xs:attribute name="y" type="xs:int" use="required"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <!--===============================================-->
    <xs:element name="balloonContentStyle" type="repr:balloonContentStyleType"/>
    <xs:complexType name="balloonContentStyleType">
        <xs:complexContent>
            <xs:extension base="repr:baseStyleType"/>
        </xs:complexContent>
    </xs:complexType>
    <!--===============================================-->
    <xs:element name="hintContentStyle" type="repr:hintContentStyleType"/>
    <xs:complexType name="hintContentStyleType">
        <xs:complexContent>
            <xs:extension base="repr:baseStyleType"/>
        </xs:complexContent>
    </xs:complexType>
    <!--===============================================-->
    <xs:element name="iconContentStyle" type="repr:iconContentStyleType"/>
    <xs:complexType name="iconContentStyleType">
        <xs:complexContent>
            <xs:extension base="repr:baseStyleType"/>
        </xs:complexContent>
    </xs:complexType>
    <!--===============================================-->
    <xs:element name="iconStyle" type="repr:iconStyleType"/>
    <xs:complexType name="AIconStyleType">
        <xs:sequence>
            <xs:element name="href" type="xs:anyURI" minOccurs="0"/>
            <xs:element name="size" minOccurs="0">
                <xs:complexType>
                    <xs:attribute name="x" type="xs:int" use="required"/>
                    <xs:attribute name="y" type="xs:int" use="required"/>
                </xs:complexType>
            </xs:element>
            <xs:element ref="repr:template" minOccurs="0"/>
            <xs:element name="offset" minOccurs="0">
                <xs:complexType>
                    <xs:attribute name="x" type="xs:int" use="required"/>
                    <xs:attribute name="y" type="xs:int" use="required"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute ref="gml:id" use="optional"/>
    </xs:complexType>
    <xs:complexType name="iconStyleType">
        <xs:complexContent>
            <xs:extension base="repr:AIconStyleType">
                <xs:sequence>
                    <xs:element name="shadow" type="repr:AIconStyleType" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--===============================================-->
    <xs:element name="lineStyle" type="repr:lineStyleType"/>
    <xs:complexType name="lineStyleType">
        <xs:sequence>
            <xs:element name="strokeColor" type="repr:color" default="ff0000ff" minOccurs="0"/>
            <xs:element name="strokeWidth" type="xs:float" default="1" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute ref="gml:id" use="optional"/>
    </xs:complexType>
    <!--===============================================-->
    <xs:element name="polygonStyle" type="repr:polygonStyleType"/>
    <xs:complexType name="polygonStyleType">
        <xs:complexContent>
            <xs:extension base="repr:lineStyleType">
                <xs:sequence>
                    <xs:element name="fillColor" type="repr:color" default="ff0000ff" minOccurs="0"/>
                    <xs:element name="fill" type="xs:boolean" default="1" minOccurs="0"/>
                    <xs:element name="outline" type="xs:boolean" default="1" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
</xs:schema>
