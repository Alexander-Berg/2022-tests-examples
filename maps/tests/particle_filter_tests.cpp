#include <boost/test/unit_test.hpp>
#include <random>

#include <maps/indoor/libs/indoor_positioning/impl/likelihood_log_model.h>
#include <maps/indoor/libs/indoor_positioning/include/device_capabilities.h>
#include <maps/indoor/libs/indoor_positioning/include/indoor_positioning_client.h>
#include <maps/indoor/libs/indoor_positioning/include/level_index.h>
#include <maps/indoor/libs/indoor_positioning/include/sensor.h>
#include <maps/indoor/libs/indoor_positioning/include/transmitter.h>
#include <maps/indoor/libs/indoor_positioning/include/utils.h>
#include <maps/libs/common/include/exception.h>
#include <maps/libs/log8/include/log8.h>

#include "geometry.h"

using namespace boost::unit_test;
using namespace INDOOR_POSITIONING_NAMESPACE;

namespace {

const auto TX_TYPE = TransmitterType::BEACON;

const auto DEVICE_CAPABILITIES = DeviceCapabilities{
    .hasAccelerometer = false,
    .hasGyroscope = false,
    .hasMagnetometer = false,
    .hasBarometer = false,
    .hasLocation = false,
    .hasBeacons = true,
    .hasWifi = false,
    .hasBle = false,
    .hasWifiThrottling = false};

struct TestParticleFilter {
    TestParticleFilter(const std::vector<Transmitter>& transmitters)
        : transmitters(transmitters)
        , levelIndex(createLevelIndex(transmitters))
        , client(createIndoorPositioningClient(levelIndex, DEVICE_CAPABILITIES))
    {}

    std::vector<Transmitter> transmitters;
    std::shared_ptr<LevelIndex> levelIndex;
    std::shared_ptr<IndoorPositioningClient> client;

    void showLevel(const PlanLevelId& planLevel) {
        if (const auto levelInfo = levelIndex->findLevel(planLevel)) {
            INFO() << "Level geom: " << boost::geometry::wkt(levelInfo->xyGeometry());
            INFO() << "Level bbox: " << boost::geometry::wkt(levelInfo->xyBox());
            for(const auto& p : levelInfo->transmitters()) {
                INFO() << p.second.id << ":: x=" << p.second.positionXY.x << ", y=" << p.second.positionXY.y;
            }
        }
    }
};

} // namespace

BOOST_AUTO_TEST_CASE(particle_filter_attraction)
{
    const int stageDurationMs = 30000;
    const double attractionRadius = 1.0;

    // Generating transmitter measurements:
    //  1) stage 1: rssi(TX1) = -60, rssi(TXi) = -99
    //  2) stage 2: rssi(TX2) = -60, rssi(TXi) = -99
    //  3) stage 3: rssi(TX3) = -60, rssi(TXi) = -99
    //  ..........
    //  15) stage 15: rssi(TXF) = -60, rssi(TXi) = -99
    //
    // Expecting the following results:
    // position is attracted to the strongest transmitter, e.g.
    // within the specified stage it gets into the specified attractionRadius.
    //  1) end of stage 1: the position gets within the circle with center=TX1, radius=attractionRadius
    //  2) end of stage 2: the position gets within the circle with center=TX2, radius=attractionRadius
    //  ..........
    // 15) end of stage 15: the position gets within the circle with center=TXF, radius=attractionRadius

    TestParticleFilter test(
        {{"TX1", TX_TYPE, {"plan", "1"}, Point{60.000000, 37.000000}, TransmitterRssiModel()},
         {"TX2", TX_TYPE, {"plan", "1"}, Point{60.000000, 37.000200}, TransmitterRssiModel()},
         {"TX3", TX_TYPE, {"plan", "1"}, Point{60.000000, 37.000400}, TransmitterRssiModel()},
         {"TX4", TX_TYPE, {"plan", "1"}, Point{60.000000, 37.000600}, TransmitterRssiModel()},
         {"TX5", TX_TYPE, {"plan", "1"}, Point{60.000000, 37.000800}, TransmitterRssiModel()},
         {"TX6", TX_TYPE, {"plan", "1"}, Point{60.000000, 37.001000}, TransmitterRssiModel()},
         {"TX7", TX_TYPE, {"plan", "1"}, Point{60.000000, 37.001200}, TransmitterRssiModel()},
         {"TX8", TX_TYPE, {"plan", "1"}, Point{60.000000, 37.001400}, TransmitterRssiModel()},
         {"TX9", TX_TYPE, {"plan", "1"}, Point{60.000000, 37.001600}, TransmitterRssiModel()},
         {"TXA", TX_TYPE, {"plan", "1"}, Point{60.000000, 37.001800}, TransmitterRssiModel()},
         {"TXB", TX_TYPE, {"plan", "1"}, Point{60.000000, 37.002000}, TransmitterRssiModel()},
         {"TXC", TX_TYPE, {"plan", "1"}, Point{60.000000, 37.002200}, TransmitterRssiModel()},
         {"TXD", TX_TYPE, {"plan", "1"}, Point{60.000000, 37.002400}, TransmitterRssiModel()},
         {"TXE", TX_TYPE, {"plan", "1"}, Point{60.000000, 37.002600}, TransmitterRssiModel()},
         {"TXF", TX_TYPE, {"plan", "1"}, Point{60.000000, 37.002800}, TransmitterRssiModel()}});

    test.showLevel(PlanLevelId{"plan", "1"});

    TransmitterMeasurements txMsrs;
    Timestamp timestamp;

    for(const auto& tx : test.transmitters) {
        for(int i = 0; i < stageDurationMs / 100; ++i) {
            for(const auto& tx1 : test.transmitters) {
                const double txRssi = tx1.rssiModel(geoDistance(tx.position, tx1.position));
                txMsrs.push_back({
                    tx1.id,
                    TransmitterType::BEACON,
                    txRssi,
                    timestamp});
            }
            timestamp += std::chrono::milliseconds(100);
        }
    }

    for(const auto& txMsr : txMsrs) {
        const int ms = std::chrono::duration_cast<std::chrono::milliseconds>(txMsr.timestamp.time_since_epoch()).count();

        auto position = test.client->position({txMsr}, {}, txMsr.timestamp);

        if (ms <= 6000)
            continue;

        if (ms % 1000 != 0)
            continue;

        // Position should be determined within 6 seconds
        BOOST_CHECK_EQUAL(
            position != boost::none,
            true);

        if (!position)
            break;

        // Level should be always determined
        BOOST_CHECK_EQUAL(position->indoorLevelId.empty(), false);

        const unsigned int stageIndex = ms / stageDurationMs;
        const unsigned int nextStageIndex = (ms + 1000) / stageDurationMs;

        // Stage index should be valid
        BOOST_CHECK_EQUAL(
            0 <= stageIndex && stageIndex < test.transmitters.size(),
            true);

        const auto& txMain = test.transmitters[stageIndex];

        double error = geoDistance(
            Point{position->latitude, position->longitude},
            txMain.position);

        INFO() << "POSITION for time=" << ms << ": "
               << "lat=" << position->latitude << ", "
               << "lon=" << position->longitude << ", " << txMain.id << "=" << error;

        // At the end of current stage verify attraction condition
        if (nextStageIndex != stageIndex) {
            BOOST_CHECK_EQUAL(error <= attractionRadius, true);
        }
    }
}

BOOST_AUTO_TEST_CASE(particle_filter_trajectory)
{
    const double accuracyThreshold = 10.0;

    TestParticleFilter test(
        {{"TX1", TX_TYPE, {"plan", "1"}, Point{55.692971, 37.347048}, TransmitterRssiModel()},
         {"TX2", TX_TYPE, {"plan", "1"}, Point{55.692969, 37.347260}, TransmitterRssiModel()},
         {"TX3", TX_TYPE, {"plan", "1"}, Point{55.692969, 37.347616}, TransmitterRssiModel()},
         {"TX4", TX_TYPE, {"plan", "1"}, Point{55.692982, 37.347783}, TransmitterRssiModel()},
         {"TX5", TX_TYPE, {"plan", "1"}, Point{55.692894, 37.347622}, TransmitterRssiModel()},
         {"TX6", TX_TYPE, {"plan", "1"}, Point{55.692886, 37.347453}, TransmitterRssiModel()},
         {"TX7", TX_TYPE, {"plan", "1"}, Point{55.692880, 37.347295}, TransmitterRssiModel()},
         {"TX8", TX_TYPE, {"plan", "1"}, Point{55.692768, 37.347273}, TransmitterRssiModel()},
         {"TX9", TX_TYPE, {"plan", "1"}, Point{55.692765, 37.347453}, TransmitterRssiModel()},
         {"TXA", TX_TYPE, {"plan", "1"}, Point{55.692760, 37.347635}, TransmitterRssiModel()},
         {"TXB", TX_TYPE, {"plan", "1"}, Point{55.692931, 37.347180}, TransmitterRssiModel()},
         {"TXC", TX_TYPE, {"plan", "1"}, Point{55.692825, 37.347373}, TransmitterRssiModel()},
         {"TXD", TX_TYPE, {"plan", "1"}, Point{55.692825, 37.347575}, TransmitterRssiModel()},
         {"TXE", TX_TYPE, {"plan", "1"}, Point{55.692925, 37.347575}, TransmitterRssiModel()}});

    test.showLevel(PlanLevelId{"plan", "1"});

    struct MeasurementType
    {
        std::string txId;
        double rssi;
        double time;
    };

    // Transmitter measurements in the format: (txId, rssi, time)
    std::vector<MeasurementType> txMeasurements = {
        {"TX1", -19.83020248916077, 0.0},
        {"TX2", -97.52809973624838, 0.0},
        {"TXB", -95.444042078863, 0.0},
        {"TX1", -82.57186108130529, 1.0},
        {"TX2", -97.01026786219353, 1.0},
        {"TXB", -94.79572984064468, 1.0},
        {"TX1", -86.73074416280545, 2.0},
        {"TX2", -96.44348650364807, 2.0},
        {"TXB", -94.09904711016586, 2.0},
        {"TX1", -89.16353481111008, 3.0},
        {"TX2", -95.81752612207066, 3.0},
        {"TXB", -93.35934070879829, 3.0},
        {"TX1", -90.88962724570025, 4.0},
        {"TX2", -95.11857229219679, 4.0},
        {"TX7", -98.23443236502631, 4.0},
        {"TXB", -92.59562679026627, 4.0},
        {"TX1", -92.22848855352973, 5.0},
        {"TX2", -94.32732633633415, 5.0},
        {"TX7", -97.90080776631919, 5.0},
        {"TXB", -91.85361190119309, 5.0},
        {"TX1", -93.32241789426315, 6.0},
        {"TX2", -93.41565321422308, 6.0},
        {"TX7", -97.5661650278342, 6.0},
        {"TXB", -91.22158170472582, 6.0},
        {"TX1", -94.24732197320843, 7.0},
        {"TX2", -92.34019833324939, 7.0},
        {"TX7", -97.23502765707057, 7.0},
        {"TXB", -90.8291813289043, 7.0},
        {"TX1", -95.0485103289437, 8.0},
        {"TX2", -91.02894249294542, 8.0},
        {"TX7", -96.91352718780624, 8.0},
        {"TXB", -90.79236890311782, 8.0},
        {"TX1", -95.75520854287387, 9.0},
        {"TX2", -89.34857878783458, 9.0},
        {"TX7", -96.6096300030609, 9.0},
        {"TXB", -91.12369720555137, 9.0},
        {"TX1", -96.38737163681502, 10.0},
        {"TX2", -87.00621313675829, 10.0},
        {"TX7", -96.33316669417209, 10.0},
        {"TXB", -91.72069306101267, 10.0},
        {"TX1", -96.95923271563666, 11.0},
        {"TX2", -83.11070505771127, 11.0},
        {"TX7", -96.09548668724055, 11.0},
        {"TXB", -92.45001087099988, 11.0},
        {"TX1", -97.48130097757117, 12.0},
        {"TX2", -68.38276742914881, 12.0},
        {"TX7", -95.90856463354534, 12.0},
        {"TXB", -93.21420991140025, 12.0},
        {"TX1", -97.6612204313204, 13.0},
        {"TX2", -82.57186108130529, 13.0},
        {"TX6", -98.0031649117474, 13.0},
        {"TX7", -95.20445438728416, 13.0},
        {"TXB", -92.87802652167426, 13.0},
        {"TX1", -97.82605931564039, 14.0},
        {"TX2", -86.73074416280545, 14.0},
        {"TX6", -97.6674028232193, 14.0},
        {"TX7", -94.42521653850059, 14.0},
        {"TXB", -92.6242843325539, 14.0},
        {"TX1", -98.01736333845588, 15.0},
        {"TX2", -89.16353481111008, 15.0},
        {"TX6", -97.33336539438966, 15.0},
        {"TX7", -93.52945544045836, 15.0},
        {"TXB", -92.56933828214251, 15.0},
        {"TXC", -97.95446589632606, 15.0},
        {"TX1", -98.22983892979734, 16.0},
        {"TX2", -90.88962724570025, 16.0},
        {"TX6", -97.00663016572467, 16.0},
        {"TX7", -92.47608991852205, 16.0},
        {"TXB", -92.72405118144295, 16.0},
        {"TXC", -97.48966270191804, 16.0},
        {"TX2", -92.22848855352973, 17.0},
        {"TX6", -96.69456559841218, 17.0},
        {"TX7", -91.19756473357769, 17.0},
        {"TXB", -93.05889675017931, 17.0},
        {"TXC", -96.98890822502047, 17.0},
        {"TX2", -93.32241789426315, 18.0},
        {"TX6", -96.40645018831344, 18.0},
        {"TX7", -89.57070346549779, 18.0},
        {"TXB", -93.52032337611296, 18.0},
        {"TXC", -96.4468907102521, 18.0},
        {"TX2", -94.24732197320843, 19.0},
        {"TX6", -96.15327710162563, 19.0},
        {"TX7", -87.33158342676994, 19.0},
        {"TX8", -98.18613458282147, 19.0},
        {"TXB", -94.05368984019175, 19.0},
        {"TXC", -95.85732869643931, 19.0},
        {"TX2", -95.0485103289437, 20.0},
        {"TX6", -95.94705545209895, 20.0},
        {"TX7", -83.71881064037959, 20.0},
        {"TX8", -97.74378053899775, 20.0},
        {"TXB", -94.61665792199986, 20.0},
        {"TXC", -95.2129352481639, 20.0},
        {"TX2", -95.75520854287387, 21.0},
        {"TX6", -95.79949586955208, 21.0},
        {"TX7", -73.22654685796046, 21.0},
        {"TX8", -97.26977584890332, 21.0},
        {"TXB", -95.1815404170274, 21.0},
        {"TXC", -94.50566225490267, 21.0},
        {"TX2", -96.4838966775183, 22.0},
        {"TX6", -95.92715878845334, 22.0},
        {"TX7", -82.57186108130529, 22.0},
        {"TX8", -96.6138984354572, 22.0},
        {"TXB", -95.69429478608362, 22.0},
        {"TXC", -93.75657229108693, 22.0},
        {"TX2", -97.02552507567074, 23.0},
        {"TX6", -96.13624686416517, 23.0},
        {"TX7", -86.73074416280545, 23.0},
        {"TX8", -96.0063850725025, 23.0},
        {"TX9", -98.11705943108339, 23.0},
        {"TXB", -96.10997972689448, 23.0},
        {"TXC", -93.19828892849931, 23.0},
        {"TX2", -97.52550049695328, 24.0},
        {"TX6", -96.39221632244045, 24.0},
        {"TX7", -89.16353481111008, 24.0},
        {"TX8", -95.33035729289365, 24.0},
        {"TX9", -97.83246908838412, 24.0},
        {"TXB", -96.5327276248342, 24.0},
        {"TXC", -92.72259019085581, 24.0},
        {"TX2", -97.98931620161457, 25.0},
        {"TX6", -96.68292182955688, 25.0},
        {"TX7", -90.88962724570025, 25.0},
        {"TX8", -94.56837337580444, 25.0},
        {"TX9", -97.55890467291312, 25.0},
        {"TXB", -96.95329604041581, 25.0},
        {"TXC", -92.39322012737517, 25.0},
        {"TX6", -96.9972948685371, 26.0},
        {"TX7", -92.22848855352973, 26.0},
        {"TX8", -93.69534655800692, 26.0},
        {"TX9", -97.30242424563207, 26.0},
        {"TXB", -97.36570826404918, 26.0},
        {"TXC", -92.26975987536694, 26.0},
        {"TX6", -97.32603086521974, 27.0},
        {"TX7", -93.32241789426315, 27.0},
        {"TX8", -92.67329998751921, 27.0},
        {"TX9", -97.07012110980656, 27.0},
        {"TXB", -97.76634835468673, 27.0},
        {"TXC", -92.3784519191617, 27.0},
        {"TX6", -97.66176837584038, 28.0},
        {"TX7", -94.24732197320843, 28.0},
        {"TX8", -91.4406734541763, 28.0},
        {"TX9", -96.86983509052297, 28.0},
        {"TXB", -98.15322506851595, 28.0},
        {"TXC", -92.69607309002701, 28.0},
        {"TX6", -97.99895546207482, 29.0},
        {"TX7", -95.0485103289437, 29.0},
        {"TX8", -89.88756301013271, 29.0},
        {"TX9", -96.7095943542109, 29.0},
        {"TXC", -93.16430351806147, 29.0},
        {"TX7", -95.75520854287387, 30.0},
        {"TX8", -87.78645757686296, 30.0},
        {"TX9", -96.59679205707269, 30.0},
        {"TXC", -93.71893003666005, 30.0},
        {"TX7", -96.38737163681502, 31.0},
        {"TX8", -84.52503168409558, 31.0},
        {"TX9", -96.53720884430786, 31.0},
        {"TXC", -94.30925371461124, 31.0},
        {"TX7", -96.95923271563666, 32.0},
        {"TX8", -76.84108243469937, 32.0},
        {"TX9", -96.53410525938227, 32.0},
        {"TXC", -94.90237786948232, 32.0},
        {"TX7", -96.72272060554562, 33.0},
        {"TX8", -82.57186108130529, 33.0},
        {"TX9", -96.18777099721173, 33.0},
        {"TXC", -94.33932302015594, 33.0},
        {"TX7", -96.26619353525952, 34.0},
        {"TX8", -86.73074416280545, 34.0},
        {"TX9", -95.85080299371863, 34.0},
        {"TXC", -93.4332188470628, 34.0},
        {"TX6", -97.83717078279989, 35.0},
        {"TX7", -95.8013491624701, 35.0},
        {"TX8", -89.1635348111101, 35.0},
        {"TX9", -95.55148501889863, 35.0},
        {"TXC", -92.36718958617939, 35.0},
        {"TX6", -97.3464316570994, 36.0},
        {"TX7", -95.3374066579074, 36.0},
        {"TX8", -90.88962724570025, 36.0},
        {"TX9", -95.30624913778809, 36.0},
        {"TXC", -91.07352730312616, 36.0},
        {"TX6", -96.81195087813595, 37.0},
        {"TX7", -94.88889323025785, 37.0},
        {"TX8", -92.22848855352973, 37.0},
        {"TX9", -95.1317658571475, 37.0},
        {"TXC", -89.43122617945808, 37.0},
        {"TX6", -96.22516080367711, 38.0},
        {"TX7", -94.47696006190733, 38.0},
        {"TX8", -93.32241789426315, 38.0},
        {"TX9", -95.04196191098498, 38.0},
        {"TXC", -87.19437520530117, 38.0},
        {"TXD", -98.12791235083266, 38.0},
        {"TX6", -95.57470057001228, 39.0},
        {"TX7", -94.12946007052328, 39.0},
        {"TX8", -94.24732197320843, 39.0},
        {"TX9", -95.04475388906081, 39.0},
        {"TXC", -83.78226789467654, 39.0},
        {"TXD", -97.80537664376665, 39.0},
        {"TX6", -94.84505218586428, 40.0},
        {"TX7", -93.87815117356844, 40.0},
        {"TX8", -95.0485103289437, 40.0},
        {"TX9", -95.13988755653251, 40.0},
        {"TXC", -79.20483406853586, 40.0},
        {"TXD", -97.48583517411673, 40.0},
        {"TX6", -94.01422688782306, 41.0},
        {"TX7", -93.75187905064975, 41.0},
        {"TX8", -95.75520854287387, 41.0},
        {"TX9", -95.31901060431977, 41.0},
        {"TXC", -83.00162631566607, 41.0},
        {"TXD", -97.17466497106699, 41.0},
        {"TX6", -93.04957778191036, 42.0},
        {"TX7", -93.76730886517868, 42.0},
        {"TX8", -96.38737163681502, 42.0},
        {"TX9", -95.56793856955765, 42.0},
        {"TXC", -86.71761434523877, 42.0},
        {"TXD", -96.87881506395152, 42.0},
        {"TXE", -98.20236054685392, 42.0},
        {"TX5", -98.17274588368588, 43.0},
        {"TX6", -91.89955935082666, 43.0},
        {"TX7", -93.92232027211831, 43.0},
        {"TX8", -96.95923271563666, 43.0},
        {"TX9", -95.86994021789877, 43.0},
        {"TXC", -89.09987736092394, 43.0},
        {"TXD", -96.6068570029532, 43.0},
        {"TXE", -97.75213077031862, 43.0},
        {"TX5", -97.77957976343627, 44.0},
        {"TX6", -90.47556886223087, 44.0},
        {"TX7", -94.1968969087177, 44.0},
        {"TX8", -97.48130097757117, 44.0},
        {"TX9", -96.20866974957072, 44.0},
        {"TXC", -90.821269434459, 44.0},
        {"TXD", -96.36875429689948, 44.0},
        {"TXE", -97.267278919527, 44.0},
        {"TX5", -97.37055142676715, 45.0},
        {"TX6", -88.60485411000397, 45.0},
        {"TX7", -94.56081451272745, 45.0},
        {"TX8", -97.96155722360984, 45.0},
        {"TX9", -96.56999851984718, 45.0},
        {"TXC", -92.16396623782533, 45.0},
        {"TXD", -96.17521016274614, 45.0},
        {"TXE", -96.7424526123138, 45.0},
        {"TX5", -96.94702360786953, 46.0},
        {"TX6", -85.87192122766487, 46.0},
        {"TX7", -94.98271681095682, 46.0},
        {"TX9", -96.9427278776422, 46.0},
        {"TXC", -93.26321782858219, 46.0},
        {"TXD", -96.03652652880496, 46.0},
        {"TXE", -96.17111416623719, 46.0},
        {"TX3", -98.07497615339148, 47.0},
        {"TX5", -96.51183906481069, 47.0},
        {"TX6", -80.7104165271316, 47.0},
        {"TX7", -95.43607563222938, 47.0},
        {"TX9", -97.31853937885653, 47.0},
        {"TXC", -94.19327084077071, 47.0},
        {"TXD", -95.96109055097958, 47.0},
        {"TXE", -95.5452619424641, 47.0},
        {"TX3", -98.0581312110289, 48.0},
        {"TX5", -96.27088622133095, 48.0},
        {"TX6", -82.57186108130529, 48.0},
        {"TX7", -95.76903795540046, 48.0},
        {"TX9", -97.08054350425266, 48.0},
        {"TXC", -94.15260317503247, 48.0},
        {"TXD", -95.52749880687162, 48.0},
        {"TXE", -95.43623542082658, 48.0},
        {"TX5", -96.41151583595854, 49.0},
        {"TX6", -86.73074416280545, 49.0},
        {"TX7", -95.83422873771786, 49.0},
        {"TX9", -96.52067968821477, 49.0},
        {"TXC", -93.49654821659023, 49.0},
        {"TXD", -95.12960798192536, 49.0},
        {"TXE", -95.85394115116182, 49.0},
        {"TX5", -96.60222698703302, 50.0},
        {"TX6", -89.1635348111101, 50.0},
        {"TX7", -95.96784454451608, 50.0},
        {"TX8", -98.23303140724809, 50.0},
        {"TX9", -95.90314741233206, 50.0},
        {"TXC", -92.85690736793522, 50.0},
        {"TXD", -94.77524587256309, 50.0},
        {"TXE", -96.28330212807214, 50.0},
        {"TX5", -96.83369242003079, 51.0},
        {"TX6", -90.88962724570025, 51.0},
        {"TX7", -96.16116901250612, 51.0},
        {"TX8", -97.9466657312847, 51.0},
        {"TX9", -95.21468769275236, 51.0},
        {"TXA", -98.21629419401837, 51.0},
        {"TXC", -92.28789681136696, 51.0},
        {"TXD", -94.48852099921827, 51.0},
        {"TXE", -96.7131506994071, 51.0},
        {"TX5", -97.09632105822962, 52.0},
        {"TX6", -92.22848855352973, 52.0},
        {"TX7", -96.40307451491978, 52.0},
        {"TX8", -97.66944357700186, 52.0},
        {"TX9", -94.43686765987277, 52.0},
        {"TXA", -97.9351230578751, 52.0},
        {"TXC", -91.8686638030373, 52.0},
        {"TXD", -94.29449538485893, 52.0},
        {"TXE", -97.13617238945449, 52.0},
        {"TX5", -97.38119058220323, 53.0},
        {"TX6", -93.32241789426315, 53.0},
        {"TX7", -96.68181113188889, 53.0},
        {"TX8", -97.40699001365383, 53.0},
        {"TX9", -93.54298043925536, 53.0},
        {"TXA", -97.66430757752337, 53.0},
        {"TXC", -91.68372280984742, 53.0},
        {"TXD", -94.21351331375213, 53.0},
        {"TXE", -97.54788138057934, 53.0},
        {"TX5", -97.68058458463797, 54.0},
        {"TX6", -94.24732197320843, 54.0},
        {"TX7", -96.98638404730838, 54.0},
        {"TX8", -97.16600027017824, 54.0},
        {"TX9", -92.49220707869652, 54.0},
        {"TXA", -97.40957841507642, 54.0},
        {"TXC", -91.77921524505179, 54.0},
        {"TXD", -94.25497718797736, 54.0},
        {"TXE", -97.94575146550278, 54.0},
        {"TX5", -97.98818948271942, 55.0},
        {"TX6", -95.0485103289437, 55.0},
        {"TX7", -97.30734774187884, 55.0},
        {"TX8", -96.95403611360861, 55.0},
        {"TX9", -91.21750325236957, 55.0},
        {"TXA", -97.17765905880555, 55.0},
        {"TXC", -92.13057374965986, 55.0},
        {"TXD", -94.41400244556557, 55.0},
        {"TX6", -95.75520854287387, 56.0},
        {"TX7", -97.63708816387131, 56.0},
        {"TX8", -96.77907277946431, 56.0},
        {"TX9", -89.59683859346757, 56.0},
        {"TXA", -96.97601719405513, 56.0},
        {"TXC", -92.66042783321353, 56.0},
        {"TXD", -94.67319156796665, 56.0},
        {"TX6", -96.38737163681502, 57.0},
        {"TX7", -97.9697646262224, 57.0},
        {"TX8", -96.6487735033868, 57.0},
        {"TX9", -87.36950362930362, 57.0},
        {"TXA", -96.8123711909717, 57.0},
        {"TXC", -93.28432890030147, 57.0},
        {"TXD", -95.0083095492406, 57.0},
        {"TX6", -96.95923271563666, 58.0},
        {"TX8", -96.56955976154116, 58.0},
        {"TX9", -83.78787326924666, 58.0},
        {"TXA", -96.6939473001587, 58.0},
        {"TXC", -93.93940104507905, 58.0},
        {"TXD", -95.39445058484795, 58.0},
        {"TX6", -97.48130097757117, 59.0},
        {"TX8", -96.54566068215892, 59.0},
        {"TX9", -73.61303638762004, 59.0},
        {"TXA", -96.6265754933218, 59.0},
        {"TXC", -94.58809659717355, 59.0},
        {"TXD", -95.81013631969384, 59.0},
        {"TX6", -97.63620673845834, 60.0},
        {"TX8", -97.10543649609802, 60.0},
        {"TX9", -82.57186108130529, 60.0},
        {"TXA", -96.01189704397477, 60.0},
        {"TXC", -95.24237942858223, 60.0},
        {"TXD", -95.43740562084784, 60.0},
        {"TX6", -97.71794833201305, 61.0},
        {"TX8", -97.61538816452799, 61.0},
        {"TX9", -86.73074416280545, 61.0},
        {"TXA", -95.33652630610854, 61.0},
        {"TXC", -95.75436187687723, 61.0},
        {"TXD", -94.97958488390584, 61.0},
        {"TX6", -97.83478748767342, 62.0},
        {"TX8", -98.08538225100877, 62.0},
        {"TX9", -89.16353481111008, 62.0},
        {"TXA", -94.57537727222396, 62.0},
        {"TXC", -96.25494696161655, 62.0},
        {"TXD", -94.55181412171585, 62.0},
        {"TX6", -97.9827085479711, 63.0},
        {"TX9", -90.88962724570025, 63.0},
        {"TXA", -93.70344668486852, 63.0},
        {"TXC", -96.73769407602487, 63.0},
        {"TXD", -94.18062864163353, 63.0},
        {"TX6", -98.15712564317843, 64.0},
        {"TX9", -92.22848855352973, 64.0},
        {"TXA", -92.68290317941486, 64.0},
        {"TXC", -97.19954233991098, 64.0},
        {"TXD", -93.8977800654549, 64.0},
        {"TX9", -93.32241789426315, 65.0},
        {"TXA", -91.45246462365728, 65.0},
        {"TXC", -97.63947305103284, 65.0},
        {"TXD", -93.7343785736848, 65.0},
        {"TX5", -98.2467106817781, 66.0},
        {"TX9", -94.24732197320843, 66.0},
        {"TXA", -89.90283335346041, 66.0},
        {"TXC", -98.0576469619777, 66.0},
        {"TXD", -93.71164106065967, 66.0},
        {"TX5", -98.1980617255203, 67.0},
        {"TX9", -95.0485103289437, 67.0},
        {"TXA", -87.80811967107299, 67.0},
        {"TXD", -93.83272744018669, 67.0},
        {"TX5", -98.18178366218756, 68.0},
        {"TX9", -95.75520854287387, 68.0},
        {"TXA", -84.56228847680524, 68.0},
        {"TXD", -94.08140175157789, 68.0},
        {"TX5", -98.1984053148317, 69.0},
        {"TX9", -96.38737163681502, 69.0},
        {"TXA", -76.9741016263561, 69.0},
        {"TXD", -94.42857455326643, 69.0},
        {"TX5", -97.75417689664573, 70.0},
        {"TX9", -96.58693146117336, 70.0},
        {"TXA", -82.5718610813053, 70.0},
        {"TXD", -93.80968822106138, 70.0},
        {"TX5", -97.25631101259515, 71.0},
        {"TX9", -96.6108553572116, 71.0},
        {"TXA", -86.73074416280546, 71.0},
        {"TXD", -92.95594116893278, 71.0},
        {"TX5", -96.7133645073055, 72.0},
        {"TX9", -96.68934118196371, 72.0},
        {"TXA", -89.16353481111008, 72.0},
        {"TXD", -92.02643345521359, 72.0},
        {"TX5", -96.11635325839993, 73.0},
        {"TX6", -98.14384906035227, 73.0},
        {"TX9", -96.81825399046723, 73.0},
        {"TXA", -90.88962724570025, 73.0},
        {"TXD", -91.0507897076329, 73.0},
        {"TXE", -97.99586157718858, 73.0},
        {"TX5", -95.45330720956784, 74.0},
        {"TX6", -97.83521483128847, 74.0},
        {"TX9", -96.99131957804723, 74.0},
        {"TXA", -92.22848855352973, 74.0},
        {"TXD", -90.12360028314352, 74.0},
        {"TXE", -97.52841102825843, 74.0},
        {"TX5", -94.70778041402373, 75.0},
        {"TX6", -97.53239422953473, 75.0},
        {"TX9", -97.20104260704363, 75.0},
        {"TXA", -93.32241789426315, 75.0},
        {"TXD", -89.45122276422063, 75.0},
        {"TXE", -97.0233692855602, 75.0},
        {"TX5", -93.85629750491393, 76.0},
        {"TX6", -97.24102349820515, 76.0},
        {"TX9", -97.4396075900183, 76.0},
        {"TXA", -94.24732197320843, 76.0},
        {"TXD", -89.29946874441913, 76.0},
        {"TXE", -96.47459874182698, 76.0},
        {"TX3", -98.02728931944615, 77.0},
        {"TX5", -92.86367141895526, 77.0},
        {"TX6", -96.96813123047983, 77.0},
        {"TX9", -97.69958596395946, 77.0},
        {"TXA", -95.0485103289437, 77.0},
        {"TXD", -89.74600047152987, 77.0},
        {"TXE", -95.87450178059623, 77.0},
        {"TX3", -97.55248655749811, 78.0},
        {"TX5", -91.67362845994214, 78.0},
        {"TX6", -96.7220606899245, 78.0},
        {"TX9", -97.97438191396995, 78.0},
        {"TXA", -95.75520854287387, 78.0},
        {"TXD", -90.58185574947635, 78.0},
        {"TXE", -95.21363346060697, 78.0},
        {"TX3", -97.03685853746484, 79.0},
        {"TX5", -90.18764675710871, 79.0},
        {"TX6", -96.51210427923655, 79.0},
        {"TXA", -96.38737163681502, 79.0},
        {"TXD", -91.55174765002626, 79.0},
        {"TXE", -94.48029823020532, 79.0},
        {"TX3", -96.47271891168145, 80.0},
        {"TX5", -88.20804169319756, 80.0},
        {"TX6", -96.34776270491396, 80.0},
        {"TXA", -96.95923271563666, 80.0},
        {"TXD", -92.51034779968444, 80.0},
        {"TXE", -93.66035688244187, 80.0},
        {"TX3", -95.8499830288677, 81.0},
        {"TX5", -85.23363552006859, 81.0},
        {"TX6", -96.237637101931, 81.0},
        {"TXA", -97.48130097757117, 81.0},
        {"TXD", -93.40251293873173, 81.0},
        {"TXE", -92.73802651477193, 81.0},
        {"TX3", -95.15505319090546, 82.0},
        {"TX4", -98.0324462421346, 82.0},
        {"TX5", -79.07527063691785, 82.0},
        {"TX6", -96.18812968788369, 82.0},
        {"TXA", -97.96155722360984, 82.0},
        {"TXD", -94.2156533714677, 82.0},
        {"TXE", -91.70022657947624, 82.0},
        {"TX3", -93.88062476142605, 83.0},
        {"TX4", -97.55216862745543, 83.0},
        {"TX5", -82.57186108130529, 83.0},
        {"TX6", -96.24358154003161, 83.0},
        {"TXD", -95.33738180227778, 83.0},
        {"TXE", -89.89798934601234, 83.0},
        {"TX3", -92.89236492846044, 84.0},
        {"TX4", -97.2543366593278, 84.0},
        {"TX5", -86.73074416280545, 84.0},
        {"TX6", -96.35919002482424, 84.0},
        {"TXD", -95.97492938509276, 84.0},
        {"TXE", -88.80909196415715, 84.0},
        {"TX3", -91.70859836880618, 85.0},
        {"TX4", -96.97340799829621, 85.0},
        {"TX5", -89.1635348111101, 85.0},
        {"TX6", -96.5283079241861, 85.0},
        {"TXD", -96.55768001631446, 85.0},
        {"TXE", -88.18619040153757, 85.0},
        {"TX3", -90.23240764605599, 86.0},
        {"TX4", -96.71766067093725, 86.0},
        {"TX5", -90.88962724570025, 86.0},
        {"TX6", -96.74218541459913, 86.0},
        {"TXD", -97.09323400095181, 86.0},
        {"TXE", -88.4088410225205, 86.0},
        {"TX3", -88.27020819503532, 87.0},
        {"TX4", -96.49648416308146, 87.0},
        {"TX5", -92.22848855352973, 87.0},
        {"TX6", -96.99128980676349, 87.0},
        {"TXD", -97.58799170555272, 87.0},
        {"TXE", -89.32536748991099, 87.0},
        {"TX3", -85.33535784932248, 88.0},
        {"TX4", -96.31969933799968, 88.0},
        {"TX5", -93.32241789426315, 88.0},
        {"TX6", -97.26638476747019, 88.0},
        {"TXD", -98.04729151474503, 88.0},
        {"TXE", -90.48890753564481, 88.0},
        {"TX3", -79.35497428351866, 89.0},
        {"TX4", -96.19647424628104, 89.0},
        {"TX5", -94.24732197320843, 89.0},
        {"TX6", -97.55923465605383, 89.0},
        {"TXE", -91.63313526487849, 89.0},
        {"TX3", -82.57186108130529, 90.0},
        {"TX4", -95.49333529273005, 90.0},
        {"TX5", -94.85109648365787, 90.0},
        {"TX6", -98.1251060413406, 90.0},
        {"TXE", -92.97635142632267, 90.0},
        {"TX3", -86.73074416280545, 91.0},
        {"TX4", -94.75308442499707, 91.0},
        {"TX5", -95.06328538387814, 91.0},
        {"TXE", -93.70712192733583, 91.0},
        {"TX3", -89.16353481111008, 92.0},
        {"TX4", -93.90847939266743, 92.0},
        {"TX5", -95.34753193037633, 92.0},
        {"TXE", -94.41248170765449, 92.0},
        {"TX3", -90.88962724570025, 93.0},
        {"TX4", -92.92519334131234, 93.0},
        {"TX5", -95.68399101934298, 93.0},
        {"TXE", -95.07747855537156, 93.0},
        {"TX3", -92.22848855352973, 94.0},
        {"TX4", -91.74856294756543, 94.0},
        {"TX5", -96.05429763123664, 94.0},
        {"TXE", -95.69795144203567, 94.0},
        {"TX3", -93.32241789426315, 95.0},
        {"TX4", -90.28347263498327, 95.0},
        {"TX5", -96.44335295784272, 95.0},
        {"TXE", -96.27477854557746, 95.0},
        {"TX3", -94.24732197320843, 96.0},
        {"TX4", -88.34091155228091, 96.0},
        {"TX5", -96.83974716330916, 96.0},
        {"TXE", -96.81093758527038, 96.0},
        {"TX3", -95.0485103289437, 97.0},
        {"TX4", -85.45024419889619, 97.0},
        {"TX5", -97.23539581303325, 97.0},
        {"TXE", -97.3100887504536, 97.0},
        {"TX3", -95.75520854287387, 98.0},
        {"TX4", -79.6612935471154, 98.0},
        {"TX5", -97.62487755131276, 98.0},
        {"TXE", -97.77592457791803, 98.0}};

    // True trajectory: mapping {sec -> position}
    std::map<int, Point> trueTrajectory = {
        {0, Point{55.692971, 37.347048}},
        {1, Point{55.69297083462824, 37.34706552940632}},
        {2, Point{55.69297066925648, 37.347083058812636}},
        {3, Point{55.69297050388472, 37.34710058821896}},
        {4, Point{55.69297033851297, 37.34711811762528}},
        {5, Point{55.69297017314121, 37.34713564703159}},
        {6, Point{55.69297000776945, 37.347153176437914}},
        {7, Point{55.692969842397694, 37.34717070584423}},
        {8, Point{55.692969677025935, 37.34718823525055}},
        {9, Point{55.69296951165418, 37.34720576465687}},
        {10, Point{55.69296934628242, 37.347223294063184}},
        {11, Point{55.692969180910666, 37.347240823469505}},
        {12, Point{55.69296901553891, 37.347258352875826}},
        {13, Point{55.6929593372737, 37.34726379994854}},
        {14, Point{55.6929496745474, 37.34726759989709}},
        {15, Point{55.69294001182109, 37.34727139984564}},
        {16, Point{55.692930349094794, 37.34727519979418}},
        {17, Point{55.692920686368495, 37.34727899974273}},
        {18, Point{55.692911023642196, 37.34728279969127}},
        {19, Point{55.6929013609159, 37.347286599639816}},
        {20, Point{55.69289169818959, 37.34729039958837}},
        {21, Point{55.69288203546329, 37.34729419953691}},
        {22, Point{55.69287016228904, 37.34729306759249}},
        {23, Point{55.69286032457807, 37.34729113518498}},
        {24, Point{55.69285048686711, 37.34728920277747}},
        {25, Point{55.692840649156146, 37.34728727036996}},
        {26, Point{55.692830811445184, 37.34728533796245}},
        {27, Point{55.692820973734214, 37.34728340555494}},
        {28, Point{55.69281113602325, 37.347281473147426}},
        {29, Point{55.69280129831229, 37.34727954073991}},
        {30, Point{55.69279146060132, 37.347277608332405}},
        {31, Point{55.69278162289036, 37.34727567592489}},
        {32, Point{55.692771785179396, 37.347273743517384}},
        {33, Point{55.69277550003, 37.34728444072373}},
        {34, Point{55.69278300006001, 37.34729588144747}},
        {35, Point{55.69279050009001, 37.347307322171204}},
        {36, Point{55.692798000120014, 37.347318762894936}},
        {37, Point{55.692805500150016, 37.34733020361867}},
        {38, Point{55.692813000180024, 37.34734164434241}},
        {39, Point{55.692820500210026, 37.34735308506614}},
        {40, Point{55.69282800024003, 37.34736452578987}},
        {41, Point{55.69283550027003, 37.34737596651361}},
        {42, Point{55.69284300030004, 37.34738740723734}},
        {43, Point{55.69285050033004, 37.347398847961074}},
        {44, Point{55.69285800036004, 37.347410288684806}},
        {45, Point{55.69286550039004, 37.347421729408545}},
        {46, Point{55.69287300042005, 37.34743317013228}},
        {47, Point{55.69288050045005, 37.34744461085601}},
        {48, Point{55.69287610197961, 37.347453}},
        {49, Point{55.69286620395921, 37.347453}},
        {50, Point{55.69285630593881, 37.347453}},
        {51, Point{55.69284640791842, 37.347453}},
        {52, Point{55.69283650989802, 37.347453}},
        {53, Point{55.69282661187763, 37.347453}},
        {54, Point{55.69281671385723, 37.347453}},
        {55, Point{55.69280681583683, 37.347453}},
        {56, Point{55.69279691781644, 37.347453}},
        {57, Point{55.69278701979604, 37.347453}},
        {58, Point{55.69277712177565, 37.347453}},
        {59, Point{55.69276722375525, 37.347453}},
        {60, Point{55.692764518924896, 37.34747051113373}},
        {61, Point{55.6927640378498, 37.34748802226745}},
        {62, Point{55.69276355677469, 37.347505533401176}},
        {63, Point{55.69276307569959, 37.3475230445349}},
        {64, Point{55.69276259462449, 37.34754055566862}},
        {65, Point{55.692762113549385, 37.34755806680235}},
        {66, Point{55.69276163247429, 37.34757557793608}},
        {67, Point{55.69276115139918, 37.347593089069804}},
        {68, Point{55.69276067032408, 37.347610600203524}},
        {69, Point{55.69276018924898, 37.34762811133725}},
        {70, Point{55.69276988320679, 37.34763404118143}},
        {71, Point{55.69277976641359, 37.34763308236286}},
        {72, Point{55.69278964962038, 37.34763212354429}},
        {73, Point{55.69279953282717, 37.34763116472572}},
        {74, Point{55.69280941603397, 37.34763020590715}},
        {75, Point{55.69281929924077, 37.347629247088584}},
        {76, Point{55.69282918244756, 37.34762828827001}},
        {77, Point{55.692839065654354, 37.34762732945144}},
        {78, Point{55.69284894886115, 37.347626370632874}},
        {79, Point{55.69285883206794, 37.347625411814306}},
        {80, Point{55.692868715274734, 37.34762445299574}},
        {81, Point{55.69287859848153, 37.347623494177164}},
        {82, Point{55.69288848168832, 37.347622535358596}},
        {83, Point{55.69290388794005, 37.347621208964796}},
        {84, Point{55.6929137758801, 37.34762041792959}},
        {85, Point{55.692923663820146, 37.34761962689439}},
        {86, Point{55.6929335517602, 37.34761883585919}},
        {87, Point{55.692943439700244, 37.34761804482398}},
        {88, Point{55.69295332764029, 37.347617253788776}},
        {89, Point{55.69296321558034, 37.34761646275358}},
        {90, Point{55.692970351964235, 37.347633367540595}},
        {91, Point{55.69297170392847, 37.34765073508119}},
        {92, Point{55.692973055892715, 37.34766810262179}},
        {93, Point{55.69297440785695, 37.34768547016238}},
        {94, Point{55.69297575982119, 37.347702837702975}},
        {95, Point{55.692977111785424, 37.34772020524357}},
        {96, Point{55.69297846374967, 37.34773757278416}},
        {97, Point{55.692979815713905, 37.34775494032476}},
        {98, Point{55.69298116767814, 37.347772307865355}}};

    // Creating measurements for 98 seconds interval
    TransmitterMeasurements txMsrs;
    for(const auto& entry : txMeasurements) {
        txMsrs.push_back({
            entry.txId,
            TransmitterType::BEACON,
            entry.rssi,
            Timestamp(std::chrono::milliseconds(static_cast<int>(entry.time * 1000)))});
    }

    double errorSum = 0.0;
    size_t errorCount = 0;

    for(const auto& txMsr : txMsrs) {
        auto ms = std::chrono::duration_cast<std::chrono::milliseconds>(txMsr.timestamp.time_since_epoch()).count();
        auto position = test.client->position({txMsr}, {}, txMsr.timestamp);

        if (position) {
            if (ms % 1000 == 0) {
                auto truePosition = trueTrajectory.at(ms / 1000);
                double error = geoDistance(
                    Point{position->latitude, position->longitude},
                    truePosition);

                INFO() << "POSITION for time=" << ms << ": "
                       << position->latitude << ", " << position->longitude << ", error=" << error;

                errorSum += error;
                errorCount++;
            }
        }
    }

    const double errorAvg = errorSum / std::max<size_t>(errorCount, 1);
    INFO() << "AVERAGE ERROR: " << errorAvg;

    BOOST_CHECK_EQUAL(
        errorAvg <= accuracyThreshold,
        true);
}
