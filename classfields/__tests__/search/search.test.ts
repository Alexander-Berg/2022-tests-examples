/* eslint-disable max-len */
import { descriptionBuild, extraTextBuild, footerTextBuild, titleBuild } from '../../search';

import { mockState } from './mock';

test('–ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –¥–µ—Å–∫—Ä–∏–ø—à–Ω —Å —ç–º–æ–¥–∑–∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –≥–µ–æ', () => {
    const {
        searchParams,
        pageType,
        refinements,
        user,
        totalOffers,
        infoAboutTotalItems
    } = mockState;
    const description = descriptionBuild(
        searchParams,
        pageType,
        refinements,
        {},
        user,
        totalOffers,

        infoAboutTotalItems
    );

    expect(description).toBe(
        'üè† 1¬†245 —Å–≤–µ–∂–∏—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –ø–æ –ø—Ä–æ–¥–∞–∂–µ –∫–≤–∞—Ä—Ç–∏—Ä. ‚ûú –ö—É–ø–∏—Ç–µ —Å–≤–æ—é –ª—É—á—à—É—é –∫–≤–∞—Ä—Ç–∏—Ä—É –ø–æ —Ü–µ–Ω–µ –æ—Ç 55¬†555 ‚ÇΩ –∏–∑ 1¬†245 –æ–±—ä—è–≤–ª–µ–Ω–∏–π –ø–æ –ø—Ä–æ–¥–∞–∂–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ '
    );
});

test('–ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –¥–µ—Å–∫—Ä–∏–ø—à–Ω —Å —ç–º–æ–¥–∑–∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –≥–µ–æ –±–µ–∑ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã', () => {
    const { searchParams, pageType, refinements, user, totalOffers } = mockState;

    const description = descriptionBuild(
        searchParams,
        pageType,
        refinements,
        {},
        user,
        totalOffers,
        null
    );

    expect(description).toBe(
        'üè† 1¬†245 —Å–≤–µ–∂–∏—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –ø–æ –ø—Ä–æ–¥–∞–∂–µ –∫–≤–∞—Ä—Ç–∏—Ä. ‚ûú –ö—É–ø–∏—Ç–µ —Å–≤–æ—é –ª—É—á—à—É—é –∫–≤–∞—Ä—Ç–∏—Ä—É. –û–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ –ø—Ä–æ–¥–∞–∂–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ '
    );
});

test('–ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –¥–µ—Å–∫—Ä–∏–ø—à–Ω —Å —ç–º–æ–¥–∑–∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –≥–µ–æ –Ω–∞ –ø—É—Å—Ç–æ–º –ª–∏—Å—Ç–∏–Ω–≥–µ', () => {
    const { searchParams, pageType, refinements, user, infoAboutTotalItems } = mockState;
    const description = descriptionBuild(
        searchParams,
        pageType,
        refinements,
        {},
        user,
        0,
        infoAboutTotalItems
    );

    expect(description).toBe(
        'üè† –û–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ –ø—Ä–æ–¥–∞–∂–µ –∫–≤–∞—Ä—Ç–∏—Ä. ‚ûú –ö—É–ø–∏—Ç–µ —Å–≤–æ—é –ª—É—á—à—É—é –∫–≤–∞—Ä—Ç–∏—Ä—É. –û–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ –ø—Ä–æ–¥–∞–∂–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ '
    );
});

describe('–°–µ–æ —Ç–µ–∫—Å—Ç—ã –Ω–∞ –ª–∏—Å—Ç–∏–Ω–≥ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —É–ª–∏—Ü–∞ + –¥–æ–º', () => {
    test('–¥–ª—è –ø–æ–∫—É–ø–∫–∏ –Ω–µ–¥–≤–∏–∂–º–æ—Å—Ç–∏', () => {
        const { searchParams, pageType, geo, user, infoAboutTotalItems } = mockState;

        const modifiedSearchParams = {
            ...searchParams,
            streetId: 62613,
            streetName: 'ulica-arbat',
            buildingIds: '8017417998175267261',
            houseNumber: '24',
        };

        const refinements = {
            street: {
                _name: 'street',
                shortName: '1 —É–ª–∏—Ü–∞',
                name: '–∞–¥—Ä–µ—Å',
                list: [
                    {
                        name: '—É–ª–∏—Ü–∞ –ê—Ä–±–∞—Ç',
                        id: 62613,
                        buildingIds: '8017417998175267261',
                        houseNumber: '24',
                    },
                ],
            },
        };

        const description = descriptionBuild(
            modifiedSearchParams,
            pageType,
            refinements,
            geo,
            user,
            12,
            infoAboutTotalItems
        );

        const title = titleBuild(modifiedSearchParams, refinements, geo, user, 12);
        const footerText = footerTextBuild(modifiedSearchParams, refinements, geo, user, 12, infoAboutTotalItems);
        const extraText = extraTextBuild(modifiedSearchParams, refinements, geo, user, 12, infoAboutTotalItems);

        expect(title).toBe(
            '–ö—É–ø–∏—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É - —É–ª–∏—Ü–∞ –ê—Ä–±–∞—Ç, –¥–æ–º 24, –ú–æ—Å–∫–≤–∞ - –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ –ø—Ä–æ–¥–∞–∂–µ –∫–≤–∞—Ä—Ç–∏—Ä –Ω–∞ —Å–∞–π—Ç–µ –Ø–Ω–¥–µ–∫—Å.–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å'
        );
        expect(description).toBe(
            'üè† –û–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ –ø—Ä–æ–¥–∞–∂–µ –∫–≤–∞—Ä—Ç–∏—Ä - —É–ª–∏—Ü–∞ –ê—Ä–±–∞—Ç, –¥–æ–º 24, –ú–æ—Å–∫–≤–∞. ‚ûú –ö—É–ø–∏—Ç–µ —Å–≤–æ—é –ª—É—á—à—É—é –∫–≤–∞—Ä—Ç–∏—Ä—É –ø–æ —Ü–µ–Ω–µ –æ—Ç 55¬†555 ‚ÇΩ –∏–∑ 12 –æ–±—ä—è–≤–ª–µ–Ω–∏–π –ø–æ –ø—Ä–æ–¥–∞–∂–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –≤ –ú–æ—Å–∫–≤–µ'
        );
        expect(footerText).toBe(
            '–ö—É–ø–∏—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É - 12 –æ–±—ä—è–≤–ª–µ–Ω–∏–π –æ—Ç –∞–≥–µ–Ω—Ç—Å—Ç–≤ –∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ –ø–æ –ø—Ä–æ–¥–∞–∂–µ –∫–≤–∞—Ä—Ç–∏—Ä - —É–ª–∏—Ü–∞ –ê—Ä–±–∞—Ç, –¥–æ–º 24, –ú–æ—Å–∫–≤–∞ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏. –í—ã–±–µ—Ä–∏—Ç–µ –ª—É—á—à—É—é –∫–≤–∞—Ä—Ç–∏—Ä—É –≤ –ú–æ—Å–∫–≤–µ –ø–æ —Ü–µ–Ω–µ –æ—Ç 55¬†555 ‚ÇΩ.'
        );
        expect(extraText).toBe(
            '–ö—É–ø–∏—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É - 12 –æ–±—ä—è–≤–ª–µ–Ω–∏–π –æ—Ç –∞–≥–µ–Ω—Ç—Å—Ç–≤ –∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ –ø–æ –ø—Ä–æ–¥–∞–∂–µ –∫–≤–∞—Ä—Ç–∏—Ä - —É–ª–∏—Ü–∞ –ê—Ä–±–∞—Ç, –¥–æ–º 24, –ú–æ—Å–∫–≤–∞ –ø–æ —Ü–µ–Ω–µ –æ—Ç 55¬†555 ‚ÇΩ.'
        );
    });

    test('–¥–ª—è –∞—Ä–µ–Ω–¥—ã –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –ø–æ–º–µ—â–µ–Ω–∏—è', () => {
        const { searchParams, pageType, geo, user, infoAboutTotalItems } = mockState;

        const modifiedSearchParams = {
            ...searchParams,
            category: 'COMMERCIAL',
            type: 'RENT',
            streetId: 164249,
            streetName: 'ulica-chayanova',
            buildingIds: '8732880288045867978',
            houseNumber: '7',
        };

        const refinements = {
            street: {
                _name: 'street',
                shortName: '1 —É–ª–∏—Ü–∞',
                name: '–∞–¥—Ä–µ—Å',
                list: [
                    {
                        name: '—É–ª–∏—Ü–∞ –ß–∞—è–Ω–æ–≤–∞',
                        id: 164249,
                        buildingIds: '8732880288045867978',
                        houseNumber: '7',
                    },
                ],
            },
        };

        const description = descriptionBuild(
            modifiedSearchParams,
            pageType,
            refinements,
            geo,
            user,
            24,
            infoAboutTotalItems
        );

        const title = titleBuild(modifiedSearchParams, refinements, geo, user, 24);
        const footerText = footerTextBuild(modifiedSearchParams, refinements, geo, user, 24, infoAboutTotalItems);
        const extraText = extraTextBuild(modifiedSearchParams, refinements, geo, user, 24, infoAboutTotalItems);

        expect(title).toBe(
            '–°–Ω—è—Ç—å –∫–æ–º–º–µ—Ä—á–µ—Å–∫—É—é –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å - —É–ª–∏—Ü–∞ –ß–∞—è–Ω–æ–≤–∞, –¥–æ–º 7, –ú–æ—Å–∫–≤–∞ - –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ –∞—Ä–µ–Ω–¥–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –Ω–∞ —Å–∞–π—Ç–µ –Ø–Ω–¥–µ–∫—Å.–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å'
        );
        expect(description).toBe(
            'üè¢ –û–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ –∞—Ä–µ–Ω–¥–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ - —É–ª–∏—Ü–∞ –ß–∞—è–Ω–æ–≤–∞, –¥–æ–º 7, –ú–æ—Å–∫–≤–∞. ‚ûú –°–Ω–∏–º–∏—Ç–µ —Å–≤–æ—é –ª—É—á—à—É—é –∫–æ–º–º–µ—Ä—á–µ—Å–∫—É—é –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –ø–æ —Ü–µ–Ω–µ –æ—Ç 55¬†555 ‚ÇΩ –∏–∑ 24 –æ–±—ä—è–≤–ª–µ–Ω–∏–π –ø–æ –∞—Ä–µ–Ω–¥–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –≤ –ú–æ—Å–∫–≤–µ'
        );
        expect(footerText).toBe(
            '–°–Ω—è—Ç—å –∫–æ–º–º–µ—Ä—á–µ—Å–∫—É—é –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å - 24 –æ–±—ä—è–≤–ª–µ–Ω–∏—è –æ—Ç –∞–≥–µ–Ω—Ç—Å—Ç–≤ –∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ –ø–æ –∞—Ä–µ–Ω–¥–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ - —É–ª–∏—Ü–∞ –ß–∞—è–Ω–æ–≤–∞, –¥–æ–º 7, –ú–æ—Å–∫–≤–∞ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏. –í—ã–±–µ—Ä–∏—Ç–µ –ª—É—á—à—É—é –∫–æ–º–º–µ—Ä—á–µ—Å–∫—É—é –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –≤ –ú–æ—Å–∫–≤–µ –ø–æ —Ü–µ–Ω–µ –æ—Ç 55¬†555 ‚ÇΩ –≤ –º–µ—Å—è—Ü.'
        );
        expect(extraText).toBe(
            '–°–Ω—è—Ç—å –∫–æ–º–º–µ—Ä—á–µ—Å–∫—É—é –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å - 24 –æ–±—ä—è–≤–ª–µ–Ω–∏—è –æ—Ç –∞–≥–µ–Ω—Ç—Å—Ç–≤ –∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ –ø–æ –∞—Ä–µ–Ω–¥–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ - —É–ª–∏—Ü–∞ –ß–∞—è–Ω–æ–≤–∞, –¥–æ–º 7, –ú–æ—Å–∫–≤–∞ –ø–æ —Ü–µ–Ω–µ –æ—Ç 55¬†555 ‚ÇΩ –≤ –º–µ—Å—è—Ü.'
        );
    });
});
