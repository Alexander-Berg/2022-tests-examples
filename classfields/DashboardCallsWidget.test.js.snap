// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renderCharts: должен вернуть графики звонков 1`] = `
<React.Fragment>
  <DashboardWidgetLineChart
    animation={true}
    backgroundColor="#E0F1DD"
    borderColor="#96CF8C"
    chartData={Array []}
    className="DashboardCallsWidget__common"
    height={132}
    margin={
      Object {
        "bottom": 0,
        "left": 20,
        "right": 30,
        "top": 20,
      }
    }
    showAxis={true}
    showTooltip={true}
    thickness={4}
    width={372}
  />
  <div
    className="DashboardCallsWidget__detailed"
  >
    <div
      className="DashboardCallsWidget__received"
    >
      <div
        className="DashboardCallsWidget__detailedTitle"
      >
        Принято
      </div>
      <div
        className="DashboardCallsWidget__detailedSubtitle"
      >
        <IconSvg
          className="DashboardCallsWidget__icon"
          id="svgID"
          size="16"
        />
      </div>
      <DashboardWidgetLineChart
        animation={true}
        backgroundColor="#E0F1DD"
        borderColor="#96CF8C"
        chartData={Array []}
        height={35}
        margin={
          Object {
            "bottom": 4,
            "left": 0,
            "right": 0,
            "top": 8,
          }
        }
        showAxis={false}
        showTooltip={false}
        thickness={3}
        width={150}
      />
    </div>
    <div
      className="DashboardCallsWidget__missing"
    >
      <div
        className="DashboardCallsWidget__detailedTitle"
      >
        Пропущено
      </div>
      <div
        className="DashboardCallsWidget__detailedSubtitle"
      >
        <IconSvg
          className="DashboardCallsWidget__icon"
          id="svgID"
          size="16"
        />
      </div>
      <DashboardWidgetLineChart
        animation={true}
        backgroundColor="rgba(229, 115, 103, 0.3)"
        borderColor="#E57367"
        chartData={Array []}
        height={35}
        margin={
          Object {
            "bottom": 4,
            "left": 0,
            "right": 0,
            "top": 8,
          }
        }
        showAxis={false}
        showTooltip={false}
        thickness={3}
        width={150}
      />
    </div>
  </div>
</React.Fragment>
`;

exports[`renderNoCallTrackingPlaceholder: должен вернуть DashboardWidgetAlert c корретными параметрами 1`] = `
<DashboardWidgetAlert
  buttonText="Подключить"
  disabled={true}
  hasButton={true}
  hasIcon={true}
  message="для отслеживания звонков подключите коллтрекинг. это бесплатно"
  onButtonClick={[Function]}
/>
`;

exports[`renderNoOffersPlaceholder: должен вернуть DashboardWidgetAlert c корретными параметрами 1`] = `
<DashboardWidgetAlert
  message="После добавления объявлений здесь будет отображаться статистика принятых и пропущенных вызовов"
/>
`;

exports[`renderNoStatsPlaceholder: должен вернуть DashboardWidgetAlert c корретными параметрами 1`] = `
<DashboardWidgetAlert
  hasIcon={true}
  message="Звонков не поступало. Добавляйте больше фотографий, продвигайте объявления"
/>
`;

exports[`должен вернуть DashboardCallsWidget 1`] = `
<DashboardWidget>
  <DashboardWidgetHeader
    conversion={
      Object {
        "tooltip": "Как часто вам звонят пользователи, смотревшие номер телефона",
        "value": 0,
      }
    }
    title="Звонки"
    total="20"
  />
  DashboardCallsWidgetCharts
  <DashboardWidgetButton
    text="Подробнее"
  />
</DashboardWidget>
`;
