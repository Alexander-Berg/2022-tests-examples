include "realty-common.conf"

app.name = "realty-abram"
app.branch.name = ${?_DEPLOY_BRANCH}

initialization.duration = 280 seconds

http.port = 1080
http.port = ${?API_PORT} //override from env
ops.port = 1081
ops.port = ${?OPS_PORT} //override from env

zookeeper {
  connect-string = ${realty.seller.zookeeper.connect-string}
  connect-string = ${?ZOOKEEPER_HOSTS}
}


akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = INFO
  log-config-on-start = off
  stdout-loglevel = WARNING

  http.server.parsing.max-content-length = "10m"
  http.server.parsing.max-uri-length = "10k"
}

curator {
  zookeeper-connect-string = ${zookeeper.connect-string}
  zookeeper-connect-string = ${?ZOOKEEPER_HOSTS}
  sessionTimeoutMs = 30000
  connectTimeoutMs = 5000
  namespace = "realty/production"
  retry {
    policy = "BoundedExponentialBackoffRetry"
    baseSleepTimeMs = 1000
    maxSleepTimeMs = 600000
    maxRetries = 29
  }
}

jaeger.agent {
  host = ${_DEPLOY_TRACING_ADDR}
  port = ${_DEPLOY_TRACING_COMPACT_PORT}
}

tvm2 = null

realty {
  extdata {
    remote.url = ${?realty.abram.extdata.remote.url}
    remote.url = ${?EDS_URL}
    barrier.value = 240
  }
  api {
    vos {
      host = ${?realty.abram.api.vos.host}
      host = ${?VOS_HOST}

      port = ${?realty.abram.api.vos.port}
      port = ${?VOS_PORT}
    }
  }
  cadastr {
    host = ${CADASTR_HOST}
    port = ${CADASTR_PORT}
  }
  seller {
    host = ${?SELLER_HOST}
    port = ${?SELLER_PORT}
  }
}

common.alloc.folder = /alloc/data/
