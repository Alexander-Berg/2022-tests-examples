// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`должен отрендерить компонент в режиме просмотра 1`] = `
<div
  className="MapModalContent"
>
  <div
    className="MapModalContent__top"
  >
    <div
      className="MapModalContent__address"
    />
  </div>
  <withYMapsContext(withYMaps(n))
    height="100%"
    modules={
      Array [
        "geocode",
        "suggest",
      ]
    }
    onLoad={[Function]}
    options={
      Object {
        "autoFitToViewport": "always",
        "copyrightUaVisible": false,
        "suppressMapOpenBlock": true,
        "yandexMapDisablePoiInteractivity": true,
      }
    }
    state={
      Object {
        "center": Array [
          59.02,
          54.65,
        ],
        "controls": Array [],
        "zoom": 16,
      }
    }
    width="100%"
  >
    <withParentContext(withYMapsContext(withYMaps(Re)))
      options={
        Object {
          "layout": "round#zoomLayout",
          "position": Object {
            "right": 20,
            "top": 20,
          },
        }
      }
    />
    <withParentContext(withYMapsContext(withYMaps(We)))
      geometry={
        Object {
          "coordinates": Array [
            59.02,
            54.65,
          ],
          "type": "Point",
        }
      }
      options={
        Object {
          "draggable": false,
          "preset": "islands#blueDotIcon",
        }
      }
    />
  </withYMapsContext(withYMaps(n))>
</div>
`;

exports[`должен отрендерить компонент в режиме редактирования 1`] = `
<div
  className="MapModalContent"
>
  <div
    className="MapModalContent__top"
  >
    <MapModalAddressSuggest
      api={null}
      on_select={[Function]}
    />
  </div>
  <withYMapsContext(withYMaps(n))
    height="100%"
    modules={
      Array [
        "geocode",
        "suggest",
      ]
    }
    onLoad={[Function]}
    options={
      Object {
        "autoFitToViewport": "always",
        "copyrightUaVisible": false,
        "suppressMapOpenBlock": true,
        "yandexMapDisablePoiInteractivity": true,
      }
    }
    state={
      Object {
        "center": Array [
          59.02,
          54.65,
        ],
        "controls": Array [],
        "zoom": 16,
      }
    }
    width="100%"
  >
    <withParentContext(withYMapsContext(withYMaps(Re)))
      options={
        Object {
          "layout": "round#zoomLayout",
          "position": Object {
            "right": 20,
            "top": 20,
          },
        }
      }
    />
    <withParentContext(withYMapsContext(withYMaps(We)))
      geometry={
        Object {
          "coordinates": Array [
            59.02,
            54.65,
          ],
          "type": "Point",
        }
      }
      onDragEnd={[Function]}
      options={
        Object {
          "draggable": true,
          "preset": "islands#blueDotIcon",
        }
      }
    />
  </withYMapsContext(withYMaps(n))>
  <div
    className="MapModalContent__bottom"
  >
    <div
      className="MapModalContent__address"
    />
    <Button
      className="MapModalContent__send-button"
      color="green"
      disabled={false}
      onClick={[Function]}
      size="l"
      type="button"
      width="full"
    >
      Отправить местоположение
    </Button>
  </div>
</div>
`;
