package ru.yandex.vos2.autoru.model.extdata

import java.io.StringReader

import org.scalatest.funsuite.AnyFunSuite
import org.testcontainers.shaded.org.apache.commons.io.input.ReaderInputStream
import ru.yandex.vos2.autoru.utils.TestDataEngine
import ru.yandex.vos2.autoru.utils.geo.Tree

/**
  * Author: Vladislav Dolbilov (darl@yandex-team.ru)
  * Created: 10/10/2019
  */
class LicensePlateValidationDictionaryTest extends AnyFunSuite {

  val data =
    """[{
               |    "name": "grz_validation",
               |    "fullName": "/vertis-moderation/autoru/grz_validation",
               |    "flushDate": "2019-09-09T14:29:05.244Z",
               |    "version": 12,
               |    "mime": "application/json; charset=utf-8",
               |    "content": {
               |   "geo_ids":{
               |      "1":{
               |         "text_waiting_for_photo":"–û–π, –Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è—Ö –≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ {offer_name} –Ω–µ –≤–∏–¥–Ω–æ –≥–æ—Å–Ω–æ–º–µ—Ä–∞ üòï –ë–µ–∑ –Ω–µ–≥–æ –º—ã –Ω–µ –º–æ–∂–µ–º —Å—Ä–∞–≤–Ω–∏—Ç—å —Ñ–æ—Ç–æ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º, –≤—Å—ë –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ —Å —á–∏—Å—Ç—ã–º —Å–µ—Ä–¥—Ü–µ–º –æ—Ç–ø—É—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å–∞–π—Ç.\n\n–ù–æ —ç—Ç–æ –ª–µ–≥–∫–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å. –°–¥–µ–ª–∞–π—Ç–µ —Å–Ω–∏–º–æ–∫, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç —Ö–æ—Ä–æ—à–æ –≤–∏–¥–Ω—ã –∞–≤—Ç–æ –∏ –µ–≥–æ –≥–æ—Å–Ω–æ–º–µ—Ä, –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ. –ù–æ–º–µ—Ä —Å–∫—Ä–æ–µ—Ç—Å—è –æ—Ç —á—É–∂–∏—Ö –≥–ª–∞–∑ –Ω–∞—à–∏–º –ª–æ–≥–æ, –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π—Ç–µ.\n\n–ù–æ –º–æ–∂–Ω–æ –µ—â—ë –ø—Ä–æ—â–µ ‚Äî –ø—Ä–∏—à–ª–∏—Ç–µ —ç—Ç–æ—Ç —Å–Ω–∏–º–æ–∫ —Å—é–¥–∞, –≤ —á–∞—Ç. –¢–æ–≥–¥–∞ –≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ –æ–Ω–æ –Ω–µ –ø–æ—è–≤–∏—Ç—Å—è –∏ –µ–≥–æ —É–≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ —Å–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏.\n\n–í—Å—ë —ç—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞ –ê–≤—Ç–æ.—Ä—É –ø–æ–ø–∞–¥–∞–ª–∏ —Ç–æ–ª—å–∫–æ –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω—ã–µ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è. –ù–∞–¥–µ–µ–º—Å—è, –≤—ã –Ω–∞—Å –ø–æ–Ω–∏–º–∞–µ—Ç–µ ‚ù§Ô∏è",
               |         "text_check_ok":"–°–ø–∞—Å–∏–±–æ –∑–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é! –ú—ã –ø—Ä–æ–≤–µ—Ä–∏–ª–∏ —Ñ–æ—Ç–æ, –∏ –≤—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ. –í—ã ‚Äî —Å—É–ø–µ—Ä üéâ",
               |         "text_check_failed":"–ú—ã –ø—Ä–æ–≤–µ—Ä–∏–ª–∏ —Ñ–æ—Ç–æ, –Ω–æ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ üåö –î–∞–≤–∞–π—Ç–µ –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑ ‚Äî –¥–æ–±–∞–≤—å—Ç–µ —Å–Ω–∏–º–æ–∫ –≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∏–ª–∏ –ø—Ä–∏—à–ª–∏—Ç–µ —Å—é–¥–∞. –ú–æ–∂–µ—Ç, —Å–µ–π—á–∞—Å –ø–æ–≤–µ–∑—ë—Ç.",
               |         "text_reminder":"–ù–µ –∑–∞–±—ã–ª–∏ –ø—Ä–æ —Ñ–æ—Ç–æ? üßê –ú—ã –µ—â—ë –∂–¥—ë–º —Å–Ω–∏–º–æ–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª—è —Å –≥–æ—Å–Ω–æ–º–µ—Ä–æ–º, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ. –ü—Ä–∏—à–ª–∏—Ç–µ –µ–≥–æ –≤ —á–∞—Ç –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ.",
               |         "sms_reminder":"–ù–µ –∑–∞–±—ã–ª–∏ –ø—Ä–æ —Ñ–æ—Ç–æ? –ú—ã –µ—â—ë –∂–¥—ë–º —Å–Ω–∏–º–æ–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª—è —Å –≥–æ—Å–Ω–æ–º–µ—Ä–æ–º, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ. –ü—Ä–∏—à–ª–∏—Ç–µ –µ–≥–æ –≤ —á–∞—Ç —Å —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ.",
               |         "sending_active":true,
               |         "hiding_vin_report_active":false
               |      },
               |      "default":{
               |         "text_waiting_for_photo":"–û–π, –Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è—Ö –≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ {offer_name} –Ω–µ –≤–∏–¥–Ω–æ –≥–æ—Å–Ω–æ–º–µ—Ä–∞ üòï –ë–µ–∑ –Ω–µ–≥–æ –º—ã –Ω–µ –º–æ–∂–µ–º —Å—Ä–∞–≤–Ω–∏—Ç—å —Ñ–æ—Ç–æ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º, –≤—Å—ë –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ —Å —á–∏—Å—Ç—ã–º —Å–µ—Ä–¥—Ü–µ–º –æ—Ç–ø—É—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å–∞–π—Ç.\n\n–ù–æ —ç—Ç–æ –ª–µ–≥–∫–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å. –°–¥–µ–ª–∞–π—Ç–µ —Å–Ω–∏–º–æ–∫, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç —Ö–æ—Ä–æ—à–æ –≤–∏–¥–Ω—ã –∞–≤—Ç–æ –∏ –µ–≥–æ –≥–æ—Å–Ω–æ–º–µ—Ä, –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ. –ù–æ–º–µ—Ä —Å–∫—Ä–æ–µ—Ç—Å—è –æ—Ç —á—É–∂–∏—Ö –≥–ª–∞–∑ –Ω–∞—à–∏–º –ª–æ–≥–æ, –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π—Ç–µ.\n\n–ù–æ –º–æ–∂–Ω–æ –µ—â—ë –ø—Ä–æ—â–µ ‚Äî –ø—Ä–∏—à–ª–∏—Ç–µ —ç—Ç–æ—Ç —Å–Ω–∏–º–æ–∫ —Å—é–¥–∞, –≤ —á–∞—Ç. –¢–æ–≥–¥–∞ –≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ –æ–Ω–æ –Ω–µ –ø–æ—è–≤–∏—Ç—Å—è –∏ –µ–≥–æ —É–≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ —Å–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏.\n\n–í—Å—ë —ç—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞ –ê–≤—Ç–æ.—Ä—É –ø–æ–ø–∞–¥–∞–ª–∏ —Ç–æ–ª—å–∫–æ –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω—ã–µ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è. –ù–∞–¥–µ–µ–º—Å—è, –≤—ã –Ω–∞—Å –ø–æ–Ω–∏–º–∞–µ—Ç–µ ‚ù§Ô∏è",
               |         "text_check_ok":"–°–ø–∞—Å–∏–±–æ –∑–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é! –ú—ã –ø—Ä–æ–≤–µ—Ä–∏–ª–∏ —Ñ–æ—Ç–æ, –∏ –≤—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ. –í—ã ‚Äî —Å—É–ø–µ—Ä üéâ",
               |         "text_check_failed":"–ú—ã –ø—Ä–æ–≤–µ—Ä–∏–ª–∏ —Ñ–æ—Ç–æ, –Ω–æ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ üåö –î–∞–≤–∞–π—Ç–µ –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑ ‚Äî –¥–æ–±–∞–≤—å—Ç–µ —Å–Ω–∏–º–æ–∫ –≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∏–ª–∏ –ø—Ä–∏—à–ª–∏—Ç–µ —Å—é–¥–∞. –ú–æ–∂–µ—Ç, —Å–µ–π—á–∞—Å –ø–æ–≤–µ–∑—ë—Ç.",
               |         "text_reminder":"–ù–µ –∑–∞–±—ã–ª–∏ –ø—Ä–æ —Ñ–æ—Ç–æ? üßê –ú—ã –µ—â—ë –∂–¥—ë–º —Å–Ω–∏–º–æ–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª—è —Å –≥–æ—Å–Ω–æ–º–µ—Ä–æ–º, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ. –ü—Ä–∏—à–ª–∏—Ç–µ –µ–≥–æ –≤ —á–∞—Ç –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ.",
               |         "sms_reminder":"–ù–µ –∑–∞–±—ã–ª–∏ –ø—Ä–æ —Ñ–æ—Ç–æ? –ú—ã –µ—â—ë –∂–¥—ë–º —Å–Ω–∏–º–æ–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª—è —Å –≥–æ—Å–Ω–æ–º–µ—Ä–æ–º, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ. –ü—Ä–∏—à–ª–∏—Ç–µ –µ–≥–æ –≤ —á–∞—Ç —Å —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ.",
               |         "sending_active":true,
               |         "hiding_vin_report_active":false
               |      }
               |   },
               |   "vin_report_error_text":"–ú—ã –Ω–µ —Å–º–æ–≥–ª–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ VIN –≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—é –Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è—Ö, –ø–æ—ç—Ç–æ–º—É –æ—Ç—á—ë—Ç–∞ –Ω–µ—Ç. –ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã."
               |}
               |}]""".stripMargin
  test("parse json from bunker") {
    LicensePlateValidationDictionary.parse(new ReaderInputStream(new StringReader(data), "utf-8"))
  }

  test("get settings by region") {
    val dict = LicensePlateValidationDictionary.parse(new ReaderInputStream(new StringReader(data), "utf-8"))
    assert(dict.getSettings(1, Tree.from(TestDataEngine)).sendingActive)
  }
}
