package ru.yandex.realty.microdistricts

import com.vividsolutions.jts.io.WKTReader
import ru.yandex.extdata.core.lego.Provider
import ru.yandex.realty.geosrc.ToponymsStorage
import ru.yandex.realty.model.geosrc.{Envelope, Name, Toponym}
import ru.yandex.realty.util.geometry.Converter
import ru.yandex.realty.model.location.GeoPoint

trait MicroDistrictsTestComponents {
  def microDistrictsProvider: Provider[ToponymsStorage] = MicroDistrictsTestComponents.microDistrictsProvider
}

object MicroDistrictsTestComponents {
  private lazy val wktReader = new WKTReader

  val gbiGeometry =
    """POLYGON ((60.6678230 56.8307360, 60.6719130 56.8312920, 60.6724040 56.8313510, 60.6718530 56.8317270, 60.6712480 56.8322730, 60.6708970 56.8326950, 60.6705700 56.8332170, 60.6703340 56.8336270, 60.6700870 56.8345030, 60.6689550 56.8380430,
    60.6688850 56.8383370, 60.6688370 56.8386010, 60.6688420 56.8391830, 60.6690140 56.8398440, 60.6691110 56.8404050, 60.6692180 56.8416630, 60.6692070 56.8418450, 60.6689580 56.8437920, 60.6687430 56.8445680, 60.6687630 56.8459800,
    60.6688080 56.8469760, 60.6688930 56.8473370, 60.6690650 56.8477550, 60.6695900 56.8486440, 60.6697030 56.8489510, 60.6714300 56.8513830, 60.6717840 56.8518770, 60.6723090 56.8518180, 60.6729320 56.8528230, 60.6732100 56.8528940,
    60.6746470 56.8515000, 60.6753680 56.8507810, 60.6756710 56.8506090, 60.6760340 56.8503960, 60.6776390 56.8497210, 60.6822930 56.8477190, 60.6888360 56.8449430, 60.6918830 56.8450370, 60.6999720 56.8451900, 60.7022890 56.8449430,
    60.7027190 56.8447780, 60.7030410 56.8448840, 60.7054220 56.8447660, 60.7126110 56.8451310, 60.7191120 56.8454130, 60.7219230 56.8451310, 60.7256780 56.8441660, 60.7433170 56.8420730, 60.7319870 56.8284060, 60.7245140 56.8267930,
    60.7219390 56.8262520, 60.7205440 56.8245340, 60.7176430 56.8202110, 60.7153300 56.8169910, 60.7152440 56.8160150, 60.7146010 56.8156150, 60.7143000 56.8151910, 60.7134320 56.8148480, 60.7133260 56.8150290, 60.7122640 56.8153290,
    60.7110730 56.8157410, 60.7108290 56.8158420, 60.7105660 56.8161560, 60.7097510 56.8165560, 60.7072190 56.8172620, 60.7061890 56.8178150, 60.7056100 56.8179560, 60.7042580 56.8164740, 60.7021980 56.8170740, 60.7000950 56.8174500,
    60.6973270 56.8175560, 60.6934220 56.8178270, 60.6880900 56.8183770, 60.6854400 56.8186510, 60.6820280 56.8193920, 60.6802250 56.8200750, 60.6794100 56.8206160, 60.6788740 56.8211920, 60.6787660 56.8217570, 60.6788520 56.8223100,
    60.6791520 56.8228510, 60.6799460 56.8235680, 60.6802030 56.8236910, 60.6806860 56.8240560, 60.6812440 56.8245970, 60.6814960 56.8251300, 60.6816190 56.8257090, 60.6815120 56.8262030, 60.6813190 56.8266390, 60.6809430 56.8270620,
    60.6804820 56.8274390, 60.6798700 56.8277860, 60.6795380 56.8279580, 60.6791190 56.8281060, 60.6783250 56.8283330, 60.6775100 56.8284740, 60.6766730 56.8285440, 60.6756220 56.8285560, 60.6738300 56.8285390, 60.6725210 56.8285830,
    60.6717270 56.8286390, 60.6708470 56.8287960, 60.6700260 56.8290330, 60.6695060 56.8292550, 60.6690290 56.8295170, 60.6685990 56.8298250, 60.6682560 56.8301130, 60.6679860 56.8304570, 60.6678230 56.8307360))"""

  val vtuzgorodorGeometry =
    """POLYGON ((60.6409990 56.8512540, 60.6739290 56.8669180, 60.6738270 56.8661300, 60.6723570 56.8547170, 60.6720860 56.8537640, 60.6680580 56.8482550, 60.6677790 56.8465270, 60.6677680 56.8418590, 60.6675530 56.8353900, 60.6676660 56.8315810,
                                |    60.6676800 56.8311640, 60.6678230 56.8307360, 60.6668560 56.8306080, 60.6667240 56.8306040, 60.6654370 56.8306600, 60.6639130 56.8305080, 60.6631090 56.8305810, 60.6565880 56.8302030, 60.6482520 56.8325790, 60.6490460 56.8336370,
                                |    60.6466860 56.8396950, 60.6444540 56.8455390, 60.6428350 56.8499370, 60.6427370 56.8500880, 60.6426190 56.8501890, 60.6409990 56.8512540))""".stripMargin

  val ugoZapadniyGeometry =
    """POLYGON ((60.5179420 56.8131360, 60.5193260 56.8135010, 60.5197980 56.8138120, 60.5200990 56.8142650, 60.5215070 56.8165290, 60.5236310 56.8161180, 60.5249180 56.8159230, 60.5255510 56.8158700, 60.5261090 56.8159290, 60.5270430 56.8161350,
                                |    60.5299500 56.8168880, 60.5320960 56.8173940, 60.5333730 56.8176000, 60.5343920 56.8177120, 60.5351210 56.8178890, 60.5364730 56.8184770, 60.5374170 56.8188240, 60.5384590 56.8191770, 60.5429540 56.8170710, 60.5474040 56.8184840,
                                |    60.5446650 56.8208640, 60.5469090 56.8225320, 60.5469170 56.8229340, 60.5484900 56.8241950, 60.5492190 56.8245430, 60.5503670 56.8248900, 60.5522660 56.8253190, 60.5527270 56.8253500, 60.5543140 56.8254330, 60.5564990 56.8255970,
                                |    60.5573340 56.8256410, 60.5584600 56.8260510, 60.5596020 56.8265810, 60.5613610 56.8269120, 60.5672910 56.8280160, 60.5686960 56.8284730, 60.5720860 56.8296380, 60.5752400 56.8310020, 60.5767850 56.8318020, 60.5777510 56.8326260,
                                |    60.5780300 56.8331310, 60.5782440 56.8337670, 60.5781370 56.8342490, 60.5777300 56.8354420, 60.5787570 56.8354760, 60.5819920 56.8361300, 60.5821130 56.8358180, 60.5826920 56.8343160, 60.5828200 56.8340600, 60.5836140 56.8321110,
                                |    60.5845680 56.8293160, 60.5857690 56.8252870, 60.5862360 56.8240950, 60.5867570 56.8229030, 60.5882250 56.8184980, 60.5883250 56.8181360, 60.5884680 56.8172440, 60.5884970 56.8170960, 60.5885700 56.8168840, 60.5888810 56.8159110,
                                |    60.5890630 56.8153110, 60.5893780 56.8147350, 60.5896930 56.8140530, 60.5902270 56.8123820, 60.5905130 56.8117830, 60.5906380 56.8117030, 60.5908890 56.8109760, 60.5927490 56.8054680, 60.5948960 56.7993130, 60.5952490 56.7982520,
                                |    60.5959290 56.7961380, 60.5962690 56.7956480, 60.5973020 56.7925070, 60.5973340 56.7924080, 60.5974280 56.7921210, 60.5974800 56.7918150, 60.5975430 56.7914100, 60.5976970 56.7899880, 60.5867080 56.7887700, 60.5847340 56.7886060,
                                |    60.5834680 56.7886060, 60.5825880 56.7887230, 60.5811720 56.7889590, 60.5794340 56.7894540, 60.5782490 56.7899000, 60.5736330 56.7916440, 60.5540400 56.7989850, 60.5492960 56.8008000, 60.5475520 56.8015270, 60.5457860 56.8023250,
                                |    60.5426370 56.8037710, 60.5421870 56.8040360, 60.5419080 56.8042490, 60.5417470 56.8043910, 60.5415860 56.8045920, 60.5413450 56.8049770, 60.5411030 56.8051980, 60.5405660 56.8054340, 60.5399870 56.8056400, 60.5388710 56.8056460,
                                |    60.5379810 56.8056930, 60.5368650 56.8059630, 60.5319690 56.8075570, 60.5273510 56.8091510, 60.5258220 56.8097360, 60.5255850 56.8098880, 60.5243180 56.8104050, 60.5241000 56.8104270, 60.5215680 56.8114600, 60.5183280 56.8129290,
                                |    60.5179420 56.8131360))""".stripMargin

  val elmashGeometry =
    """POLYGON ((60.6106480 56.8809770, 60.6125950 56.8826770, 60.6136840 56.8845650, 60.6140350 56.8990470, 60.6134100 56.9068420, 60.6106950 56.9168420, 60.6136710 56.9273790, 60.6150540 56.9317240, 60.6171050 56.9354680, 60.6171100 56.9364930,
                          |    60.6124440 56.9413220, 60.6135640 56.9415850, 60.6134500 56.9416730, 60.6133580 56.9424060, 60.6137570 56.9430500, 60.6161730 56.9426970, 60.6167990 56.9426830, 60.6173910 56.9427520, 60.6190710 56.9431930, 60.6210730 56.9436020,
                          |    60.6226420 56.9438410, 60.6252860 56.9441650, 60.6283600 56.9440560, 60.6298910 56.9435460, 60.6309640 56.9430770, 60.6316080 56.9425370, 60.6340110 56.9388780, 60.6276150 56.9301750, 60.6425050 56.9241070, 60.6492880 56.9263720,
                          |    60.6540360 56.9222790, 60.6563530 56.9193920, 60.6579410 56.9173030, 60.6601730 56.9157300, 60.6612450 56.9136880, 60.6673820 56.9111290, 60.6604730 56.9071620, 60.6601300 56.8953090, 60.6601300 56.8926340, 60.6620180 56.8931270,
                          |    60.6624470 56.8925400, 60.6623610 56.8919760, 60.6621040 56.8917650, 60.6620610 56.8910600, 60.6634340 56.8909660, 60.6634340 56.8907080, 60.6664810 56.8906840, 60.6661810 56.8872780, 60.6693420 56.8874370, 60.6732050 56.8871320,
                          |    60.6767670 56.8864270, 60.6793420 56.8860510, 60.6810050 56.8853280, 60.6812970 56.8851650, 60.6816660 56.8850210, 60.6818260 56.8849730, 60.6821690 56.8853270, 60.6827830 56.8851810, 60.6836440 56.8849910, 60.6840720 56.8848750,
                          |    60.6838530 56.8845810, 60.6833250 56.8842580, 60.6815840 56.8819260, 60.6814030 56.8819690, 60.6808860 56.8815110, 60.6800810 56.8809870, 60.6792860 56.8804830, 60.6785070 56.8799490, 60.6780270 56.8795060, 60.6771630 56.8785070,
                          |    60.6759350 56.8787600, 60.6755990 56.8782630, 60.6752210 56.8774380, 60.6731880 56.8725180, 60.6730220 56.8714750, 60.6737730 56.8714810, 60.6738810 56.8700680, 60.6734200 56.8682110, 60.6730920 56.8675650, 60.6727000 56.8672260,
                          |    60.6720670 56.8669020, 60.6722280 56.8668030, 60.6718260 56.8666690, 60.6718530 56.8666260, 60.6715800 56.8665320, 60.6715920 56.8664700, 60.6711020 56.8663830, 60.6706280 56.8663400, 60.6701620 56.8663120, 60.6696460 56.8663260,
                          |    60.6686100 56.8664930, 60.6679630 56.8666900, 60.6671400 56.8669980, 60.6664440 56.8673320, 60.6664780 56.8673650, 60.6660140 56.8676790, 60.6660970 56.8677690, 60.6616010 56.8695990, 60.6614290 56.8694900, 60.6551620 56.8720640,
                          |    60.6538690 56.8724490, 60.6537930 56.8724000, 60.6534110 56.8724840, 60.6529540 56.8725570, 60.6521680 56.8726550, 60.6508180 56.8726860, 60.6497690 56.8726040, 60.6489600 56.8724800, 60.6481850 56.8723980, 60.6474950 56.8723350,
                          |    60.6469950 56.8723210, 60.6466000 56.8723180, 60.6459460 56.8723690, 60.6455290 56.8724300, 60.6441090 56.8727330, 60.6296170 56.8760080, 60.6293330 56.8757630, 60.6289320 56.8753710, 60.6288150 56.8752540, 60.6296000 56.8748700,
                          |    60.6321960 56.8736830, 60.6327950 56.8734850, 60.6329240 56.8731440, 60.6329670 56.8716990, 60.6335890 56.8705780, 60.6312850 56.8703590, 60.6299610 56.8694970, 60.6292380 56.8694820, 60.6278910 56.8685730, 60.6244570 56.8670760,
                          |    60.6244610 56.8670060, 60.6213100 56.8658800, 60.6159310 56.8658710, 60.6145680 56.8641940, 60.6141180 56.8636860, 60.6135270 56.8630940, 60.6123180 56.8620190, 60.6121170 56.8627450, 60.6119110 56.8637710, 60.6117930 56.8652590,
                          |    60.6117280 56.8662350, 60.6116370 56.8679630, 60.6115070 56.8694700, 60.6114380 56.8710110, 60.6112860 56.8734070, 60.6110950 56.8757410, 60.6109720 56.8769540, 60.6106930 56.8769370, 60.6106480 56.8809770))""".stripMargin

  val pionerskyGeometry =
    """POLYGON ((60.6123180 56.8620190, 60.6135270 56.8630940, 60.6141180 56.8636860, 60.6145680 56.8641940, 60.6159310 56.8658710, 60.6213100 56.8658800, 60.6244610 56.8670060, 60.6244570 56.8670760, 60.6278910 56.8685730, 60.6292380 56.8694820,
                              |    60.6299610 56.8694970, 60.6312850 56.8703590, 60.6335890 56.8705780, 60.6329670 56.8716990, 60.6329240 56.8731440, 60.6327950 56.8734850, 60.6321960 56.8736830, 60.6296000 56.8748700, 60.6288150 56.8752540, 60.6289320 56.8753710,
                              |    60.6293330 56.8757630, 60.6296170 56.8760080, 60.6441090 56.8727330, 60.6455290 56.8724300, 60.6459460 56.8723690, 60.6466000 56.8723180, 60.6469950 56.8723210, 60.6474950 56.8723350, 60.6481850 56.8723980, 60.6489600 56.8724800,
                              |    60.6497690 56.8726040, 60.6508180 56.8726860, 60.6521680 56.8726550, 60.6529540 56.8725570, 60.6534110 56.8724840, 60.6537930 56.8724000, 60.6538690 56.8724490, 60.6551620 56.8720640, 60.6614290 56.8694900, 60.6616010 56.8695990,
                              |    60.6660970 56.8677690, 60.6660140 56.8676790, 60.6664780 56.8673650, 60.6664440 56.8673320, 60.6671400 56.8669980, 60.6679630 56.8666900, 60.6686100 56.8664930, 60.6685200 56.8663760, 60.6703310 56.8656520, 60.6695280 56.8651980,
                              |    60.6666630 56.8638240, 60.6354440 56.8488520, 60.6325250 56.8440540, 60.6305150 56.8456040, 60.6255390 56.8494400, 60.6260120 56.8494800, 60.6252930 56.8500200, 60.6246280 56.8505590, 60.6242580 56.8508790, 60.6236960 56.8515220,
                              |    60.6235550 56.8517730, 60.6233150 56.8522350, 60.6231500 56.8525850, 60.6229970 56.8530300, 60.6229640 56.8533790, 60.6229340 56.8541180, 60.6229360 56.8545100, 60.6230150 56.8545060, 60.6229930 56.8547490, 60.6229710 56.8549340,
                              |    60.6228960 56.8552270, 60.6228200 56.8554910, 60.6227170 56.8557320, 60.6225390 56.8560320, 60.6224040 56.8562440, 60.6222260 56.8564910, 60.6220160 56.8567170, 60.6218650 56.8568780, 60.6216750 56.8570690, 60.6213570 56.8573390,
                              |    60.6209210 56.8576570, 60.6200640 56.8581640, 60.6192800 56.8585530, 60.6199790 56.8589090, 60.6185300 56.8600140, 60.6182400 56.8602390, 60.6176520 56.8606890, 60.6173780 56.8608490, 60.6170690 56.8609440, 60.6167180 56.8609860,
                              |    60.6157490 56.8609520, 60.6153850 56.8609400, 60.6150380 56.8609250, 60.6145180 56.8609030, 60.6134100 56.8608570, 60.6130630 56.8608800, 60.6128000 56.8609670, 60.6126170 56.8611120, 60.6125140 56.8613140, 60.6123180 56.8620190))""".stripMargin

  val gbi = Toponym(
    id = 53182855,
    geoId = 54,
    geometry = Some(Converter.convert(wktReader.read(gbiGeometry))),
    kind = "district",
    envelope = Envelope(
      lowerCorner = GeoPoint.getPoint(56.814847999991706f, 60.66782299999595f),
      upperCorner = GeoPoint.getPoint(56.85289399999024f, 60.74331699999642f)
    ),
    point = GeoPoint.getPoint(56.834344727992594f, 60.68881559900001f),
    names = Seq(
      Name(name = "Жибайка", nameType = "synonym", locale = "ru_LOCAL"),
      Name(name = "микрорайон ЖБИ", nameType = "official", locale = "ru_LOCAL"),
      Name(name = "микрорайон Комсомольский", nameType = "synonym", locale = "ru_LOCAL"),
      Name(name = "мкр. ЖБИ", nameType = "display", locale = "ru_LOCAL")
    ),
    arrivalPoints = Seq.empty
  )

  val vtuzgorodok = Toponym(
    id = 53182856,
    geoId = 54,
    geometry = Some(Converter.convert(wktReader.read(vtuzgorodorGeometry))),
    kind = "district",
    envelope = Envelope(
      lowerCorner = GeoPoint.getPoint(56.83020299999325f, 60.6409989999963f),
      upperCorner = GeoPoint.getPoint(56.86691799999484f, 60.67392899999789f)
    ),
    point = GeoPoint.getPoint(56.84686840399256f, 60.65878927f),
    names = Seq(
      Name(name = "микрорайон Втузгородок", nameType = "official", locale = "ru_LOCAL"),
      Name(name = "Втузгородок", nameType = "display", locale = "ru_LOCAL")
    ),
    arrivalPoints = Seq.empty
  )

  val ugoZapadniy = Toponym(
    id = 53182857,
    geoId = 54,
    geometry = Some(Converter.convert(wktReader.read(ugoZapadniyGeometry))),
    kind = "district",
    envelope = Envelope(
      lowerCorner = GeoPoint.getPoint(56.788605999990565f, 60.51794200000123f),
      upperCorner = GeoPoint.getPoint(56.836129999990504f, 60.597696999999265f)
    ),
    point = GeoPoint.getPoint(56.8063274719926f, 60.57071519099999f),
    names = Seq(
      Name(name = "Юго-Западный", nameType = "display", locale = "ru_LOCAL"),
      Name(name = "микрорайон Юго-Западный", nameType = "address", locale = "ru_LOCAL"),
      Name(name = "микрорайон Юго-Западный", nameType = "official", locale = "ru_LOCAL")
    ),
    arrivalPoints = Seq.empty
  )

  val elamash = Toponym(
    id = 53182858,
    geoId = 54,
    geometry = Some(Converter.convert(wktReader.read(elmashGeometry))),
    kind = "district",
    envelope = Envelope(
      lowerCorner = GeoPoint.getPoint(56.86201899999126f, 60.6106479999969f),
      upperCorner = GeoPoint.getPoint(56.94416499999295f, 60.68407199999685f)
    ),
    point = GeoPoint.getPoint(56.900658020992495f, 60.63728689500001f),
    names = Seq(
      Name(name = "микрорайон Эльмаш", nameType = "official", locale = "ru_LOCAL"),
      Name(name = "Эльмаш", nameType = "display", locale = "ru_LOCAL")
    ),
    arrivalPoints = Seq.empty
  )

  val pionersky = Toponym(
    id = 53182859,
    geoId = 54,
    geometry = Some(Converter.convert(wktReader.read(pionerskyGeometry))),
    kind = "district",
    envelope = Envelope(
      lowerCorner = GeoPoint.getPoint(56.84405399999351f, 60.612318000000265f),
      upperCorner = GeoPoint.getPoint(56.876007999993206f, 60.67033099999677f)
    ),
    point = GeoPoint.getPoint(56.86109409699254f, 60.63914979f),
    names = Seq(
      Name(name = "Пионерка", nameType = "synonym", locale = "ru_LOCAL"),
      Name(name = "микрорайон Пионерский", nameType = "official", locale = "ru_LOCAL"),
      Name(name = "Пионерский", nameType = "display", locale = "ru_LOCAL")
    ),
    arrivalPoints = Seq.empty
  )

  val storage = new ToponymsStorage(Seq(gbi, vtuzgorodok, ugoZapadniy, elamash, pionersky))
  val microDistrictsProvider: Provider[ToponymsStorage] = () => storage
}
