// Code generated by mockery. DO NOT EDIT.

package mock

import mock "github.com/stretchr/testify/mock"

// EnvGetter is an autogenerated mock type for the EnvGetter type
type EnvGetter struct {
	mock.Mock
}

// GetEnvs provides a mock function with given fields:
func (_m *EnvGetter) GetEnvs() (map[string]string, error) {
	ret := _m.Called()

	var r0 map[string]string
	if rf, ok := ret.Get(0).(func() map[string]string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]string)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewEnvGetter interface {
	mock.TestingT
	Cleanup(func())
}

// NewEnvGetter creates a new instance of EnvGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewEnvGetter(t mockConstructorTestingTNewEnvGetter) *EnvGetter {
	mock := &EnvGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
