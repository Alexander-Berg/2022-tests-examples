syntax = "proto3";

package vertis.anubis.api.test;

import "palma/palma_options.proto";

option java_package = "vertis.anubis.api.test";
option java_multiple_files = true;

message UndefinedKeyField {
  option (.palma.message).name = "test/undefined_key";
}

message UnexpectedKeyFieldType {
  option (.palma.message).name = "test/unexpected_key_type";

  int64 code = 1 [(.palma.field).key = true];
}

message EmptyDictionaryName {
  option (.palma.message).name = "";
}

message IllegalLinkAnnotation {
  option (.palma.message).name = "test/illegal_link_annotation";

  string code = 1 [(.palma.field).key = true];

  NotDictionary invalid_link = 2 [(.palma.field).link = true];
  int32 invalid_link_int = 3 [(.palma.field).link = true];
}

message InvalidLinkContainer {
  NotDictionary invalid_link = 1 [(.palma.field).link = true];
}

message IllegalLinkContainerAnnotation {
  option (.palma.message).name = "test/illegal_link_annotation_container";

  string code = 1 [(.palma.field).key = true];

  InvalidLinkContainer invalid_link_container = 2;
}

message ExpectedLinkAnnotation {
  option (.palma.message).name = "test/expected_link_annotation";

  string code = 1 [(.palma.field).key = true];

  ValidDictionary dictionary = 2;
}

message MissingIndexField {
  option (.palma.message).name = "test/missing_index_field";
  option (.palma.message).indexes = {fields: "russian_alias"};

  string code = 1 [(.palma.field).key = true];

}

message UnsupportedIndexFieldType {
  option (.palma.message).name = "test/unsupported_index_field_type";
  option (.palma.message).indexes = {fields: "index"};

  string code = 1 [(.palma.field).key = true];
  int64 index = 2;

}

message IndexTuplesUnsupported {
  option (.palma.message).name = "test/index_tuples_unsupported";
  option (.palma.message).indexes = {fields: ["index", "index1"]};

  string code = 1 [(.palma.field).key = true];
  string index = 2;
  string index1 = 3;

}

message ValidDictionary {
  option (.palma.message).name = "test/valid_dictionary";

  string code = 1 [(.palma.field).key = true];
}

message DuplicateValidDictionary {
  option (.palma.message).name = "test/valid_dictionary";

  int64 another_code = 1 [(.palma.field).key = true];
}

message HasNestedDictionary {
  option (.palma.message).name = "test/has_nested";

  string code = 1 [(.palma.field).key = true];

  message NestedDictionary {
    option (.palma.message).name = "test/nested";

    string code = 1 [(.palma.field).key = true];
  }
}

message NotDictionary {
  string a = 1;
}

