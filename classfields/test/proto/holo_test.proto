syntax = "proto3";

package vertis.anubis.api.test;

import "vertis/holocron/utils.proto";
import "broker/broker_options.proto";
import "google/protobuf/timestamp.proto";

option java_package = "vertis.anubis.api.test";
option java_multiple_files = true;

message HolocronMessage {
    option (.broker.config) = {
        name: "anubis/holocron/raw"
        yt: {
            holocron: true
            repartition: {
                timestamp_field: "sent_timestamp"
                name: "anubis/holocron/events"
            }
        }
    };

    string id = 1;
    vertis.holocron.Action action = 2;
    google.protobuf.Timestamp event_timestamp = 3;
    google.protobuf.Timestamp sent_timestamp = 4;
    uint32 change_version = 5;
}

message InvalidHolocronMessage {
    option (.broker.config) = {
        name: "anubis/holocron-invalid/raw"
        yt: {
            holocron: true
            repartition: {
                timestamp_field: "sent_timestamp"
                name: "anubis/holocron-invalid/events"
            }
        }
    };

    uint32 id = 1;
    google.protobuf.Timestamp timestamp = 3;
    google.protobuf.Timestamp sent_timestamp = 4;
    int32 change_version = 5;
}

message IllegalConfigHolocronMessage {
    option (.broker.config) = {
        name: "anubis/holocron-illegal-config"
        yt: {
            holocron: true
            partition: BY_MONTH,
            repartition: {
                timestamp_field: "sent_timestamp"
                name: "anubis/holocron-illegal-config/events"
            }
        }
    };

    string id = 1;
    vertis.holocron.Action action = 2;
    google.protobuf.Timestamp event_timestamp = 3;
    google.protobuf.Timestamp sent_timestamp = 4;
    uint32 change_version = 5;
}
