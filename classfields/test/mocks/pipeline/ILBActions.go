// Code generated by mockery v2.12.2. DO NOT EDIT.

package pipeline

import (
	testing "testing"

	mock "github.com/stretchr/testify/mock"
)

// ILBActions is an autogenerated mock type for the ILBActions type
type ILBActions struct {
	mock.Mock
}

// Close provides a mock function with given fields: systemName, dc
func (_m *ILBActions) Close(systemName string, dc string) error {
	ret := _m.Called(systemName, dc)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(systemName, dc)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Open provides a mock function with given fields: systemName, dc
func (_m *ILBActions) Open(systemName string, dc string) error {
	ret := _m.Called(systemName, dc)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(systemName, dc)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewILBActions creates a new instance of ILBActions. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewILBActions(t testing.TB) *ILBActions {
	mock := &ILBActions{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
