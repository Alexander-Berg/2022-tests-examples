// Code generated by mockery v2.9.3. DO NOT EDIT.

package mocks

import (
	api "github.com/hashicorp/consul/api"
	mock "github.com/stretchr/testify/mock"

	serviceDiscovery "github.com/YandexClassifieds/h2p/common/serviceDiscovery"
)

// IServiceDiscovery is an autogenerated mock type for the IServiceDiscovery type
type IServiceDiscovery struct {
	mock.Mock
}

// ConsulService provides a mock function with given fields: service, tag, opt
func (_m *IServiceDiscovery) ConsulService(service string, tag string, opt *api.QueryOptions) ([]*api.CatalogService, *api.QueryMeta, error) {
	ret := _m.Called(service, tag, opt)

	var r0 []*api.CatalogService
	if rf, ok := ret.Get(0).(func(string, string, *api.QueryOptions) []*api.CatalogService); ok {
		r0 = rf(service, tag, opt)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*api.CatalogService)
		}
	}

	var r1 *api.QueryMeta
	if rf, ok := ret.Get(1).(func(string, string, *api.QueryOptions) *api.QueryMeta); ok {
		r1 = rf(service, tag, opt)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*api.QueryMeta)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(string, string, *api.QueryOptions) error); ok {
		r2 = rf(service, tag, opt)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// Datacenters provides a mock function with given fields:
func (_m *IServiceDiscovery) Datacenters() ([]string, error) {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Find provides a mock function with given fields: dhost, dport
func (_m *IServiceDiscovery) Find(dhost string, dport uint32) (*serviceDiscovery.Service, error) {
	ret := _m.Called(dhost, dport)

	var r0 *serviceDiscovery.Service
	if rf, ok := ret.Get(0).(func(string, uint32) *serviceDiscovery.Service); ok {
		r0 = rf(dhost, dport)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*serviceDiscovery.Service)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, uint32) error); ok {
		r1 = rf(dhost, dport)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetMDBInfo provides a mock function with given fields: host
func (_m *IServiceDiscovery) GetMDBInfo(host string) *serviceDiscovery.MDBInfo {
	ret := _m.Called(host)

	var r0 *serviceDiscovery.MDBInfo
	if rf, ok := ret.Get(0).(func(string) *serviceDiscovery.MDBInfo); ok {
		r0 = rf(host)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*serviceDiscovery.MDBInfo)
		}
	}

	return r0
}
