// Code generated by mockery v2.13.1. DO NOT EDIT.

package aptly

import (
	packages "aptly/pkg/packages"

	mock "github.com/stretchr/testify/mock"

	pkgaptly "aptly/pkg/aptly"
)

// IService is an autogenerated mock type for the IService type
type IService struct {
	mock.Mock
}

// NewRepoFrom provides a mock function with given fields: r, _a1
func (_m *IService) NewRepoFrom(r pkgaptly.Repo, _a1 packages.Map) pkgaptly.IRepo {
	ret := _m.Called(r, _a1)

	var r0 pkgaptly.IRepo
	if rf, ok := ret.Get(0).(func(pkgaptly.Repo, packages.Map) pkgaptly.IRepo); ok {
		r0 = rf(r, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(pkgaptly.IRepo)
		}
	}

	return r0
}

type mockConstructorTestingTNewIService interface {
	mock.TestingT
	Cleanup(func())
}

// NewIService creates a new instance of IService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIService(t mockConstructorTestingTNewIService) *IService {
	mock := &IService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
