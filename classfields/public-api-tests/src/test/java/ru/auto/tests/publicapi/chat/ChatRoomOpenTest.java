package ru.auto.tests.publicapi.chat;

import com.carlosbecker.guice.GuiceModules;
import com.carlosbecker.guice.GuiceTestRunner;
import com.google.gson.JsonObject;
import com.google.inject.Inject;
import io.qameta.allure.junit4.DisplayName;
import org.hamcrest.MatcherAssert;
import org.junit.Test;
import org.junit.runner.RunWith;
import ru.auto.tests.passport.account.Account;
import ru.auto.tests.passport.manager.AccountManager;
import ru.auto.tests.publicapi.ApiClient;
import ru.auto.tests.publicapi.adaptor.PublicApiAdaptor;
import ru.auto.tests.publicapi.anno.Prod;
import ru.auto.tests.publicapi.model.AutoApiRoomResponse;
import ru.auto.tests.publicapi.model.AutoApiSuccessResponse;
import ru.auto.tests.publicapi.module.PublicApiModule;

import java.util.function.Function;

import static ru.auto.tests.commons.restassured.ResponseSpecBuilders.shouldBe200OkJSON;
import static ru.auto.tests.jsonunit.matcher.JsonPatchMatcher.jsonEquals;
import static ru.auto.tests.publicapi.ResponseSpecBuilders.validatedWith;
import static ru.auto.tests.publicapi.assertions.AutoruApiModelsAssertions.assertThat;
import static ru.auto.tests.publicapi.ra.RequestSpecBuilders.defaultSpec;
import static ru.auto.tests.publicapi.ra.ResponseSpecBuilders.shouldBeSuccess;

@DisplayName("POST /chat/room/{id}/open")
@RunWith(GuiceTestRunner.class)
@GuiceModules(PublicApiModule.class)
public class ChatRoomOpenTest {

    @Inject
    private ApiClient api;

    @Inject
    @Prod
    private ApiClient prodApi;

    @Inject
    private AccountManager accountManager;

    @Inject
    private PublicApiAdaptor adaptor;

    @Test
    public void shouldHaveSuccessResponse() {
        Account account = accountManager.create();
        String sessionId = adaptor.login(account).getSession().getId();
        AutoApiRoomResponse room = adaptor.createEmptyRoom(sessionId);
        api.chat().openRoom()
                .reqSpec(defaultSpec())
                .idPath(room.getRoom().getId())
                .xSessionIdHeader(sessionId)
                .execute(validatedWith(shouldBeSuccess()));
    }
}
