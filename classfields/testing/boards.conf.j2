#############################################################################
## indexer settings
#############################################################################

indexer
{
    # memory limit, in bytes, kiloytes (16384K) or megabytes (256M)
    # optional, default is 32M, max is 2047M, recommended is 256M to 1024M
    mem_limit       = 1024M

    # maximum IO calls per second (for I/O throttling)
    # optional, default is 0 (unlimited)
    #
    # max_iops      = 40


    # maximum IO call size, bytes (for I/O throttling)
    # optional, default is 0 (unlimited)
    #
    # max_iosize        = 1048576


    # maximum xmlpipe2 field length, bytes
    # optional, default is 2M
    #
    # max_xmlpipe2_field    = 4M


    # write buffer size, bytes
    # several (currently up to 4) buffers will be allocated
    # write buffers are allocated in addition to mem_limit
    # optional, default is 1M
    #
    # write_buffer      = 1M


    # maximum file field adaptive buffer size
    # optional, default is 8M, minimum is 1M
    #
    # max_file_field_buffer = 32M
}

#############################################################################
## searchd settings
#############################################################################

searchd
{
    # [hostname:]port[:protocol], or /unix/socket/path to listen on
    # known protocols are 'sphinx' (SphinxAPI) and 'mysql41' (SphinxQL)
    #
    # multi-value, multiple listen points are allowed
    # optional, defaults are 9312:sphinx and 9306:mysql41, as below
    #
    # listen            = 127.0.0.1
    # listen            = 192.168.0.1:9312
    # listen            = 9312
    # listen            = /var/run/searchd.sock
    listen          = 9312
    #listen          = 9306:mysql41

    # log file, searchd run info is logged here
    # optional, default is 'searchd.log'
    log         = /var/log/sphinx/searchd_boards.log

    # query log file, all search queries are logged here
    # optional, default is empty (do not log queries)
    #query_log       = /var/log/sphinx/query_boards.log

    # client read timeout, seconds
    # optional, default is 5
    read_timeout        = 5

    # request timeout, seconds
    # optional, default is 5 minutes
    client_timeout      = 300

    # maximum amount of children to fork (concurrent searches to run)
    # optional, default is 0 (unlimited)
    max_children        = 30

    # PID file, searchd process ID file name
    # mandatory
    pid_file        = /var/run/sphinx/searchd_boards.pid
    # max amount of matches the daemon ever keeps in RAM, per-index
    # WARNING, THERE'S ALSO PER-QUERY LIMIT, SEE SetLimits() API CALL
    # default is 1000 (just like Google)
    max_matches     = 1000

    # seamless rotate, prevents rotate stalls if precaching huge datasets
    # optional, default is 1
    seamless_rotate     = 1

    # whether to forcibly preopen all indexes on startup
    # optional, default is 0 (do not preopen)
    preopen_indexes     = 0

    # whether to unlink .old index copies on succesful rotation.
    # optional, default is 1 (do unlink)
    unlink_old      = 1

    # attribute updates periodic flush timeout, seconds
    # updates will be automatically dumped to disk this frequently
    # optional, default is 0 (disable periodic flush)
    #
    # attr_flush_period = 900


    # instance-wide ondisk_dict defaults (per-index value take precedence)
    # optional, default is 0 (precache all dictionaries in RAM)
    #
    # ondisk_dict_default   = 1


    # MVA updates pool size
    # shared between all instances of searchd, disables attr flushes!
    # optional, default size is 1M
    mva_updates_pool    = 1M

    # max allowed network packet size
    # limits both query packets from clients, and responses from agents
    # optional, default size is 8M
    max_packet_size     = 8M

    # crash log path
    # searchd will (try to) log crashed query to 'crash_log_path.PID' file
    # optional, default is empty (do not create crash logs)
    #
#    crash_log_path        = /var/log/sphinx/boards/crash


    # max allowed per-query filter count
    # optional, default is 256
    max_filters     = 20

    # max allowed per-filter values count
    # optional, default is 4096
    max_filter_values   = 500


    # socket listen queue length
    # optional, default is 5
    #
    # listen_backlog        = 5


    # per-keyword read buffer size
    # optional, default is 256K
    #
    # read_buffer       = 256K


    # unhinted read size (currently used when reading hits)
    # optional, default is 32K
    #
    # read_unhinted     = 32K


    # max allowed per-batch query count (aka multi-query count)
    # optional, default is 32
    max_batch_queries   = 32


    # max common subtree document cache size, per-query
    # optional, default is 0 (disable subtree optimization)
    #
    # subtree_docs_cache    = 4M


    # max common subtree hit cache size, per-query
    # optional, default is 0 (disable subtree optimization)
    #
    # subtree_hits_cache    = 8M


    # multi-processing mode (MPM)
    # known values are none, fork, prefork, and threads
    # optional, default is fork
    #
    workers         = prefork


    # max threads to create for searching local parts of a distributed index
    # optional, default is 0, which means disable multi-threaded searching
    # should work with all MPMs (ie. does NOT require workers=threads)
    #
    # dist_threads      = 4


    # binlog files path; use empty string to disable binlog
    # optional, default is build-time configured data directory
    #
    # binlog_path       = # disable logging
    # binlog_path       = /opt/local/var/data # binlog.001 etc will be created there


    # binlog flush/sync mode
    # 0 means flush and sync every second
    # 1 means flush and sync every transaction
    # 2 means flush every transaction, sync every second
    # optional, default is 2
    #
    # binlog_flush      = 2


    # binlog per-file size limit
    # optional, default is 128M, 0 means no limit
    #
    # binlog_max_log_size   = 256M
}
source board_exotic
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`exotic`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            65 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`exotic` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`exotic` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`exotic` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_exotic_delta : board_exotic
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`exotic`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            65 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`exotic` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_exotic
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_exotic

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_exotic

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_exotic_delta : board_exotic
{
    source = board_exotic_delta
    path = /opt/sphinx_boards/board_exotic_delta
}
source board_karting
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`karting`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            73 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`karting` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`karting` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`karting` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_karting_delta : board_karting
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`karting`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            73 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`karting` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_karting
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_karting

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_karting

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_karting_delta : board_karting
{
    source = board_karting_delta
    path = /opt/sphinx_boards/board_karting_delta
}
source board_microbus
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`microbus`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            74 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`microbus` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`microbus` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`microbus` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_microbus_delta : board_microbus
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`microbus`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            74 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`microbus` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_microbus
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_microbus

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_microbus

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_microbus_delta : board_microbus
{
    source = board_microbus_delta
    path = /opt/sphinx_boards/board_microbus_delta
}
source board_petrol
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`petrol`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            75 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`petrol` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`petrol` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`petrol` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_petrol_delta : board_petrol
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`petrol`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            75 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`petrol` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_petrol
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_petrol

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_petrol

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

  #  

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_petrol_delta : board_petrol
{
    source = board_petrol_delta
    path = /opt/sphinx_boards/board_petrol_delta
}
source board_acura
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`acura`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            76 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`acura` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`acura` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`acura` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_acura_delta : board_acura
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`acura`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            76 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`acura` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_acura
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_acura

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_acura

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_acura_delta : board_acura
{
    source = board_acura_delta
    path = /opt/sphinx_boards/board_acura_delta
}
source board_gps
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`gps`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            77 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`gps` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`gps` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`gps` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_gps_delta : board_gps
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`gps`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            77 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`gps` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_gps
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_gps

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_gps

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_gps_delta : board_gps
{
    source = board_gps_delta
    path = /opt/sphinx_boards/board_gps_delta
}
source board_noosphere
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`noosphere`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            80 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`noosphere` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`noosphere` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`noosphere` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_noosphere_delta : board_noosphere
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`noosphere`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            80 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`noosphere` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_noosphere
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_noosphere

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_noosphere

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_noosphere_delta : board_noosphere
{
    source = board_noosphere_delta
    path = /opt/sphinx_boards/board_noosphere_delta
}
source board_avia
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`avia`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            89 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`avia` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`avia` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`avia` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_avia_delta : board_avia
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`avia`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            89 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`avia` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_avia
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_avia

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_avia

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_avia_delta : board_avia
{
    source = board_avia_delta
    path = /opt/sphinx_boards/board_avia_delta
}
source board_book-keeping
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`book-keeping`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            90 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`book-keeping` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`book-keeping` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`book-keeping` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_book-keeping_delta : board_book-keeping
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`book-keeping`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            90 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`book-keeping` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_book-keeping
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_book-keeping

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_book-keeping

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_book-keeping_delta : board_book-keeping
{
    source = board_book-keeping_delta
    path = /opt/sphinx_boards/board_book-keeping_delta
}
source board_4x4
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`4x4`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            91 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`4x4` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`4x4` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`4x4` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_4x4_delta : board_4x4
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`4x4`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            91 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`4x4` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_4x4
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_4x4

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_4x4

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_4x4_delta : board_4x4
{
    source = board_4x4_delta
    path = /opt/sphinx_boards/board_4x4_delta
}
source board_opel
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`opel`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            94 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`opel` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`opel` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`opel` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_opel_delta : board_opel
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`opel`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            94 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`opel` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_opel
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_opel

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_opel

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_opel_delta : board_opel
{
    source = board_opel_delta
    path = /opt/sphinx_boards/board_opel_delta
}
source board_photo
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`photo`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            97 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`photo` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`photo` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`photo` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_photo_delta : board_photo
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`photo`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            97 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`photo` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_photo
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_photo

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_photo

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_photo_delta : board_photo
{
    source = board_photo_delta
    path = /opt/sphinx_boards/board_photo_delta
}
source board_audiovideo
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`audiovideo`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            98 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`audiovideo` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`audiovideo` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`audiovideo` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_audiovideo_delta : board_audiovideo
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`audiovideo`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            98 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`audiovideo` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_audiovideo
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_audiovideo

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_audiovideo

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_audiovideo_delta : board_audiovideo
{
    source = board_audiovideo_delta
    path = /opt/sphinx_boards/board_audiovideo_delta
}
source board_bowling
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`bowling`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            99 AS conf_id, \
            8 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`bowling` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`bowling` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`bowling` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_bowling_delta : board_bowling
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`bowling`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            99 AS conf_id, \
            8 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`bowling` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_bowling
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_bowling

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_bowling

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_bowling_delta : board_bowling
{
    source = board_bowling_delta
    path = /opt/sphinx_boards/board_bowling_delta
}
source board_diving
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`diving`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            100 AS conf_id, \
            8 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`diving` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`diving` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`diving` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_diving_delta : board_diving
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`diving`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            100 AS conf_id, \
            8 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`diving` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_diving
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_diving

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_diving

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_diving_delta : board_diving
{
    source = board_diving_delta
    path = /opt/sphinx_boards/board_diving_delta
}
source board_nowheels
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`nowheels`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            101 AS conf_id, \
            8 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`nowheels` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`nowheels` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`nowheels` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_nowheels_delta : board_nowheels
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`nowheels`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            101 AS conf_id, \
            8 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`nowheels` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_nowheels
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_nowheels

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_nowheels

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_nowheels_delta : board_nowheels
{
    source = board_nowheels_delta
    path = /opt/sphinx_boards/board_nowheels_delta
}
source board_hunting
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`hunting`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            102 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`hunting` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`hunting` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`hunting` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_hunting_delta : board_hunting
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`hunting`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            102 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`hunting` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_hunting
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_hunting

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_hunting

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_hunting_delta : board_hunting
{
    source = board_hunting_delta
    path = /opt/sphinx_boards/board_hunting_delta
}
source board_ski
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`ski`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            103 AS conf_id, \
            8 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`ski` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`ski` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`ski` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_ski_delta : board_ski
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`ski`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            103 AS conf_id, \
            8 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`ski` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_ski
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_ski

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_ski

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_ski_delta : board_ski
{
    source = board_ski_delta
    path = /opt/sphinx_boards/board_ski_delta
}
source board_sports
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`sports`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            104 AS conf_id, \
            8 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`sports` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`sports` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`sports` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_sports_delta : board_sports
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`sports`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            104 AS conf_id, \
            8 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`sports` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_sports
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_sports

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_sports

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_sports_delta : board_sports
{
    source = board_sports_delta
    path = /opt/sphinx_boards/board_sports_delta
}
source board_art
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`art`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            105 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`art` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`art` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`art` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_art_delta : board_art
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`art`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            105 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`art` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_art
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_art

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_art

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_art_delta : board_art
{
    source = board_art_delta
    path = /opt/sphinx_boards/board_art_delta
}
source board_restaurant
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`restaurant`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            106 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`restaurant` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`restaurant` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`restaurant` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_restaurant_delta : board_restaurant
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`restaurant`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            106 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`restaurant` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_restaurant
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_restaurant

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_restaurant

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_restaurant_delta : board_restaurant
{
    source = board_restaurant_delta
    path = /opt/sphinx_boards/board_restaurant_delta
}
source board_brothers
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`brothers`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            107 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`brothers` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`brothers` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`brothers` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_brothers_delta : board_brothers
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`brothers`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            107 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`brothers` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_brothers
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_brothers

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_brothers

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_brothers_delta : board_brothers
{
    source = board_brothers_delta
    path = /opt/sphinx_boards/board_brothers_delta
}
source board_children
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`children`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            109 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`children` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`children` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`children` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_children_delta : board_children
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`children`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            109 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`children` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_children
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_children

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_children

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_children_delta : board_children
{
    source = board_children_delta
    path = /opt/sphinx_boards/board_children_delta
}
source board_woman
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`woman`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            113 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`woman` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`woman` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`woman` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_woman_delta : board_woman
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`woman`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            113 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`woman` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_woman
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_woman

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_woman

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_woman_delta : board_woman
{
    source = board_woman_delta
    path = /opt/sphinx_boards/board_woman_delta
}
source board_test
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`test`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            114 AS conf_id, \
            0 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`test` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`test` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`test` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_test_delta : board_test
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`test`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            114 AS conf_id, \
            0 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`test` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_test
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_test

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_test

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_test_delta : board_test
{
    source = board_test_delta
    path = /opt/sphinx_boards/board_test_delta
}
source board_formula
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`formula`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            115 AS conf_id, \
            8 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`formula` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`formula` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`formula` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_formula_delta : board_formula
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`formula`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            115 AS conf_id, \
            8 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`formula` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_formula
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_formula

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_formula

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_formula_delta : board_formula
{
    source = board_formula_delta
    path = /opt/sphinx_boards/board_formula_delta
}
source board_meeting
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`meeting`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            116 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`meeting` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`meeting` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`meeting` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_meeting_delta : board_meeting
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`meeting`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            116 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`meeting` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_meeting
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_meeting

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_meeting

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_meeting_delta : board_meeting
{
    source = board_meeting_delta
    path = /opt/sphinx_boards/board_meeting_delta
}
source board_jokes
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`jokes`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            117 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`jokes` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`jokes` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`jokes` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_jokes_delta : board_jokes
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`jokes`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            117 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`jokes` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_jokes
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_jokes

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_jokes

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_jokes_delta : board_jokes
{
    source = board_jokes_delta
    path = /opt/sphinx_boards/board_jokes_delta
}
source board_anecdotes
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`anecdotes`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            118 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`anecdotes` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`anecdotes` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`anecdotes` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_anecdotes_delta : board_anecdotes
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`anecdotes`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            118 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`anecdotes` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_anecdotes
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_anecdotes

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_anecdotes

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_anecdotes_delta : board_anecdotes
{
    source = board_anecdotes_delta
    path = /opt/sphinx_boards/board_anecdotes_delta
}
source board_spb-club
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`spb-club`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            119 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`spb-club` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`spb-club` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`spb-club` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_spb-club_delta : board_spb-club
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`spb-club`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            119 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`spb-club` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_spb-club
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_spb-club

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_spb-club

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_spb-club_delta : board_spb-club
{
    source = board_spb-club_delta
    path = /opt/sphinx_boards/board_spb-club_delta
}
source board_accumulator
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`accumulator`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            121 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`accumulator` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`accumulator` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`accumulator` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_accumulator_delta : board_accumulator
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`accumulator`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            121 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`accumulator` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_accumulator
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_accumulator

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_accumulator

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_accumulator_delta : board_accumulator
{
    source = board_accumulator_delta
    path = /opt/sphinx_boards/board_accumulator_delta
}
source board_akpp
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`akpp`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            122 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`akpp` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`akpp` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`akpp` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_akpp_delta : board_akpp
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`akpp`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            122 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`akpp` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_akpp
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_akpp

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_akpp

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_akpp_delta : board_akpp
{
    source = board_akpp_delta
    path = /opt/sphinx_boards/board_akpp_delta
}
source board_alfa-romeo
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`alfa-romeo`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            123 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`alfa-romeo` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`alfa-romeo` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`alfa-romeo` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_alfa-romeo_delta : board_alfa-romeo
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`alfa-romeo`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            123 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`alfa-romeo` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_alfa-romeo
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_alfa-romeo

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_alfa-romeo

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_alfa-romeo_delta : board_alfa-romeo
{
    source = board_alfa-romeo_delta
    path = /opt/sphinx_boards/board_alfa-romeo_delta
}
source board_audiobs
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`audiobs`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            124 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`audiobs` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`audiobs` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`audiobs` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_audiobs_delta : board_audiobs
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`audiobs`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            124 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`audiobs` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_audiobs
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_audiobs

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_audiobs

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_audiobs_delta : board_audiobs
{
    source = board_audiobs_delta
    path = /opt/sphinx_boards/board_audiobs_delta
}
source board_away
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`away`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            125 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`away` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`away` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`away` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_away_delta : board_away
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`away`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            125 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`away` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_away
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_away

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_away

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_away_delta : board_away
{
    source = board_away_delta
    path = /opt/sphinx_boards/board_away_delta
}
source board_barter
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`barter`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            126 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`barter` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`barter` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`barter` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_barter_delta : board_barter
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`barter`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            126 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`barter` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_barter
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_barter

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_barter

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_barter_delta : board_barter
{
    source = board_barter_delta
    path = /opt/sphinx_boards/board_barter_delta
}
source board_bicycle
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`bicycle`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            127 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`bicycle` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`bicycle` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`bicycle` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_bicycle_delta : board_bicycle
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`bicycle`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            127 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`bicycle` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_bicycle
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_bicycle

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_bicycle

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_bicycle_delta : board_bicycle
{
    source = board_bicycle_delta
    path = /opt/sphinx_boards/board_bicycle_delta
}
source board_blacklist
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`blacklist`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            128 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`blacklist` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`blacklist` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`blacklist` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_blacklist_delta : board_blacklist
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`blacklist`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            128 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`blacklist` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_blacklist
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_blacklist

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_blacklist

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_blacklist_delta : board_blacklist
{
    source = board_blacklist_delta
    path = /opt/sphinx_boards/board_blacklist_delta
}
source board_buy
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`buy`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            129 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`buy` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`buy` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`buy` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_buy_delta : board_buy
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`buy`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            129 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`buy` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_buy
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_buy

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_buy

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_buy_delta : board_buy
{
    source = board_buy_delta
    path = /opt/sphinx_boards/board_buy_delta
}
source board_cadillac
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`cadillac`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            130 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`cadillac` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`cadillac` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`cadillac` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_cadillac_delta : board_cadillac
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`cadillac`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            130 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`cadillac` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_cadillac
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_cadillac

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_cadillac

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_cadillac_delta : board_cadillac
{
    source = board_cadillac_delta
    path = /opt/sphinx_boards/board_cadillac_delta
}
source board_chemistry
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`chemistry`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            131 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`chemistry` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`chemistry` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`chemistry` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_chemistry_delta : board_chemistry
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`chemistry`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            131 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`chemistry` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_chemistry
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_chemistry

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_chemistry

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_chemistry_delta : board_chemistry
{
    source = board_chemistry_delta
    path = /opt/sphinx_boards/board_chemistry_delta
}
source board_chevrolet
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`chevrolet`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            132 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`chevrolet` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`chevrolet` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`chevrolet` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_chevrolet_delta : board_chevrolet
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`chevrolet`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            132 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`chevrolet` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_chevrolet
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_chevrolet

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_chevrolet

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_chevrolet_delta : board_chevrolet
{
    source = board_chevrolet_delta
    path = /opt/sphinx_boards/board_chevrolet_delta
}
source board_chrysler
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`chrysler`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            133 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`chrysler` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`chrysler` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`chrysler` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_chrysler_delta : board_chrysler
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`chrysler`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            133 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`chrysler` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_chrysler
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_chrysler

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_chrysler

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_chrysler_delta : board_chrysler
{
    source = board_chrysler_delta
    path = /opt/sphinx_boards/board_chrysler_delta
}
source board_citroen
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`citroen`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            134 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`citroen` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`citroen` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`citroen` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_citroen_delta : board_citroen
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`citroen`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            134 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`citroen` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_citroen
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_citroen

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_citroen

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_citroen_delta : board_citroen
{
    source = board_citroen_delta
    path = /opt/sphinx_boards/board_citroen_delta
}
source board_daewoo
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`daewoo`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            135 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`daewoo` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`daewoo` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`daewoo` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_daewoo_delta : board_daewoo
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`daewoo`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            135 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`daewoo` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_daewoo
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_daewoo

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_daewoo

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_daewoo_delta : board_daewoo
{
    source = board_daewoo_delta
    path = /opt/sphinx_boards/board_daewoo_delta
}
source board_daihatsu
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`daihatsu`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            136 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`daihatsu` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`daihatsu` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`daihatsu` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_daihatsu_delta : board_daihatsu
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`daihatsu`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            136 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`daihatsu` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_daihatsu
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_daihatsu

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_daihatsu

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_daihatsu_delta : board_daihatsu
{
    source = board_daihatsu_delta
    path = /opt/sphinx_boards/board_daihatsu_delta
}
source board_fiat
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`fiat`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            137 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`fiat` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`fiat` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`fiat` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_fiat_delta : board_fiat
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`fiat`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            137 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`fiat` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_fiat
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_fiat

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_fiat

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_fiat_delta : board_fiat
{
    source = board_fiat_delta
    path = /opt/sphinx_boards/board_fiat_delta
}
source board_color
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`color`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            138 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`color` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`color` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`color` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_color_delta : board_color
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`color`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            138 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`color` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_color
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_color

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_color

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_color_delta : board_color
{
    source = board_color_delta
    path = /opt/sphinx_boards/board_color_delta
}
source board_compare
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`compare`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            139 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`compare` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`compare` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`compare` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_compare_delta : board_compare
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`compare`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            139 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`compare` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_compare
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_compare

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_compare

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_compare_delta : board_compare
{
    source = board_compare_delta
    path = /opt/sphinx_boards/board_compare_delta
}
source board_computer
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`computer`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            140 AS conf_id, \
            3 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`computer` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`computer` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`computer` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_computer_delta : board_computer
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`computer`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            140 AS conf_id, \
            3 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`computer` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_computer
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_computer

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_computer

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_computer_delta : board_computer
{
    source = board_computer_delta
    path = /opt/sphinx_boards/board_computer_delta
}
source board_computerbs
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`computerbs`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            141 AS conf_id, \
            3 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`computerbs` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`computerbs` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`computerbs` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_computerbs_delta : board_computerbs
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`computerbs`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            141 AS conf_id, \
            3 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`computerbs` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_computerbs
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_computerbs

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_computerbs

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_computerbs_delta : board_computerbs
{
    source = board_computerbs_delta
    path = /opt/sphinx_boards/board_computerbs_delta
}
source board_conditioner
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`conditioner`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            142 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`conditioner` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`conditioner` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`conditioner` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_conditioner_delta : board_conditioner
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`conditioner`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            142 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`conditioner` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_conditioner
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_conditioner

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_conditioner

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_conditioner_delta : board_conditioner
{
    source = board_conditioner_delta
    path = /opt/sphinx_boards/board_conditioner_delta
}
source board_connect
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`connect`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            143 AS conf_id, \
            3 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`connect` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`connect` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`connect` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_connect_delta : board_connect
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`connect`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            143 AS conf_id, \
            3 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`connect` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_connect
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_connect

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_connect

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_connect_delta : board_connect
{
    source = board_connect_delta
    path = /opt/sphinx_boards/board_connect_delta
}
source board_connectbs
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`connectbs`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            144 AS conf_id, \
            3 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`connectbs` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`connectbs` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`connectbs` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_connectbs_delta : board_connectbs
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`connectbs`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            144 AS conf_id, \
            3 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`connectbs` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_connectbs
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_connectbs

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_connectbs

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_connectbs_delta : board_connectbs
{
    source = board_connectbs_delta
    path = /opt/sphinx_boards/board_connectbs_delta
}
source board_cosmetic
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`cosmetic`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            145 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`cosmetic` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`cosmetic` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`cosmetic` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_cosmetic_delta : board_cosmetic
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`cosmetic`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            145 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`cosmetic` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_cosmetic
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_cosmetic

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_cosmetic

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_cosmetic_delta : board_cosmetic
{
    source = board_cosmetic_delta
    path = /opt/sphinx_boards/board_cosmetic_delta
}
source board_credit
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`credit`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            146 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`credit` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`credit` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`credit` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_credit_delta : board_credit
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`credit`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            146 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`credit` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_credit
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_credit

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_credit

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_credit_delta : board_credit
{
    source = board_credit_delta
    path = /opt/sphinx_boards/board_credit_delta
}
source board_crime
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`crime`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            147 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`crime` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`crime` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`crime` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_crime_delta : board_crime
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`crime`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            147 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`crime` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_crime
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_crime

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_crime

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_crime_delta : board_crime
{
    source = board_crime_delta
    path = /opt/sphinx_boards/board_crime_delta
}
source board_diesel
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`diesel`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            148 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`diesel` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`diesel` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`diesel` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_diesel_delta : board_diesel
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`diesel`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            148 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`diesel` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_diesel
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_diesel

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_diesel

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_diesel_delta : board_diesel
{
    source = board_diesel_delta
    path = /opt/sphinx_boards/board_diesel_delta
}
source board_drs
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`drs`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            150 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`drs` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`drs` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`drs` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_drs_delta : board_drs
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`drs`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            150 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`drs` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_drs
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_drs

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_drs

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_drs_delta : board_drs
{
    source = board_drs_delta
    path = /opt/sphinx_boards/board_drs_delta
}
source board_dtp
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`dtp`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            151 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`dtp` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`dtp` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`dtp` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_dtp_delta : board_dtp
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`dtp`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            151 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`dtp` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_dtp
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_dtp

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_dtp

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_dtp_delta : board_dtp
{
    source = board_dtp_delta
    path = /opt/sphinx_boards/board_dtp_delta
}
source board_electric
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`electric`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            152 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`electric` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`electric` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`electric` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_electric_delta : board_electric
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`electric`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            152 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`electric` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_electric
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_electric

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_electric

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_electric_delta : board_electric
{
    source = board_electric_delta
    path = /opt/sphinx_boards/board_electric_delta
}
source board_estate
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`estate`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            153 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`estate` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`estate` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`estate` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_estate_delta : board_estate
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`estate`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            153 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`estate` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_estate
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_estate

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_estate

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_estate_delta : board_estate
{
    source = board_estate_delta
    path = /opt/sphinx_boards/board_estate_delta
}
source board_ford
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`ford`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            154 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`ford` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`ford` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`ford` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_ford_delta : board_ford
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`ford`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            154 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`ford` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_ford
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_ford

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_ford

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_ford_delta : board_ford
{
    source = board_ford_delta
    path = /opt/sphinx_boards/board_ford_delta
}
source board_ford-usa
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`ford-usa`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            155 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`ford-usa` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`ford-usa` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`ford-usa` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_ford-usa_delta : board_ford-usa
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`ford-usa`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            155 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`ford-usa` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_ford-usa
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_ford-usa

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_ford-usa

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_ford-usa_delta : board_ford-usa
{
    source = board_ford-usa_delta
    path = /opt/sphinx_boards/board_ford-usa_delta
}
source board_gai
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`gai`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            156 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`gai` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`gai` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`gai` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_gai_delta : board_gai
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`gai`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            156 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`gai` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_gai
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_gai

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_gai

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_gai_delta : board_gai
{
    source = board_gai_delta
    path = /opt/sphinx_boards/board_gai_delta
}
source board_games
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`games`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            157 AS conf_id, \
            3 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`games` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`games` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`games` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_games_delta : board_games
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`games`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            157 AS conf_id, \
            3 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`games` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_games
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_games

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_games

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_games_delta : board_games
{
    source = board_games_delta
    path = /opt/sphinx_boards/board_games_delta
}
source board_garagein
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`garagein`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            158 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`garagein` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`garagein` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`garagein` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_garagein_delta : board_garagein
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`garagein`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            158 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`garagein` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_garagein
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_garagein

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_garagein

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_garagein_delta : board_garagein
{
    source = board_garagein_delta
    path = /opt/sphinx_boards/board_garagein_delta
}
source board_gasfuel
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`gasfuel`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            159 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`gasfuel` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`gasfuel` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`gasfuel` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_gasfuel_delta : board_gasfuel
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`gasfuel`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            159 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`gasfuel` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_gasfuel
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_gasfuel

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_gasfuel

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_gasfuel_delta : board_gasfuel
{
    source = board_gasfuel_delta
    path = /opt/sphinx_boards/board_gasfuel_delta
}
source board_sos
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`sos`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            160 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`sos` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`sos` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`sos` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_sos_delta : board_sos
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`sos`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            160 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`sos` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_sos
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_sos

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_sos

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_sos_delta : board_sos
{
    source = board_sos_delta
    path = /opt/sphinx_boards/board_sos_delta
}
source board_audi
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`audi`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            161 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`audi` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`audi` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`audi` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_audi_delta : board_audi
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`audi`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            161 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`audi` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_audi
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_audi

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_audi

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_audi_delta : board_audi
{
    source = board_audi_delta
    path = /opt/sphinx_boards/board_audi_delta
}
source board_bmw
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`bmw`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            162 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`bmw` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`bmw` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`bmw` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_bmw_delta : board_bmw
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`bmw`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            162 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`bmw` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_bmw
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_bmw

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_bmw

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_bmw_delta : board_bmw
{
    source = board_bmw_delta
    path = /opt/sphinx_boards/board_bmw_delta
}
source board_niva
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`niva`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            163 AS conf_id, \
            1 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`niva` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`niva` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`niva` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_niva_delta : board_niva
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`niva`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            163 AS conf_id, \
            1 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`niva` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_niva
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_niva

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_niva

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_niva_delta : board_niva
{
    source = board_niva_delta
    path = /opt/sphinx_boards/board_niva_delta
}
source board_gaz
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`gaz`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            164 AS conf_id, \
            1 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`gaz` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`gaz` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`gaz` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_gaz_delta : board_gaz
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`gaz`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            164 AS conf_id, \
            1 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`gaz` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_gaz
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_gaz

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_gaz

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_gaz_delta : board_gaz
{
    source = board_gaz_delta
    path = /opt/sphinx_boards/board_gaz_delta
}
source board_gibdd
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`gibdd`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            165 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`gibdd` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`gibdd` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`gibdd` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_gibdd_delta : board_gibdd
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`gibdd`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            165 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`gibdd` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_gibdd
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_gibdd

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_gibdd

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_gibdd_delta : board_gibdd
{
    source = board_gibdd_delta
    path = /opt/sphinx_boards/board_gibdd_delta
}
source board_glass
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`glass`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            166 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`glass` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`glass` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`glass` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_glass_delta : board_glass
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`glass`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            166 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`glass` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_glass
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_glass

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_glass

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_glass_delta : board_glass
{
    source = board_glass_delta
    path = /opt/sphinx_boards/board_glass_delta
}
source board_isolation
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`isolation`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            168 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`isolation` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`isolation` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`isolation` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_isolation_delta : board_isolation
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`isolation`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            168 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`isolation` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_isolation
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_isolation

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_isolation

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_isolation_delta : board_isolation
{
    source = board_isolation_delta
    path = /opt/sphinx_boards/board_isolation_delta
}
source board_jaguar
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`jaguar`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            169 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`jaguar` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`jaguar` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`jaguar` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_jaguar_delta : board_jaguar
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`jaguar`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            169 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`jaguar` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_jaguar
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_jaguar

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_jaguar

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_jaguar_delta : board_jaguar
{
    source = board_jaguar_delta
    path = /opt/sphinx_boards/board_jaguar_delta
}
source board_kpk
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`kpk`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            170 AS conf_id, \
            3 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`kpk` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`kpk` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`kpk` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_kpk_delta : board_kpk
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`kpk`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            170 AS conf_id, \
            3 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`kpk` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_kpk
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_kpk

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_kpk

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_kpk_delta : board_kpk
{
    source = board_kpk_delta
    path = /opt/sphinx_boards/board_kpk_delta
}
source board_lancia
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`lancia`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            171 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`lancia` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`lancia` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`lancia` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_lancia_delta : board_lancia
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`lancia`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            171 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`lancia` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_lancia
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_lancia

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_lancia

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_lancia_delta : board_lancia
{
    source = board_lancia_delta
    path = /opt/sphinx_boards/board_lancia_delta
}
source board_honda
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`honda`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            172 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`honda` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`honda` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`honda` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_honda_delta : board_honda
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`honda`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            172 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`honda` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_honda
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_honda

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_honda

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_honda_delta : board_honda
{
    source = board_honda_delta
    path = /opt/sphinx_boards/board_honda_delta
}
source board_housing
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`housing`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            174 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`housing` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`housing` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`housing` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_housing_delta : board_housing
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`housing`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            174 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`housing` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_housing
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_housing

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_housing

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_housing_delta : board_housing
{
    source = board_housing_delta
    path = /opt/sphinx_boards/board_housing_delta
}
source board_hyundai
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`hyundai`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            176 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`hyundai` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`hyundai` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`hyundai` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_hyundai_delta : board_hyundai
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`hyundai`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            176 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`hyundai` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_hyundai
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_hyundai

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_hyundai

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_hyundai_delta : board_hyundai
{
    source = board_hyundai_delta
    path = /opt/sphinx_boards/board_hyundai_delta
}
source board_ig
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`ig`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            177 AS conf_id, \
            1 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`ig` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`ig` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`ig` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_ig_delta : board_ig
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`ig`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            177 AS conf_id, \
            1 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`ig` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_ig
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_ig

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_ig

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_ig_delta : board_ig
{
    source = board_ig_delta
    path = /opt/sphinx_boards/board_ig_delta
}
source board_insure
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`insure`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            178 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`insure` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`insure` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`insure` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_insure_delta : board_insure
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`insure`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            178 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`insure` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_insure
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_insure

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_insure

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_insure_delta : board_insure
{
    source = board_insure_delta
    path = /opt/sphinx_boards/board_insure_delta
}
source board_isuzu
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`isuzu`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            179 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`isuzu` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`isuzu` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`isuzu` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_isuzu_delta : board_isuzu
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`isuzu`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            179 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`isuzu` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_isuzu
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_isuzu

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_isuzu

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_isuzu_delta : board_isuzu
{
    source = board_isuzu_delta
    path = /opt/sphinx_boards/board_isuzu_delta
}
source board_japan
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`japan`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            180 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`japan` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`japan` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`japan` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_japan_delta : board_japan
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`japan`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            180 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`japan` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_japan
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_japan

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_japan

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_japan_delta : board_japan
{
    source = board_japan_delta
    path = /opt/sphinx_boards/board_japan_delta
}
source board_jeep
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`jeep`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            181 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`jeep` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`jeep` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`jeep` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_jeep_delta : board_jeep
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`jeep`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            181 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`jeep` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_jeep
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_jeep

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_jeep

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_jeep_delta : board_jeep
{
    source = board_jeep_delta
    path = /opt/sphinx_boards/board_jeep_delta
}
source board_kia
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`kia`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            182 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`kia` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`kia` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`kia` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_kia_delta : board_kia
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`kia`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            182 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`kia` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_kia
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_kia

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_kia

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_kia_delta : board_kia
{
    source = board_kia_delta
    path = /opt/sphinx_boards/board_kia_delta
}
source board_label
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`label`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            183 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`label` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`label` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`label` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_label_delta : board_label
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`label`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            183 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`label` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_label
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_label

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_label

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_label_delta : board_label
{
    source = board_label_delta
    path = /opt/sphinx_boards/board_label_delta
}
source board_land-rover
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`land-rover`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            184 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`land-rover` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`land-rover` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`land-rover` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_land-rover_delta : board_land-rover
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`land-rover`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            184 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`land-rover` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_land-rover
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_land-rover

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_land-rover

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_land-rover_delta : board_land-rover
{
    source = board_land-rover_delta
    path = /opt/sphinx_boards/board_land-rover_delta
}
source board_law
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`law`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            185 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`law` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`law` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`law` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_law_delta : board_law
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`law`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            185 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`law` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_law
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_law

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_law

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_law_delta : board_law
{
    source = board_law_delta
    path = /opt/sphinx_boards/board_law_delta
}
source board_lexus
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`lexus`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            186 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`lexus` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`lexus` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`lexus` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_lexus_delta : board_lexus
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`lexus`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            186 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`lexus` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_lexus
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_lexus

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_lexus

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_lexus_delta : board_lexus
{
    source = board_lexus_delta
    path = /opt/sphinx_boards/board_lexus_delta
}
source board_light
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`light`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            187 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`light` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`light` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`light` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_light_delta : board_light
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`light`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            187 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`light` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_light
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_light

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_light

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_light_delta : board_light
{
    source = board_light_delta
    path = /opt/sphinx_boards/board_light_delta
}
source board_lorry
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`lorry`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            188 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`lorry` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`lorry` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`lorry` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_lorry_delta : board_lorry
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`lorry`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            188 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`lorry` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_lorry
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_lorry

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_lorry

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_lorry_delta : board_lorry
{
    source = board_lorry_delta
    path = /opt/sphinx_boards/board_lorry_delta
}
source board_moto
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`moto`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            189 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`moto` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`moto` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`moto` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_moto_delta : board_moto
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`moto`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            189 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`moto` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_moto
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_moto

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_moto

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_moto_delta : board_moto
{
    source = board_moto_delta
    path = /opt/sphinx_boards/board_moto_delta
}
source board_mp3
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`mp3`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            190 AS conf_id, \
            3 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`mp3` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`mp3` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`mp3` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_mp3_delta : board_mp3
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`mp3`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            190 AS conf_id, \
            3 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`mp3` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_mp3
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_mp3

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_mp3

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_mp3_delta : board_mp3
{
    source = board_mp3_delta
    path = /opt/sphinx_boards/board_mp3_delta
}
source board_music
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`music`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            191 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`music` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`music` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`music` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_music_delta : board_music
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`music`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            191 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`music` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_music
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_music

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_music

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_music_delta : board_music
{
    source = board_music_delta
    path = /opt/sphinx_boards/board_music_delta
}
source board_mazda
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`mazda`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            192 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`mazda` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`mazda` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`mazda` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_mazda_delta : board_mazda
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`mazda`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            192 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`mazda` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_mazda
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_mazda

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_mazda

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_mazda_delta : board_mazda
{
    source = board_mazda_delta
    path = /opt/sphinx_boards/board_mazda_delta
}
source board_mercedes
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`mercedes`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            193 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`mercedes` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`mercedes` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`mercedes` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_mercedes_delta : board_mercedes
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`mercedes`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            193 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`mercedes` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_mercedes
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_mercedes

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_mercedes

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_mercedes_delta : board_mercedes
{
    source = board_mercedes_delta
    path = /opt/sphinx_boards/board_mercedes_delta
}
source board_koleso
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`koleso`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            194 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`koleso` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`koleso` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`koleso` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_koleso_delta : board_koleso
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`koleso`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            194 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`koleso` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_koleso
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_koleso

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_koleso

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_koleso_delta : board_koleso
{
    source = board_koleso_delta
    path = /opt/sphinx_boards/board_koleso_delta
}
source board_opyt
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`opyt`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            196 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`opyt` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`opyt` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`opyt` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_opyt_delta : board_opyt
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`opyt`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            196 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`opyt` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_opyt
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_opyt

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_opyt

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_opyt_delta : board_opyt
{
    source = board_opyt_delta
    path = /opt/sphinx_boards/board_opyt_delta
}
source board_mitsubishi
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`mitsubishi`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            198 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`mitsubishi` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`mitsubishi` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`mitsubishi` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_mitsubishi_delta : board_mitsubishi
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`mitsubishi`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            198 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`mitsubishi` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_mitsubishi
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_mitsubishi

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_mitsubishi

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_mitsubishi_delta : board_mitsubishi
{
    source = board_mitsubishi_delta
    path = /opt/sphinx_boards/board_mitsubishi_delta
}
source board_moscvich
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`moscvich`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            199 AS conf_id, \
            1 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`moscvich` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`moscvich` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`moscvich` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_moscvich_delta : board_moscvich
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`moscvich`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            199 AS conf_id, \
            1 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`moscvich` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_moscvich
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_moscvich

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_moscvich

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_moscvich_delta : board_moscvich
{
    source = board_moscvich_delta
    path = /opt/sphinx_boards/board_moscvich_delta
}
source board_nissan
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`nissan`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            200 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`nissan` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`nissan` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`nissan` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_nissan_delta : board_nissan
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`nissan`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            200 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`nissan` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_nissan
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_nissan

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_nissan

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_nissan_delta : board_nissan
{
    source = board_nissan_delta
    path = /opt/sphinx_boards/board_nissan_delta
}
source board_oil
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`oil`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            201 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`oil` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`oil` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`oil` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_oil_delta : board_oil
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`oil`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            201 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`oil` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_oil
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_oil

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_oil

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_oil_delta : board_oil
{
    source = board_oil_delta
    path = /opt/sphinx_boards/board_oil_delta
}
source board_oka
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`oka`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            202 AS conf_id, \
            1 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`oka` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`oka` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`oka` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_oka_delta : board_oka
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`oka`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            202 AS conf_id, \
            1 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`oka` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_oka
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_oka

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_oka

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_oka_delta : board_oka
{
    source = board_oka_delta
    path = /opt/sphinx_boards/board_oka_delta
}
source board_peregon
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`peregon`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            203 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`peregon` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`peregon` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`peregon` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_peregon_delta : board_peregon
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`peregon`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            203 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`peregon` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_peregon
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_peregon

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_peregon

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_peregon_delta : board_peregon
{
    source = board_peregon_delta
    path = /opt/sphinx_boards/board_peregon_delta
}
source board_peugeot
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`peugeot`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            204 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`peugeot` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`peugeot` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`peugeot` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_peugeot_delta : board_peugeot
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`peugeot`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            204 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`peugeot` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_peugeot
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_peugeot

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_peugeot

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_peugeot_delta : board_peugeot
{
    source = board_peugeot_delta
    path = /opt/sphinx_boards/board_peugeot_delta
}
source board_pharmacy
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`pharmacy`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            205 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`pharmacy` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`pharmacy` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`pharmacy` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_pharmacy_delta : board_pharmacy
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`pharmacy`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            205 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`pharmacy` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_pharmacy
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_pharmacy

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_pharmacy

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_pharmacy_delta : board_pharmacy
{
    source = board_pharmacy_delta
    path = /opt/sphinx_boards/board_pharmacy_delta
}
source board_phone
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`phone`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            206 AS conf_id, \
            3 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`phone` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`phone` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`phone` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_phone_delta : board_phone
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`phone`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            206 AS conf_id, \
            3 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`phone` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_phone
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_phone

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_phone

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_phone_delta : board_phone
{
    source = board_phone_delta
    path = /opt/sphinx_boards/board_phone_delta
}
source board_porsche
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`porsche`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            207 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`porsche` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`porsche` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`porsche` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_porsche_delta : board_porsche
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`porsche`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            207 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`porsche` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_porsche
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_porsche

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_porsche

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_porsche_delta : board_porsche
{
    source = board_porsche_delta
    path = /opt/sphinx_boards/board_porsche_delta
}
source board_rally
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`rally`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            208 AS conf_id, \
            8 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`rally` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`rally` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`rally` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_rally_delta : board_rally
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`rally`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            208 AS conf_id, \
            8 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`rally` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_rally
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_rally

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_rally

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_rally_delta : board_rally
{
    source = board_rally_delta
    path = /opt/sphinx_boards/board_rally_delta
}
source board_renault
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`renault`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            209 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`renault` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`renault` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`renault` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_renault_delta : board_renault
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`renault`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            209 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`renault` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_renault
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_renault

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_renault

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_renault_delta : board_renault
{
    source = board_renault_delta
    path = /opt/sphinx_boards/board_renault_delta
}
source board_retro
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`retro`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            210 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`retro` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`retro` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`retro` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_retro_delta : board_retro
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`retro`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            210 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`retro` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_retro
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_retro

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_retro

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_retro_delta : board_retro
{
    source = board_retro_delta
    path = /opt/sphinx_boards/board_retro_delta
}
source board_route
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`route`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            211 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`route` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`route` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`route` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_route_delta : board_route
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`route`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            211 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`route` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_route
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_route

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_route

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_route_delta : board_route
{
    source = board_route_delta
    path = /opt/sphinx_boards/board_route_delta
}
source board_rover
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`rover`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            212 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`rover` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`rover` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`rover` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_rover_delta : board_rover
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`rover`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            212 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`rover` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_rover
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_rover

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_rover

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_rover_delta : board_rover
{
    source = board_rover_delta
    path = /opt/sphinx_boards/board_rover_delta
}
source board_rusopyt
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`rusopyt`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            213 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`rusopyt` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`rusopyt` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`rusopyt` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_rusopyt_delta : board_rusopyt
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`rusopyt`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            213 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`rusopyt` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_rusopyt
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_rusopyt

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_rusopyt

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_rusopyt_delta : board_rusopyt
{
    source = board_rusopyt_delta
    path = /opt/sphinx_boards/board_rusopyt_delta
}
source board_ruststop
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`ruststop`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            214 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`ruststop` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`ruststop` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`ruststop` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_ruststop_delta : board_ruststop
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`ruststop`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            214 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`ruststop` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_ruststop
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_ruststop

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_ruststop

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_ruststop_delta : board_ruststop
{
    source = board_ruststop_delta
    path = /opt/sphinx_boards/board_ruststop_delta
}
source board_sport
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`sport`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            215 AS conf_id, \
            8 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`sport` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`sport` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`sport` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_sport_delta : board_sport
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`sport`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            215 AS conf_id, \
            8 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`sport` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_sport
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_sport

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_sport

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_sport_delta : board_sport
{
    source = board_sport_delta
    path = /opt/sphinx_boards/board_sport_delta
}
source board_scale
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`scale`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            216 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`scale` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`scale` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`scale` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_scale_delta : board_scale
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`scale`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            216 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`scale` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_scale
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_scale

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_scale

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_scale_delta : board_scale
{
    source = board_scale_delta
    path = /opt/sphinx_boards/board_scale_delta
}
source board_saab
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`saab`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            217 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`saab` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`saab` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`saab` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_saab_delta : board_saab
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`saab`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            217 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`saab` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_saab
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_saab

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_saab

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_saab_delta : board_saab
{
    source = board_saab_delta
    path = /opt/sphinx_boards/board_saab_delta
}
source board_seat
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`seat`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            218 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`seat` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`seat` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`seat` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_seat_delta : board_seat
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`seat`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            218 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`seat` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_seat
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_seat

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_seat

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_seat_delta : board_seat
{
    source = board_seat_delta
    path = /opt/sphinx_boards/board_seat_delta
}
source board_springs
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`springs`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            219 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`springs` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`springs` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`springs` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_springs_delta : board_springs
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`springs`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            219 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`springs` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_springs
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_springs

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_springs

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_springs_delta : board_springs
{
    source = board_springs_delta
    path = /opt/sphinx_boards/board_springs_delta
}
source board_ssang-yong
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`ssang-yong`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            220 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`ssang-yong` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`ssang-yong` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`ssang-yong` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_ssang-yong_delta : board_ssang-yong
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`ssang-yong`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            220 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`ssang-yong` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_ssang-yong
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_ssang-yong

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_ssang-yong

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_ssang-yong_delta : board_ssang-yong
{
    source = board_ssang-yong_delta
    path = /opt/sphinx_boards/board_ssang-yong_delta
}
source board_tools
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`tools`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            221 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`tools` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`tools` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`tools` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_tools_delta : board_tools
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`tools`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            221 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`tools` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_tools
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_tools

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_tools

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_tools_delta : board_tools
{
    source = board_tools_delta
    path = /opt/sphinx_boards/board_tools_delta
}
source board_warming
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`warming`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            222 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`warming` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`warming` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`warming` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_warming_delta : board_warming
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`warming`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            222 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`warming` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_warming
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_warming

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_warming

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_warming_delta : board_warming
{
    source = board_warming_delta
    path = /opt/sphinx_boards/board_warming_delta
}
source board_valuation
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`valuation`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            223 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`valuation` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`valuation` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`valuation` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_valuation_delta : board_valuation
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`valuation`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            223 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`valuation` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_valuation
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_valuation

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_valuation

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_valuation_delta : board_valuation
{
    source = board_valuation_delta
    path = /opt/sphinx_boards/board_valuation_delta
}
source board_usa
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`usa`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            224 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`usa` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`usa` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`usa` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_usa_delta : board_usa
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`usa`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            224 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`usa` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_usa
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_usa

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_usa

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_usa_delta : board_usa
{
    source = board_usa_delta
    path = /opt/sphinx_boards/board_usa_delta
}
source board_skoda
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`skoda`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            225 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`skoda` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`skoda` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`skoda` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_skoda_delta : board_skoda
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`skoda`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            225 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`skoda` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_skoda
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_skoda

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_skoda

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_skoda_delta : board_skoda
{
    source = board_skoda_delta
    path = /opt/sphinx_boards/board_skoda_delta
}
source board_stealings
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`stealings`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            226 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`stealings` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`stealings` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`stealings` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_stealings_delta : board_stealings
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`stealings`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            226 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`stealings` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_stealings
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_stealings

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_stealings

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_stealings_delta : board_stealings
{
    source = board_stealings_delta
    path = /opt/sphinx_boards/board_stealings_delta
}
source board_subaru
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`subaru`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            227 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`subaru` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`subaru` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`subaru` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_subaru_delta : board_subaru
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`subaru`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            227 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`subaru` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_subaru
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_subaru

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_subaru

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_subaru_delta : board_subaru
{
    source = board_subaru_delta
    path = /opt/sphinx_boards/board_subaru_delta
}
source board_suzuki
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`suzuki`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            228 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`suzuki` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`suzuki` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`suzuki` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_suzuki_delta : board_suzuki
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`suzuki`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            228 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`suzuki` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_suzuki
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_suzuki

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_suzuki

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_suzuki_delta : board_suzuki
{
    source = board_suzuki_delta
    path = /opt/sphinx_boards/board_suzuki_delta
}
source board_toyota
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`toyota`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            229 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`toyota` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`toyota` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`toyota` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_toyota_delta : board_toyota
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`toyota`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            229 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`toyota` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_toyota
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_toyota

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_toyota

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_toyota_delta : board_toyota
{
    source = board_toyota_delta
    path = /opt/sphinx_boards/board_toyota_delta
}
source board_tamogn
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`tamogn`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            231 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`tamogn` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`tamogn` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`tamogn` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_tamogn_delta : board_tamogn
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`tamogn`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            231 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`tamogn` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_tamogn
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_tamogn

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_tamogn

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_tamogn_delta : board_tamogn
{
    source = board_tamogn_delta
    path = /opt/sphinx_boards/board_tamogn_delta
}
source board_tavria
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`tavria`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            232 AS conf_id, \
            1 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`tavria` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`tavria` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`tavria` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_tavria_delta : board_tavria
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`tavria`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            232 AS conf_id, \
            1 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`tavria` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_tavria
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_tavria

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_tavria

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_tavria_delta : board_tavria
{
    source = board_tavria_delta
    path = /opt/sphinx_boards/board_tavria_delta
}
source board_turbo
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`turbo`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            233 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`turbo` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`turbo` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`turbo` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_turbo_delta : board_turbo
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`turbo`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            233 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`turbo` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_turbo
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_turbo

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_turbo

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_turbo_delta : board_turbo
{
    source = board_turbo_delta
    path = /opt/sphinx_boards/board_turbo_delta
}
source board_vin
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`vin`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            234 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`vin` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`vin` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`vin` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_vin_delta : board_vin
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`vin`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            234 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`vin` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_vin
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_vin

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_vin

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_vin_delta : board_vin
{
    source = board_vin_delta
    path = /opt/sphinx_boards/board_vin_delta
}
source board_zaz
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`zaz`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            235 AS conf_id, \
            1 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`zaz` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`zaz` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`zaz` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_zaz_delta : board_zaz
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`zaz`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            235 AS conf_id, \
            1 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`zaz` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_zaz
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_zaz

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_zaz

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_zaz_delta : board_zaz
{
    source = board_zaz_delta
    path = /opt/sphinx_boards/board_zaz_delta
}
source board_wwwclub
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`wwwclub`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            236 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`wwwclub` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`wwwclub` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`wwwclub` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_wwwclub_delta : board_wwwclub
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`wwwclub`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            236 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`wwwclub` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_wwwclub
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_wwwclub

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_wwwclub

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_wwwclub_delta : board_wwwclub
{
    source = board_wwwclub_delta
    path = /opt/sphinx_boards/board_wwwclub_delta
}
source board_tuning
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`tuning`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            237 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`tuning` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`tuning` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`tuning` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_tuning_delta : board_tuning
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`tuning`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            237 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`tuning` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_tuning
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_tuning

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_tuning

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_tuning_delta : board_tuning
{
    source = board_tuning_delta
    path = /opt/sphinx_boards/board_tuning_delta
}
source board_travel
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`travel`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            238 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`travel` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`travel` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`travel` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_travel_delta : board_travel
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`travel`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            238 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`travel` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_travel
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_travel

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_travel

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_travel_delta : board_travel
{
    source = board_travel_delta
    path = /opt/sphinx_boards/board_travel_delta
}
source board_uaz
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`uaz`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            239 AS conf_id, \
            1 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`uaz` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`uaz` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`uaz` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_uaz_delta : board_uaz
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`uaz`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            239 AS conf_id, \
            1 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`uaz` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_uaz
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_uaz

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_uaz

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_uaz_delta : board_uaz
{
    source = board_uaz_delta
    path = /opt/sphinx_boards/board_uaz_delta
}
source board_volvo
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`volvo`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            240 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`volvo` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`volvo` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`volvo` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_volvo_delta : board_volvo
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`volvo`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            240 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`volvo` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_volvo
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_volvo

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_volvo

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_volvo_delta : board_volvo
{
    source = board_volvo_delta
    path = /opt/sphinx_boards/board_volvo_delta
}
source board_vw
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`vw`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            241 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`vw` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`vw` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`vw` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_vw_delta : board_vw
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`vw`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            241 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`vw` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_vw
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_vw

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_vw

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_vw_delta : board_vw
{
    source = board_vw_delta
    path = /opt/sphinx_boards/board_vw_delta
}
source board_vaz-classic
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`vaz-classic`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            243 AS conf_id, \
            1 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`vaz-classic` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`vaz-classic` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`vaz-classic` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_vaz-classic_delta : board_vaz-classic
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`vaz-classic`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            243 AS conf_id, \
            1 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`vaz-classic` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_vaz-classic
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_vaz-classic

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_vaz-classic

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_vaz-classic_delta : board_vaz-classic
{
    source = board_vaz-classic_delta
    path = /opt/sphinx_boards/board_vaz-classic_delta
}
source board_vaz-newpart
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`vaz-newpart`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            244 AS conf_id, \
            1 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`vaz-newpart` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`vaz-newpart` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`vaz-newpart` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_vaz-newpart_delta : board_vaz-newpart
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`vaz-newpart`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            244 AS conf_id, \
            1 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`vaz-newpart` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_vaz-newpart
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_vaz-newpart

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_vaz-newpart

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_vaz-newpart_delta : board_vaz-newpart
{
    source = board_vaz-newpart_delta
    path = /opt/sphinx_boards/board_vaz-newpart_delta
}
source board_server
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`server`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            246 AS conf_id, \
            0 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`server` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`server` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`server` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_server_delta : board_server
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`server`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            246 AS conf_id, \
            0 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`server` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_server
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_server

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_server

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_server_delta : board_server
{
    source = board_server_delta
    path = /opt/sphinx_boards/board_server_delta
}
source board_mini
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`mini`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            247 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`mini` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`mini` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`mini` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_mini_delta : board_mini
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`mini`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            247 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`mini` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_mini
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_mini

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_mini

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_mini_delta : board_mini
{
    source = board_mini_delta
    path = /opt/sphinx_boards/board_mini_delta
}
source board_infiniti
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`infiniti`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            248 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`infiniti` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`infiniti` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`infiniti` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_infiniti_delta : board_infiniti
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`infiniti`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            248 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`infiniti` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_infiniti
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_infiniti

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_infiniti

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_infiniti_delta : board_infiniti
{
    source = board_infiniti_delta
    path = /opt/sphinx_boards/board_infiniti_delta
}
source board_garden
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`garden`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            249 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`garden` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`garden` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`garden` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_garden_delta : board_garden
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`garden`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            249 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`garden` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_garden
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_garden

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_garden

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_garden_delta : board_garden
{
    source = board_garden_delta
    path = /opt/sphinx_boards/board_garden_delta
}
source board_chevy-niva
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`chevy-niva`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            253 AS conf_id, \
            1 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`chevy-niva` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`chevy-niva` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`chevy-niva` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_chevy-niva_delta : board_chevy-niva
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`chevy-niva`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            253 AS conf_id, \
            1 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`chevy-niva` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_chevy-niva
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_chevy-niva

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_chevy-niva

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_chevy-niva_delta : board_chevy-niva
{
    source = board_chevy-niva_delta
    path = /opt/sphinx_boards/board_chevy-niva_delta
}
source board_smart
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`smart`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            260 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`smart` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`smart` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`smart` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_smart_delta : board_smart
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`smart`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            260 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`smart` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_smart
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_smart

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_smart

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_smart_delta : board_smart
{
    source = board_smart_delta
    path = /opt/sphinx_boards/board_smart_delta
}
source board_petersburg
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`petersburg`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            261 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`petersburg` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`petersburg` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`petersburg` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_petersburg_delta : board_petersburg
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`petersburg`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            261 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`petersburg` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_petersburg
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_petersburg

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_petersburg

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_petersburg_delta : board_petersburg
{
    source = board_petersburg_delta
    path = /opt/sphinx_boards/board_petersburg_delta
}
source board_shopping
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`shopping`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            262 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`shopping` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`shopping` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`shopping` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_shopping_delta : board_shopping
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`shopping`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            262 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`shopping` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_shopping
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_shopping

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_shopping

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_shopping_delta : board_shopping
{
    source = board_shopping_delta
    path = /opt/sphinx_boards/board_shopping_delta
}
source board_audiovideobs
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`audiovideobs`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            263 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`audiovideobs` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`audiovideobs` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`audiovideobs` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_audiovideobs_delta : board_audiovideobs
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`audiovideobs`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            263 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`audiovideobs` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_audiovideobs
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_audiovideobs

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_audiovideobs

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_audiovideobs_delta : board_audiovideobs
{
    source = board_audiovideobs_delta
    path = /opt/sphinx_boards/board_audiovideobs_delta
}
source board_estatebs
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`estatebs`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            264 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`estatebs` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`estatebs` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`estatebs` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_estatebs_delta : board_estatebs
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`estatebs`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            264 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`estatebs` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_estatebs
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_estatebs

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_estatebs

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_estatebs_delta : board_estatebs
{
    source = board_estatebs_delta
    path = /opt/sphinx_boards/board_estatebs_delta
}
source board_hybrid
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`hybrid`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            266 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`hybrid` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`hybrid` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`hybrid` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_hybrid_delta : board_hybrid
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`hybrid`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            266 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`hybrid` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_hybrid
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_hybrid

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_hybrid

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_hybrid_delta : board_hybrid
{
    source = board_hybrid_delta
    path = /opt/sphinx_boards/board_hybrid_delta
}
source board_dodge
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`dodge`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            267 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`dodge` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`dodge` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`dodge` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_dodge_delta : board_dodge
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`dodge`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            267 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`dodge` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_dodge
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_dodge

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_dodge

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_dodge_delta : board_dodge
{
    source = board_dodge_delta
    path = /opt/sphinx_boards/board_dodge_delta
}
source board_china
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`china`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            268 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`china` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`china` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`china` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_china_delta : board_china
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`china`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            268 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`china` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_china
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_china

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_china

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_china_delta : board_china
{
    source = board_china_delta
    path = /opt/sphinx_boards/board_china_delta
}
source board_quad
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`quad`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            269 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`quad` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`quad` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`quad` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_quad_delta : board_quad
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`quad`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            269 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`quad` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_quad
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_quad

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_quad

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_quad_delta : board_quad
{
    source = board_quad_delta
    path = /opt/sphinx_boards/board_quad_delta
}
source board_kolesobs
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`kolesobs`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            270 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`kolesobs` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`kolesobs` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`kolesobs` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_kolesobs_delta : board_kolesobs
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`kolesobs`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            270 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`kolesobs` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_kolesobs
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_kolesobs

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_kolesobs

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_kolesobs_delta : board_kolesobs
{
    source = board_kolesobs_delta
    path = /opt/sphinx_boards/board_kolesobs_delta
}
source board_forchildbs
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`forchildbs`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            271 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`forchildbs` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`forchildbs` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`forchildbs` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_forchildbs_delta : board_forchildbs
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`forchildbs`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            271 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`forchildbs` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_forchildbs
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_forchildbs

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_forchildbs

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_forchildbs_delta : board_forchildbs
{
    source = board_forchildbs_delta
    path = /opt/sphinx_boards/board_forchildbs_delta
}
source board_chevrolet-other
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`chevrolet-other`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            272 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`chevrolet-other` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`chevrolet-other` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`chevrolet-other` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_chevrolet-other_delta : board_chevrolet-other
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`chevrolet-other`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            272 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`chevrolet-other` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_chevrolet-other
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_chevrolet-other

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_chevrolet-other

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_chevrolet-other_delta : board_chevrolet-other
{
    source = board_chevrolet-other_delta
    path = /opt/sphinx_boards/board_chevrolet-other_delta
}
source board_lingua
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`lingua`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            273 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`lingua` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`lingua` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`lingua` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_lingua_delta : board_lingua
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`lingua`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            273 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`lingua` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_lingua
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_lingua

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_lingua

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_lingua_delta : board_lingua
{
    source = board_lingua_delta
    path = /opt/sphinx_boards/board_lingua_delta
}
source board_scion
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`scion`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            274 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`scion` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`scion` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`scion` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_scion_delta : board_scion
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`scion`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            274 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`scion` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_scion
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_scion

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_scion

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_scion_delta : board_scion
{
    source = board_scion_delta
    path = /opt/sphinx_boards/board_scion_delta
}
source board_weapon
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`weapon`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            275 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`weapon` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`weapon` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`weapon` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_weapon_delta : board_weapon
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`weapon`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            275 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`weapon` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_weapon
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_weapon

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_weapon

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_weapon_delta : board_weapon
{
    source = board_weapon_delta
    path = /opt/sphinx_boards/board_weapon_delta
}
source board_hummer
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`hummer`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            276 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`hummer` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`hummer` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`hummer` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_hummer_delta : board_hummer
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`hummer`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            276 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`hummer` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_hummer
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_hummer

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_hummer

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_hummer_delta : board_hummer
{
    source = board_hummer_delta
    path = /opt/sphinx_boards/board_hummer_delta
}
source board_autonazapchasti
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`autonazapchasti`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            278 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`autonazapchasti` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`autonazapchasti` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`autonazapchasti` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_autonazapchasti_delta : board_autonazapchasti
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`autonazapchasti`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            278 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`autonazapchasti` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_autonazapchasti
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_autonazapchasti

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_autonazapchasti

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_autonazapchasti_delta : board_autonazapchasti
{
    source = board_autonazapchasti_delta
    path = /opt/sphinx_boards/board_autonazapchasti_delta
}
source board_ford-focus
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`ford-focus`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            279 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`ford-focus` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`ford-focus` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`ford-focus` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_ford-focus_delta : board_ford-focus
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`ford-focus`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            279 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`ford-focus` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_ford-focus
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_ford-focus

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_ford-focus

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_ford-focus_delta : board_ford-focus
{
    source = board_ford-focus_delta
    path = /opt/sphinx_boards/board_ford-focus_delta
}
source board_watch
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`watch`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            280 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`watch` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`watch` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`watch` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_watch_delta : board_watch
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`watch`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            280 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`watch` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_watch
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_watch

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_watch

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_watch_delta : board_watch
{
    source = board_watch_delta
    path = /opt/sphinx_boards/board_watch_delta
}
source board_scooter
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`scooter`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            281 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`scooter` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`scooter` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`scooter` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_scooter_delta : board_scooter
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`scooter`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            281 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`scooter` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_scooter
{
    type          = plain
#
    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_scooter

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_scooter

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

 #   

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_scooter_delta : board_scooter
{
    source = board_scooter_delta
    path = /opt/sphinx_boards/board_scooter_delta
}
source board_cabriolet
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`cabriolet`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            282 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`cabriolet` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`cabriolet` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`cabriolet` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_cabriolet_delta : board_cabriolet
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`cabriolet`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            282 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`cabriolet` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_cabriolet
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_cabriolet

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_cabriolet

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_cabriolet_delta : board_cabriolet
{
    source = board_cabriolet_delta
    path = /opt/sphinx_boards/board_cabriolet_delta
}
source board_politics
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`politics`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            283 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`politics` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`politics` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`politics` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_politics_delta : board_politics
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`politics`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            283 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`politics` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_politics
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_politics

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_politics

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_politics_delta : board_politics
{
    source = board_politics_delta
    path = /opt/sphinx_boards/board_politics_delta
}
source board_family
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`family`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            284 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`family` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`family` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`family` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_family_delta : board_family
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`family`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            284 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`family` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_family
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_family

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_family

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_family_delta : board_family
{
    source = board_family_delta
    path = /opt/sphinx_boards/board_family_delta
}
source board_negative
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`negative`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            285 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`negative` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`negative` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`negative` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_negative_delta : board_negative
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`negative`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            285 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`negative` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_negative
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_negative

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_negative

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_negative_delta : board_negative
{
    source = board_negative_delta
    path = /opt/sphinx_boards/board_negative_delta
}
source board_photobs
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`photobs`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            287 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`photobs` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`photobs` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`photobs` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_photobs_delta : board_photobs
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`photobs`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            287 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`photobs` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_photobs
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_photobs

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_photobs

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_photobs_delta : board_photobs
{
    source = board_photobs_delta
    path = /opt/sphinx_boards/board_photobs_delta
}
source board_auction
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`auction`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            289 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`auction` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`auction` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`auction` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_auction_delta : board_auction
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`auction`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            289 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`auction` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_auction
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_auction

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_auction

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_auction_delta : board_auction
{
    source = board_auction_delta
    path = /opt/sphinx_boards/board_auction_delta
}
source board_railways
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`railways`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            290 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`railways` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`railways` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`railways` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_railways_delta : board_railways
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`railways`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            290 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`railways` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_railways
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_railways

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_railways

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_railways_delta : board_railways
{
    source = board_railways_delta
    path = /opt/sphinx_boards/board_railways_delta
}
source board_office
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`office`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            291 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`office` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`office` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`office` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_office_delta : board_office
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`office`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            291 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`office` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_office
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_office

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_office

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_office_delta : board_office
{
    source = board_office_delta
    path = /opt/sphinx_boards/board_office_delta
}
source board_logistic
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`logistic`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            292 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`logistic` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`logistic` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`logistic` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_logistic_delta : board_logistic
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`logistic`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            292 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`logistic` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_logistic
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_logistic

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_logistic

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_logistic_delta : board_logistic
{
    source = board_logistic_delta
    path = /opt/sphinx_boards/board_logistic_delta
}
source board_housingbs
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`housingbs`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            293 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`housingbs` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`housingbs` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`housingbs` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_housingbs_delta : board_housingbs
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`housingbs`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            293 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`housingbs` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_housingbs
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_housingbs

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_housingbs

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_housingbs_delta : board_housingbs
{
    source = board_housingbs_delta
    path = /opt/sphinx_boards/board_housingbs_delta
}
source board_investments
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`investments`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            294 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`investments` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`investments` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`investments` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_investments_delta : board_investments
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`investments`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            294 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`investments` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_investments
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_investments

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_investments

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_investments_delta : board_investments
{
    source = board_investments_delta
    path = /opt/sphinx_boards/board_investments_delta
}
source board_reclama
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`reclama`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            295 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`reclama` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`reclama` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`reclama` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_reclama_delta : board_reclama
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`reclama`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            295 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`reclama` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_reclama
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_reclama

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_reclama

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_reclama_delta : board_reclama
{
    source = board_reclama_delta
    path = /opt/sphinx_boards/board_reclama_delta
}
source board_management
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`management`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            296 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`management` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`management` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`management` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_management_delta : board_management
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`management`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            296 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`management` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_management
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_management

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_management

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_management_delta : board_management
{
    source = board_management_delta
    path = /opt/sphinx_boards/board_management_delta
}
source board_toyota-suv
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`toyota-suv`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            297 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`toyota-suv` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`toyota-suv` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`toyota-suv` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_toyota-suv_delta : board_toyota-suv
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`toyota-suv`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            297 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`toyota-suv` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_toyota-suv
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_toyota-suv

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_toyota-suv

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_toyota-suv_delta : board_toyota-suv
{
    source = board_toyota-suv_delta
    path = /opt/sphinx_boards/board_toyota-suv_delta
}
source board_4x4-offroad
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`4x4-offroad`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            299 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`4x4-offroad` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`4x4-offroad` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`4x4-offroad` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_4x4-offroad_delta : board_4x4-offroad
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`4x4-offroad`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            299 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`4x4-offroad` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_4x4-offroad
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_4x4-offroad

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_4x4-offroad

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_4x4-offroad_delta : board_4x4-offroad
{
    source = board_4x4-offroad_delta
    path = /opt/sphinx_boards/board_4x4-offroad_delta
}
source board_coldsteel
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`coldsteel`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            301 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`coldsteel` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`coldsteel` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`coldsteel` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_coldsteel_delta : board_coldsteel
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`coldsteel`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            301 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`coldsteel` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_coldsteel
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_coldsteel

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_coldsteel

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_coldsteel_delta : board_coldsteel
{
    source = board_coldsteel_delta
    path = /opt/sphinx_boards/board_coldsteel_delta
}
source board_night
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`night`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            302 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`night` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`night` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`night` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_night_delta : board_night
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`night`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            302 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`night` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_night
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_night

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_night

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_night_delta : board_night
{
    source = board_night_delta
    path = /opt/sphinx_boards/board_night_delta
}
source board_pontiac
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`pontiac`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            303 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`pontiac` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`pontiac` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`pontiac` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_pontiac_delta : board_pontiac
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`pontiac`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            303 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`pontiac` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_pontiac
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_pontiac

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_pontiac

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_pontiac_delta : board_pontiac
{
    source = board_pontiac_delta
    path = /opt/sphinx_boards/board_pontiac_delta
}
source board_ikco
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`ikco`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            304 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`ikco` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`ikco` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`ikco` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_ikco_delta : board_ikco
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`ikco`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            304 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`ikco` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_ikco
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_ikco

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_ikco

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_ikco_delta : board_ikco
{
    source = board_ikco_delta
    path = /opt/sphinx_boards/board_ikco_delta
}
source board_cooking
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`cooking`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            305 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`cooking` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`cooking` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`cooking` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_cooking_delta : board_cooking
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`cooking`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            305 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`cooking` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_cooking
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_cooking

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_cooking

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_cooking_delta : board_cooking
{
    source = board_cooking_delta
    path = /opt/sphinx_boards/board_cooking_delta
}
source board_beauty
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`beauty`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            306 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`beauty` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`beauty` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`beauty` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_beauty_delta : board_beauty
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`beauty`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            306 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`beauty` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_beauty
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_beauty

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_beauty

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_beauty_delta : board_beauty
{
    source = board_beauty_delta
    path = /opt/sphinx_boards/board_beauty_delta
}
source board_rotor
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`rotor`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            307 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`rotor` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`rotor` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`rotor` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_rotor_delta : board_rotor
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`rotor`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            307 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`rotor` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_rotor
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_rotor

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_rotor

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_rotor_delta : board_rotor
{
    source = board_rotor_delta
    path = /opt/sphinx_boards/board_rotor_delta
}
source board_service
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`service`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            308 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`service` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`service` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`service` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_service_delta : board_service
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`service`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            308 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`service` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_service
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_service

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_service

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_service_delta : board_service
{
    source = board_service_delta
    path = /opt/sphinx_boards/board_service_delta
}
source board_bus
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`bus`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            309 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`bus` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`bus` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`bus` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_bus_delta : board_bus
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`bus`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            309 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`bus` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_bus
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_bus

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_bus

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_bus_delta : board_bus
{
    source = board_bus_delta
    path = /opt/sphinx_boards/board_bus_delta
}
source board_tennis
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`tennis`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            313 AS conf_id, \
            8 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`tennis` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`tennis` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`tennis` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_tennis_delta : board_tennis
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`tennis`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            313 AS conf_id, \
            8 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`tennis` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_tennis
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_tennis

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_tennis

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_tennis_delta : board_tennis
{
    source = board_tennis_delta
    path = /opt/sphinx_boards/board_tennis_delta
}
source board_bentley
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`bentley`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            315 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`bentley` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`bentley` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`bentley` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_bentley_delta : board_bentley
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`bentley`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            315 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`bentley` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_bentley
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_bentley

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_bentley

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_bentley_delta : board_bentley
{
    source = board_bentley_delta
    path = /opt/sphinx_boards/board_bentley_delta
}
source board_chery
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`chery`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            316 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`chery` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`chery` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`chery` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_chery_delta : board_chery
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`chery`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            316 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`chery` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_chery
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_chery

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_chery

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_chery_delta : board_chery
{
    source = board_chery_delta
    path = /opt/sphinx_boards/board_chery_delta
}
source board_market
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`market`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            318 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`market` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`market` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`market` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_market_delta : board_market
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`market`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            318 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`market` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_market
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_market

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_market

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_market_delta : board_market
{
    source = board_market_delta
    path = /opt/sphinx_boards/board_market_delta
}
source board_pickup
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`pickup`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            319 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`pickup` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`pickup` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`pickup` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_pickup_delta : board_pickup
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`pickup`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            319 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`pickup` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_pickup
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_pickup

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_pickup

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_pickup_delta : board_pickup
{
    source = board_pickup_delta
    path = /opt/sphinx_boards/board_pickup_delta
}
source board_lifan
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`lifan`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            320 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`lifan` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`lifan` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`lifan` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_lifan_delta : board_lifan
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`lifan`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            320 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`lifan` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_lifan
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_lifan

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_lifan

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_lifan_delta : board_lifan
{
    source = board_lifan_delta
    path = /opt/sphinx_boards/board_lifan_delta
}
source board_flowers
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`flowers`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            321 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`flowers` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`flowers` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`flowers` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_flowers_delta : board_flowers
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`flowers`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            321 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`flowers` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_flowers
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_flowers

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_flowers

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_flowers_delta : board_flowers
{
    source = board_flowers_delta
    path = /opt/sphinx_boards/board_flowers_delta
}
source board_crisis
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`crisis`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            322 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`crisis` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`crisis` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`crisis` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_crisis_delta : board_crisis
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`crisis`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            322 AS conf_id, \
            7 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`crisis` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_crisis
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_crisis

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_crisis

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_crisis_delta : board_crisis
{
    source = board_crisis_delta
    path = /opt/sphinx_boards/board_crisis_delta
}
source board_worldmusic
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`worldmusic`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            323 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`worldmusic` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`worldmusic` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`worldmusic` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_worldmusic_delta : board_worldmusic
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`worldmusic`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            323 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`worldmusic` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_worldmusic
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_worldmusic

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_worldmusic

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_worldmusic_delta : board_worldmusic
{
    source = board_worldmusic_delta
    path = /opt/sphinx_boards/board_worldmusic_delta
}
source board_metallurgy
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`metallurgy`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            324 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`metallurgy` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`metallurgy` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`metallurgy` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_metallurgy_delta : board_metallurgy
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`metallurgy`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            324 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`metallurgy` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_metallurgy
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_metallurgy

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_metallurgy

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_metallurgy_delta : board_metallurgy
{
    source = board_metallurgy_delta
    path = /opt/sphinx_boards/board_metallurgy_delta
}
source board_r3k
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`r3k`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            326 AS conf_id, \
            8 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`r3k` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`r3k` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`r3k` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_r3k_delta : board_r3k
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`r3k`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            326 AS conf_id, \
            8 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`r3k` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_r3k
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_r3k

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_r3k

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_r3k_delta : board_r3k
{
    source = board_r3k_delta
    path = /opt/sphinx_boards/board_r3k_delta
}
source board_books
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`books`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            327 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`books` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`books` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`books` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_books_delta : board_books
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`books`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            327 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`books` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_books
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_books

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_books

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_books_delta : board_books
{
    source = board_books_delta
    path = /opt/sphinx_boards/board_books_delta
}
source board_cinema
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`cinema`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            328 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`cinema` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`cinema` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`cinema` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_cinema_delta : board_cinema
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`cinema`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            328 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`cinema` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_cinema
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_cinema

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_cinema

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_cinema_delta : board_cinema
{
    source = board_cinema_delta
    path = /opt/sphinx_boards/board_cinema_delta
}
source board_radiomodels
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`radiomodels`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            329 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`radiomodels` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`radiomodels` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`radiomodels` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_radiomodels_delta : board_radiomodels
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`radiomodels`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            329 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`radiomodels` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_radiomodels
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_radiomodels

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_radiomodels

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_radiomodels_delta : board_radiomodels
{
    source = board_radiomodels_delta
    path = /opt/sphinx_boards/board_radiomodels_delta
}
source board_netbooks
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`netbooks`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            330 AS conf_id, \
            3 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`netbooks` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`netbooks` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`netbooks` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_netbooks_delta : board_netbooks
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`netbooks`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            330 AS conf_id, \
            3 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`netbooks` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_netbooks
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_netbooks

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_netbooks

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_netbooks_delta : board_netbooks
{
    source = board_netbooks_delta
    path = /opt/sphinx_boards/board_netbooks_delta
}
source board_sirs-club
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`sirs-club`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            331 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`sirs-club` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`sirs-club` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`sirs-club` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_sirs-club_delta : board_sirs-club
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`sirs-club`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            331 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`sirs-club` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_sirs-club
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_sirs-club

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_sirs-club

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_sirs-club_delta : board_sirs-club
{
    source = board_sirs-club_delta
    path = /opt/sphinx_boards/board_sirs-club_delta
}
source board_sclass
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`sclass`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            332 AS conf_id, \
            0 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`sclass` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`sclass` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`sclass` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_sclass_delta : board_sclass
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`sclass`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            332 AS conf_id, \
            0 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`sclass` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_sclass
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_sclass

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_sclass

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    


    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_sclass_delta : board_sclass
{
    source = board_sclass_delta
    path = /opt/sphinx_boards/board_sclass_delta
}
source board_togoodhands
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`togoodhands`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            333 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`togoodhands` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`togoodhands` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`togoodhands` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_togoodhands_delta : board_togoodhands
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`togoodhands`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            333 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`togoodhands` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_togoodhands
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_togoodhands

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_togoodhands

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_togoodhands_delta : board_togoodhands
{
    source = board_togoodhands_delta
    path = /opt/sphinx_boards/board_togoodhands_delta
}
source board_drinks
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`drinks`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            334 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`drinks` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`drinks` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`drinks` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_drinks_delta : board_drinks
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`drinks`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            334 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`drinks` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_drinks
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_drinks

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_drinks

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_drinks_delta : board_drinks
{
    source = board_drinks_delta
    path = /opt/sphinx_boards/board_drinks_delta
}
source board_taxi
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`taxi`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            335 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`taxi` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`taxi` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`taxi` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_taxi_delta : board_taxi
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`taxi`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            335 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`taxi` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_taxi
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_taxi

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_taxi

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_taxi_delta : board_taxi
{
    source = board_taxi_delta
    path = /opt/sphinx_boards/board_taxi_delta
}
source board_tagaz
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`tagaz`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            336 AS conf_id, \
            1 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`tagaz` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`tagaz` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`tagaz` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_tagaz_delta : board_tagaz
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`tagaz`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            336 AS conf_id, \
            1 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`tagaz` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_tagaz
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_tagaz

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_tagaz

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_tagaz_delta : board_tagaz
{
    source = board_tagaz_delta
    path = /opt/sphinx_boards/board_tagaz_delta
}
source board_snowmobile
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`snowmobile`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            339 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`snowmobile` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`snowmobile` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`snowmobile` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_snowmobile_delta : board_snowmobile
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`snowmobile`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            339 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`snowmobile` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_snowmobile
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_snowmobile

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_snowmobile

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_snowmobile_delta : board_snowmobile
{
    source = board_snowmobile_delta
    path = /opt/sphinx_boards/board_snowmobile_delta
}
source board_banned
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`banned`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            341 AS conf_id, \
            0 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`banned` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`banned` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`banned` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_banned_delta : board_banned
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`banned`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            341 AS conf_id, \
            0 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`banned` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_banned
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_banned

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_banned

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_banned_delta : board_banned
{
    source = board_banned_delta
    path = /opt/sphinx_boards/board_banned_delta
}
source board_nabolelo
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`nabolelo`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            342 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`nabolelo` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`nabolelo` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`nabolelo` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_nabolelo_delta : board_nabolelo
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`nabolelo`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            342 AS conf_id, \
            9 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`nabolelo` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_nabolelo
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_nabolelo

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_nabolelo

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_nabolelo_delta : board_nabolelo
{
    source = board_nabolelo_delta
    path = /opt/sphinx_boards/board_nabolelo_delta
}
source board_gm-usa
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`gm-usa`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            343 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`gm-usa` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`gm-usa` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`gm-usa` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_gm-usa_delta : board_gm-usa
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`gm-usa`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            343 AS conf_id, \
            2 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`gm-usa` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_gm-usa
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_gm-usa

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_gm-usa

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_gm-usa_delta : board_gm-usa
{
    source = board_gm-usa_delta
    path = /opt/sphinx_boards/board_gm-usa_delta
}
source board_boardgames
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`boardgames`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            344 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`boardgames` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`boardgames` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`boardgames` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_boardgames_delta : board_boardgames
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`boardgames`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            344 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`boardgames` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_boardgames
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_boardgames

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_boardgames

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_boardgames_delta : board_boardgames
{
    source = board_boardgames_delta
    path = /opt/sphinx_boards/board_boardgames_delta
}
source board_roller
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`roller`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            346 AS conf_id, \
            8 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`roller` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`roller` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`roller` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_roller_delta : board_roller
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`roller`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            346 AS conf_id, \
            8 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`roller` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_roller
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_roller

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_roller

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_roller_delta : board_roller
{
    source = board_roller_delta
    path = /opt/sphinx_boards/board_roller_delta
}
source board_fitness
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`fitness`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            347 AS conf_id, \
            8 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`fitness` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`fitness` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`fitness` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_fitness_delta : board_fitness
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`fitness`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            347 AS conf_id, \
            8 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`fitness` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_fitness
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_fitness

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_fitness

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_fitness_delta : board_fitness
{
    source = board_fitness_delta
    path = /opt/sphinx_boards/board_fitness_delta
}
source board_levashov
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`levashov`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            349 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`levashov` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`levashov` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`levashov` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_levashov_delta : board_levashov
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`levashov`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            349 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`levashov` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_levashov
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_levashov

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_levashov

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_levashov_delta : board_levashov
{
    source = board_levashov_delta
    path = /opt/sphinx_boards/board_levashov_delta
}
source board_antiques
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`antiques`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            350 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`antiques` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`antiques` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`antiques` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_antiques_delta : board_antiques
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`antiques`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            350 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`antiques` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_antiques
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_antiques

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_antiques

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_antiques_delta : board_antiques
{
    source = board_antiques_delta
    path = /opt/sphinx_boards/board_antiques_delta
}
source board_coins
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`coins`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            351 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`coins` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`coins` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`coins` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_coins_delta : board_coins
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`coins`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            351 AS conf_id, \
            10 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`coins` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_coins
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_coins

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_coins

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_coins_delta : board_coins
{
    source = board_coins_delta
    path = /opt/sphinx_boards/board_coins_delta
}
source board_tourism
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`tourism`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            352 AS conf_id, \
            8 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`tourism` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`tourism` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`tourism` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_tourism_delta : board_tourism
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`tourism`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            352 AS conf_id, \
            8 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`tourism` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_tourism
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_tourism

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_tourism

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_tourism_delta : board_tourism
{
    source = board_tourism_delta
    path = /opt/sphinx_boards/board_tourism_delta
}
source board_newparts
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`newparts`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            354 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`newparts` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`newparts` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`newparts` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_newparts_delta : board_newparts
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`newparts`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            354 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`newparts` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_newparts
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_newparts

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_newparts

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_newparts_delta : board_newparts
{
    source = board_newparts_delta
    path = /opt/sphinx_boards/board_newparts_delta
}
source board_iconfa
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`iconfa`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            355 AS conf_id, \
            3 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`iconfa` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`iconfa` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`iconfa` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_iconfa_delta : board_iconfa
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`iconfa`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            355 AS conf_id, \
            3 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`iconfa` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_iconfa
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_iconfa

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_iconfa

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_iconfa_delta : board_iconfa
{
    source = board_iconfa_delta
    path = /opt/sphinx_boards/board_iconfa_delta
}
source board_electro
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`electro`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            357 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`electro` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`electro` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`electro` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_electro_delta : board_electro
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`electro`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            357 AS conf_id, \
            5 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`electro` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_electro
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_electro

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_electro

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

#    

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_electro_delta : board_electro
{
    source = board_electro_delta
    path = /opt/sphinx_boards/board_electro_delta
}
source board_exchange
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`exchange`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            358 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`exchange` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`exchange` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`exchange` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_exchange_delta : board_exchange
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`exchange`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            358 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`exchange` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_exchange
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_exchange

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_exchange

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_exchange_delta : board_exchange
{
    source = board_exchange_delta
    path = /opt/sphinx_boards/board_exchange_delta
}
source board_shoppingbs
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`shoppingbs`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            359 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`shoppingbs` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`shoppingbs` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`shoppingbs` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_shoppingbs_delta : board_shoppingbs
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`shoppingbs`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            359 AS conf_id, \
            4 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`shoppingbs` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_shoppingbs
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_shoppingbs

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_shoppingbs

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_shoppingbs_delta : board_shoppingbs
{
    source = board_shoppingbs_delta
    path = /opt/sphinx_boards/board_shoppingbs_delta
}
source board_telefir
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`telefir`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            361 AS conf_id, \
            3 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`telefir` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`telefir` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`telefir` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_telefir_delta : board_telefir
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`telefir`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            361 AS conf_id, \
            3 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`telefir` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_telefir
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_telefir

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_telefir

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_telefir_delta : board_telefir
{
    source = board_telefir_delta
    path = /opt/sphinx_boards/board_telefir_delta
}
source board_android
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`android`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            363 AS conf_id, \
            3 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`android` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`android` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`android` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_android_delta : board_android
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`android`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            363 AS conf_id, \
            3 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`android` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_android
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_android

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_android

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_android_delta : board_android
{
    source = board_android_delta
    path = /opt/sphinx_boards/board_android_delta
}
source board_aero
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`aero`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            364 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`aero` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`aero` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`aero` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_aero_delta : board_aero
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`aero`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            364 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`aero` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_aero
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_aero

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_aero

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_aero_delta : board_aero
{
    source = board_aero_delta
    path = /opt/sphinx_boards/board_aero_delta
}
source board_autoru-tv
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`autoru-tv`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            365 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`autoru-tv` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`autoru-tv` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`autoru-tv` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_autoru-tv_delta : board_autoru-tv
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`autoru-tv`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            365 AS conf_id, \
            6 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`autoru-tv` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_autoru-tv
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_autoru-tv

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_autoru-tv

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_autoru-tv_delta : board_autoru-tv
{
    source = board_autoru-tv_delta
    path = /opt/sphinx_boards/board_autoru-tv_delta
}
source board_videoregister
{
    # data source type. mandatory, no default value
    # known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type            = mysql

    #####################################################################
    ## SQL settings (for 'mysql' and 'pgsql' types)
    #####################################################################

    # some straightforward parameters for SQL source types
    sql_host        = 127.0.0.1
    sql_user        = auto
    sql_pass        = KiX1euph
    sql_db          = current
    sql_port        = 1403

    sql_query_pre = SET NAMES utf8

    sql_query_range = SELECT MIN(id), MAX(id) FROM `archive`.`videoregister`
    sql_range_step = 30000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            366 AS conf_id, \
            3 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `archive`.`videoregister` \
        WHERE id >= $start AND id <= $end

    # UNIX timestamp attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # similar to integer, but can also be used in date functions
    #
    # sql_attr_timestamp    = posted_ts
    # sql_attr_timestamp    = last_edited_ts
    sql_attr_timestamp  = msg_ts
    sql_attr_timestamp  = topic_upd_ts

    # unsigned integer attribute declaration
    # multi-value (an arbitrary number of attributes is allowed), optional
    # optional bit size can be specified, default is 32
    #
    # sql_attr_uint     = author_id
    # sql_attr_uint     = forum_id:9 # 9 bits for forum_id
    sql_attr_uint       = topic_id
    sql_attr_uint       = group_id:8
    sql_attr_uint       = conf_id:12

    # string attribute declaration
    # multi-value (an arbitrary number of these is allowed), optional
    # lets you store and retrieve strings
    #
    # sql_attr_string       = stitle

    sql_field_string = nick

    # document info query, ONLY for CLI search (ie. testing and debugging)
    # optional, default is empty
    # must contain $id macro and must fetch the document by that id
    sql_query_info      = \
        SELECT * FROM current.`videoregister` WHERE id=$id \
        UNION ALL \
        SELECT * FROM archive.`videoregister` WHERE id=$id

    # kill-list query, fetches the document IDs for kill-list
    # k-list will suppress matches from preceding indexes in the same query
    # optional, default is empty
    #
    # sql_query_killlist    = SELECT id FROM documents WHERE edited>=@last_reindex
}

source board_videoregister_delta : board_videoregister
{
    sql_query_pre = SET NAMES utf8
    sql_query_range = SELECT MIN(id), MAX(id) FROM `current`.`videoregister`
    sql_range_step = 10000

    sql_query = \
        SELECT \
            id, \
            topic_id, \
            366 AS conf_id, \
            3 AS group_id, \
            UNIX_TIMESTAMP(date) AS msg_ts, \
            UNIX_TIMESTAMP(topic_date) AS topic_upd_ts, \
            nick, \
            subj, \
            body \
        FROM `current`.`videoregister` \
        WHERE id >= $start AND id <= $end
}
# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index board_videoregister
{
    type          = plain

    # document source(s) to index
    # multi-value, mandatory
    # document IDs must be globally unique across all sources
    source          = board_videoregister

    # index files path and file name, without extension
    # mandatory, path must be writable, extensions will be auto-appended
    path            = /opt/sphinx_boards/board_videoregister

    index_exact_words = 1
    expand_keywords = 1
    docinfo         = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock           = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology      = stem_enru

    #

    index_exact_words = 1
    expand_keywords = 1

    # minimum word length at which to enable stemming
    # optional, default is 1 (stem everything)
    #
    #min_stemming_len  = 3

    # minimum indexed word length
    # default is 1 (index everything)
    #min_word_len        = 1

    # charset encoding type
    # optional, default is 'sbcs'
    # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
    charset_type        = utf-8

    # whether to strip HTML tags from incoming documents
    # known values are 0 (do not strip) and 1 (do strip)
    # optional, default is 0
    html_strip      = 1

    # what HTML attributes to index if stripping HTML
    # optional, default is empty (do not index anything)
    #
    # html_index_attrs  = img=alt,title; a=title;

    # what HTML elements contents to strip
    # optional, default is empty (do not strip element contents)
    #
    html_remove_elements  = style, script
}

index board_videoregister_delta : board_videoregister
{
    source = board_videoregister_delta
    path = /opt/sphinx_boards/board_videoregister_delta
}
