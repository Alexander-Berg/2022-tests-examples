{% for item in servers if item.hostname == inventory_hostname %}
broker.id={{ item.server_id }}
{% endfor %}

{% for item in servers if item.hostname == inventory_hostname %}
host.name={{ item.hostname }}
{% endfor %}

listeners=PLAINTEXT://:9092

default.replication.factor=3
delete.topic.enable=true
auto.create.topics.enable=false

num.network.threads=3
num.io.threads=8

socket.send.buffer.bytes=-1
socket.receive.buffer.bytes=-1
socket.request.max.bytes=104857600

num.partitions=1
num.recovery.threads.per.data.dir=1

log.retention.hours=48
log.retention.check.interval.ms=300000
log.flush.scheduler.interval.ms=1000
log.segment.bytes=128144000
log.dirs=/usr/lib/kafka/data/

offsets.retention.minutes=10080

zookeeper.connect={{ zookeeper }}
zookeeper.connection.timeout.ms=6000

replica.fetch.wait.max.ms=300
replica.socket.receive.buffer.bytes=-1
replica.socket.timeout.ms=50000
replica.lag.time.max.ms=30000
#replica.fetch.max.bytes=2097152
#replica.fetch.avg.bytes=1048576

num.replica.fetchers=4
num.network.threads=6
#num.io.threads=16

message.max.bytes=12582912

#authorizer.class.name=kafka.security.auth.SimpleAclAuthorizer
#super.users=User:spooner;User:logab

min.insync.replicas=2

unclean.leader.election.enable=false

controlled.shutdown.enable=true

offsets.topic.replication.factor=3

offsets.commit.timeout.ms=15000

inter.broker.protocol.version=2.3
#log.message.format.version=0.10.2
