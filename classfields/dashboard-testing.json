[
  {
    "target": [
      "aliasByNode(one_min.%vertis_vtest_salesman_tasks.salesman-tasks.jvm.memory.heap.used, 1)",
      "alias(maxSeries(one_min.%vertis_vtest_salesman_tasks.salesman-tasks.jvm.memory.heap.max), 'max')"
    ],
    "title": "Salesman-Tasks Memory"
  },


  {
    "target": [
      "aliasByNode(one_min.%vertis_vtest_salesman_tasks.salesman-tasks.ru.auto.salesman.push.impl.AsyncPushClientImpl.autoru.set.m1_rate, 1)"
    ],
    "title": "OfferBillings push rate (set)"
  },
  {
    "target": [
      "aliasByNode(one_min.%vertis_vtest_salesman_tasks.salesman-tasks.ru.auto.salesman.push.impl.AsyncPushClientImpl.autoru.skip.m1_rate, 1)"
    ],
    "title": "OfferBillings push rate (skip)"
  },
  {
    "target": [
      "aliasByMetric(one_min.salesman-tasks-01-sas_test_vertis_yandex_net.salesman-tasks.ru.auto.salesman.push.impl.AsyncPushClientImpl.autoru.set.p*)",
      "aliasByMetric(one_min.salesman-tasks-01-sas_test_vertis_yandex_net.salesman-tasks.ru.auto.salesman.push.impl.AsyncPushClientImpl.autoru.set.max)"
    ],
    "title": "OfferBillings push latency (set, sas)"
  },
  {
    "target": [
      "aliasByMetric(one_min.salesman-tasks-01-sas_test_vertis_yandex_net.salesman-tasks.ru.auto.salesman.push.impl.AsyncPushClientImpl.autoru.skip.p*)",
      "aliasByMetric(one_min.salesman-tasks-01-sas_test_vertis_yandex_net.salesman-tasks.ru.auto.salesman.push.impl.AsyncPushClientImpl.autoru.skip.max)"
    ],
    "title": "OfferBillings push latency (skip, sas)"
  },


  {
    "target": [
      "aliasByNode(one_min.%vertis_vtest_salesman_tasks.salesman-tasks.ru.auto.salesman.service.impl.moisha.MoishaPriceEstimateService.autoru.estimate.m1_rate, 1)"
    ],
    "title": "Moisha request rate"
  },
  {
    "target": [
      "aliasByMetric(one_min.salesman-tasks-01-sas_test_vertis_yandex_net.salesman-tasks.ru.auto.salesman.service.impl.moisha.MoishaPriceEstimateService.autoru.estimate.p*)",
      "aliasByMetric(one_min.salesman-tasks-01-sas_test_vertis_yandex_net.salesman-tasks.ru.auto.salesman.service.impl.moisha.MoishaPriceEstimateService.autoru.estimate.max)"
    ],
    "title": "Moisha latency (sas)"
  },


  {
    "target": [
      "aliasByNode(one_min.%vertis_vtest_salesman_tasks.salesman-tasks.ru.auto.salesman.client.impl.AutoRuBillingBootstrapClient.autoru.getOrCreate.m1_rate, 1)"
    ],
    "title": "Billing bootstrap rate"
  },
  {
    "target": [
      "aliasByMetric(one_min.salesman-tasks-01-sas_test_vertis_yandex_net.salesman-tasks.ru.auto.salesman.client.impl.AutoRuBillingBootstrapClient.autoru.getOrCreate.p*)",
      "aliasByMetric(one_min.salesman-tasks-01-sas_test_vertis_yandex_net.salesman-tasks.ru.auto.salesman.client.impl.AutoRuBillingBootstrapClient.autoru.getOrCreate.max)"
    ],
    "title": "Billing bootstrap latency (sas)"
  },


  {
    "target": [
      "aliasByNode(one_min.%vertis_vtest_salesman_tasks.salesman-tasks.ru.auto.salesman.client.impl.AutoRuGuardianClient.autoru.hold.m1_rate, 1)"
    ],
    "title": "Guardian hold request rate"
  },
  {
    "target": [
      "aliasByMetric(one_min.salesman-tasks-01-sas_test_vertis_yandex_net.salesman-tasks.ru.auto.salesman.client.impl.AutoRuGuardianClient.autoru.hold.p*)",
      "aliasByMetric(one_min.salesman-tasks-01-sas_test_vertis_yandex_net.salesman-tasks.ru.auto.salesman.client.impl.AutoRuGuardianClient.autoru.hold.max)"
    ],
    "title": "Guardian hold latency (sas)"
  },


  {
    "target": [
      "alias(sumSeries(one_min.%vertis_vtest_salesman_tasks.salesman-tasks.ru.auto.salesman.tasks.PriceUpdateTask.autoru.process-record-success.m1_rate), 'success')",
      "alias(sumSeries(one_min.%vertis_vtest_salesman_tasks.salesman-tasks.ru.auto.salesman.tasks.PriceUpdateTask.autoru.process-record-failed.m1_rate), 'failed')"
    ],
    "title": "Price update statistics (per minute)"
  },


  {
    "target": [
      "alias(sumSeries(one_min.%vertis_vtest_salesman_tasks.salesman-tasks.ru.auto.salesman.push.impl.AsyncPushClientImpl.autoru.set-success.m1_rate), 'success')",
      "alias(sumSeries(one_min.%vertis_vtest_salesman_tasks.salesman-tasks.ru.auto.salesman.push.impl.AsyncPushClientImpl.autoru.set-failed.m1_rate), 'failed')"
    ],
    "title": "OfferBilling push statistics (set, per minute)"
  },
  {
    "target": [
      "alias(sumSeries(one_min.%vertis_vtest_salesman_tasks.salesman-tasks.ru.auto.salesman.push.impl.AsyncPushClientImpl.autoru.skip-success.m1_rate), 'success')",
      "alias(sumSeries(one_min.%vertis_vtest_salesman_tasks.salesman-tasks.ru.auto.salesman.push.impl.AsyncPushClientImpl.autoru.skip-failed.m1_rate), 'failed')"
    ],
    "title": "OfferBilling push statistics (skip, per minute)"
  },


  {
    "target": [
      "groupByNode(one_min.%vertis_vtest_salesman_tasks.salesman-tasks.ru.auto.salesman.service.impl.GoodsDeciderImpl.autoru.decide-*.m1_rate, 10, 'sumSeries')"
    ],
    "title": "Activate statistics (per minute)"
  },

  {
    "target": [
      "alias(sumSeries(one_min.%vertis_vtest_salesman_tasks.salesman-tasks.ru.auto.salesman.tasks.ActivateExpiredOffersTask.autoru.activate-success.m1_rate), 'success')",
      "alias(sumSeries(one_min.%vertis_vtest_salesman_tasks.salesman-tasks.ru.auto.salesman.tasks.ActivateExpiredOffersTask.autoru.activate-failed.m1_rate), 'failed')"
    ],
    "title": "Activate expired statistics (per minute)"
  }
]