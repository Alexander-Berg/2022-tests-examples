// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renderActionButton тесты должен вернуть кнопку активации, если client.status === stopped 1`] = `
<Button
  className="ClientsItemFooter__button ClientsItemFooter__button_action"
  color="white"
  onClick={[Function]}
  size="l"
  type="button"
  width="default"
>
  Активировать
</Button>
`;

exports[`renderActionButton тесты должен вернуть кнопку декативации, если client.status === active 1`] = `
<Button
  className="ClientsItemFooter__button ClientsItemFooter__button_action"
  color="white"
  onClick={[Function]}
  size="l"
  type="button"
  width="default"
>
  Остановить размещение
</Button>
`;

exports[`renderActionButton тесты должен вернуть пустой контейнер для других статусов клиентов 1`] = `
<div
  className="ClientsItemFooter__button ClientsItemFooter__button_action"
/>
`;

exports[`renderMimicButton: должен нарисовать Button, если у клиента несколько юзеров 1`] = `
<Dropdown
  autoClose={true}
  closeOnInside={true}
  directions={
    Array [
      "left-center",
    ]
  }
  disabled={false}
  switcher={
    <Button
      className="ClientsItemFooter__button ClientsItemFooter__button_mimic"
      color="white"
      size="l"
      type="button"
      width="default"
    >
      <IconSvg
        id="svgID"
        size="24"
      />
    </Button>
  }
  type="click"
>
  <Menu
    maxHeight={null}
    onChange={[Function]}
    onFocusChange={[Function]}
    onItemClick={[Function]}
    size="m"
    tabIndex={0}
  >
    <Item
      className="ClientsItemFooter__item"
      id={111}
      value={111}
    >
      <Button
        clasName="ClientsItemFooter__button"
        size="l"
        type="link"
        url="linkOld"
        width="default"
      >
        111@yandex.ru
      </Button>
    </Item>
    <Item
      className="ClientsItemFooter__item"
      id={222}
      value={222}
    >
      <Button
        clasName="ClientsItemFooter__button"
        size="l"
        type="link"
        url="linkOld"
        width="default"
      >
        222@yandex.ru
      </Button>
    </Item>
  </Menu>
</Dropdown>
`;

exports[`Должен вернуть набор кнопок для объявления 1`] = `
<div
  className="ClientsItemFooter"
>
  <Button
    className="ClientsItemFooter__button"
    color="white"
    disabled={false}
    size="l"
    type="link"
    url="linkToCabinet"
    width="full"
  >
    Объявления 
    <span>
      45
    </span>
  </Button>
  <Button
    className="ClientsItemFooter__button"
    color="white"
    disabled={false}
    size="l"
    type="link"
    url="linkToCabinet"
    width="full"
  >
    Кошелек
  </Button>
  <Button
    className="ClientsItemFooter__button"
    color="white"
    disabled={false}
    size="l"
    type="link"
    url="linkToCabinet"
    width="full"
  >
    Настройка тарифа
  </Button>
  <Button
    className="ClientsItemFooter__button"
    color="white"
    disabled={false}
    size="l"
    type="link"
    url="linkToCabinet"
    width="full"
  >
    Информация о салоне
  </Button>
  <Button
    className="ClientsItemFooter__button"
    color="white"
    disabled={false}
    size="l"
    type="link"
    url="linkToCabinet"
    width="full"
  >
    Реквизиты
  </Button>
  <div
    className="ClientsItemFooter__button ClientsItemFooter__button_action"
  />
  <Button
    className="ClientsItemFooter__button ClientsItemFooter__button_mimic"
    color="white"
    size="l"
    type="link"
    url=""
    width="default"
  >
    <IconSvg
      id="svgID"
      size="24"
    />
  </Button>
</div>
`;
