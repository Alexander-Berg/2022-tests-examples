// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.7.1
// source: all.proto

package pandora_proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ExecutionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain *DomainId `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Query  *Query    `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ExecutionRequest) Reset() {
	*x = ExecutionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_all_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionRequest) ProtoMessage() {}

func (x *ExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_all_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionRequest.ProtoReflect.Descriptor instead.
func (*ExecutionRequest) Descriptor() ([]byte, []int) {
	return file_all_proto_rawDescGZIP(), []int{0}
}

func (x *ExecutionRequest) GetDomain() *DomainId {
	if x != nil {
		return x.Domain
	}
	return nil
}

func (x *ExecutionRequest) GetQuery() *Query {
	if x != nil {
		return x.Query
	}
	return nil
}

type ExecutionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *Any `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *ExecutionResult) Reset() {
	*x = ExecutionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_all_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionResult) ProtoMessage() {}

func (x *ExecutionResult) ProtoReflect() protoreflect.Message {
	mi := &file_all_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionResult.ProtoReflect.Descriptor instead.
func (*ExecutionResult) Descriptor() ([]byte, []int) {
	return file_all_proto_rawDescGZIP(), []int{1}
}

func (x *ExecutionResult) GetPayload() *Any {
	if x != nil {
		return x.Payload
	}
	return nil
}

type FindObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain *DomainId `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Pk     *RawValue `protobuf:"bytes,2,opt,name=pk,proto3" json:"pk,omitempty"`
}

func (x *FindObjectRequest) Reset() {
	*x = FindObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_all_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindObjectRequest) ProtoMessage() {}

func (x *FindObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_all_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindObjectRequest.ProtoReflect.Descriptor instead.
func (*FindObjectRequest) Descriptor() ([]byte, []int) {
	return file_all_proto_rawDescGZIP(), []int{2}
}

func (x *FindObjectRequest) GetDomain() *DomainId {
	if x != nil {
		return x.Domain
	}
	return nil
}

func (x *FindObjectRequest) GetPk() *RawValue {
	if x != nil {
		return x.Pk
	}
	return nil
}

type IntegerValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Primitive:
	//	*IntegerValue_Sint64
	Primitive isIntegerValue_Primitive `protobuf_oneof:"primitive"`
}

func (x *IntegerValue) Reset() {
	*x = IntegerValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_all_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegerValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegerValue) ProtoMessage() {}

func (x *IntegerValue) ProtoReflect() protoreflect.Message {
	mi := &file_all_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegerValue.ProtoReflect.Descriptor instead.
func (*IntegerValue) Descriptor() ([]byte, []int) {
	return file_all_proto_rawDescGZIP(), []int{3}
}

func (m *IntegerValue) GetPrimitive() isIntegerValue_Primitive {
	if m != nil {
		return m.Primitive
	}
	return nil
}

func (x *IntegerValue) GetSint64() int64 {
	if x, ok := x.GetPrimitive().(*IntegerValue_Sint64); ok {
		return x.Sint64
	}
	return 0
}

type isIntegerValue_Primitive interface {
	isIntegerValue_Primitive()
}

type IntegerValue_Sint64 struct {
	Sint64 int64 `protobuf:"zigzag64,18,opt,name=sint64,proto3,oneof"`
}

func (*IntegerValue_Sint64) isIntegerValue_Primitive() {}

type FloatValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Primitive:
	//	*FloatValue_Double
	//	*FloatValue_Float
	Primitive isFloatValue_Primitive `protobuf_oneof:"primitive"`
}

func (x *FloatValue) Reset() {
	*x = FloatValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_all_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FloatValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FloatValue) ProtoMessage() {}

func (x *FloatValue) ProtoReflect() protoreflect.Message {
	mi := &file_all_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FloatValue.ProtoReflect.Descriptor instead.
func (*FloatValue) Descriptor() ([]byte, []int) {
	return file_all_proto_rawDescGZIP(), []int{4}
}

func (m *FloatValue) GetPrimitive() isFloatValue_Primitive {
	if m != nil {
		return m.Primitive
	}
	return nil
}

func (x *FloatValue) GetDouble() float64 {
	if x, ok := x.GetPrimitive().(*FloatValue_Double); ok {
		return x.Double
	}
	return 0
}

func (x *FloatValue) GetFloat() float32 {
	if x, ok := x.GetPrimitive().(*FloatValue_Float); ok {
		return x.Float
	}
	return 0
}

type isFloatValue_Primitive interface {
	isFloatValue_Primitive()
}

type FloatValue_Double struct {
	Double float64 `protobuf:"fixed64,1,opt,name=double,proto3,oneof"`
}

type FloatValue_Float struct {
	Float float32 `protobuf:"fixed32,2,opt,name=float,proto3,oneof"`
}

func (*FloatValue_Double) isFloatValue_Primitive() {}

func (*FloatValue_Float) isFloatValue_Primitive() {}

type GeoPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	GeoIds    []int64 `protobuf:"varint,3,rep,packed,name=geo_ids,json=geoIds,proto3" json:"geo_ids,omitempty"`
}

func (x *GeoPoint) Reset() {
	*x = GeoPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_all_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeoPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoPoint) ProtoMessage() {}

func (x *GeoPoint) ProtoReflect() protoreflect.Message {
	mi := &file_all_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoPoint.ProtoReflect.Descriptor instead.
func (*GeoPoint) Descriptor() ([]byte, []int) {
	return file_all_proto_rawDescGZIP(), []int{5}
}

func (x *GeoPoint) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *GeoPoint) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *GeoPoint) GetGeoIds() []int64 {
	if x != nil {
		return x.GeoIds
	}
	return nil
}

type Tuple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []*RawValue `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *Tuple) Reset() {
	*x = Tuple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_all_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tuple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tuple) ProtoMessage() {}

func (x *Tuple) ProtoReflect() protoreflect.Message {
	mi := &file_all_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tuple.ProtoReflect.Descriptor instead.
func (*Tuple) Descriptor() ([]byte, []int) {
	return file_all_proto_rawDescGZIP(), []int{6}
}

func (x *Tuple) GetFields() []*RawValue {
	if x != nil {
		return x.Fields
	}
	return nil
}

type RawValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ValueType:
	//	*RawValue_Integer
	//	*RawValue_Fp
	//	*RawValue_String_
	//	*RawValue_Bytes
	//	*RawValue_Any
	//	*RawValue_Tuple
	//	*RawValue_Point
	ValueType isRawValue_ValueType `protobuf_oneof:"value_type"`
	// Types that are assignable to FulltextAlterView:
	//	*RawValue_Text
	FulltextAlterView isRawValue_FulltextAlterView `protobuf_oneof:"fulltext_alter_view"`
}

func (x *RawValue) Reset() {
	*x = RawValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_all_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawValue) ProtoMessage() {}

func (x *RawValue) ProtoReflect() protoreflect.Message {
	mi := &file_all_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawValue.ProtoReflect.Descriptor instead.
func (*RawValue) Descriptor() ([]byte, []int) {
	return file_all_proto_rawDescGZIP(), []int{7}
}

func (m *RawValue) GetValueType() isRawValue_ValueType {
	if m != nil {
		return m.ValueType
	}
	return nil
}

func (x *RawValue) GetInteger() *IntegerValue {
	if x, ok := x.GetValueType().(*RawValue_Integer); ok {
		return x.Integer
	}
	return nil
}

func (x *RawValue) GetFp() *FloatValue {
	if x, ok := x.GetValueType().(*RawValue_Fp); ok {
		return x.Fp
	}
	return nil
}

func (x *RawValue) GetString_() string {
	if x, ok := x.GetValueType().(*RawValue_String_); ok {
		return x.String_
	}
	return ""
}

func (x *RawValue) GetBytes() []byte {
	if x, ok := x.GetValueType().(*RawValue_Bytes); ok {
		return x.Bytes
	}
	return nil
}

func (x *RawValue) GetAny() *Any {
	if x, ok := x.GetValueType().(*RawValue_Any); ok {
		return x.Any
	}
	return nil
}

func (x *RawValue) GetTuple() *Tuple {
	if x, ok := x.GetValueType().(*RawValue_Tuple); ok {
		return x.Tuple
	}
	return nil
}

func (x *RawValue) GetPoint() *GeoPoint {
	if x, ok := x.GetValueType().(*RawValue_Point); ok {
		return x.Point
	}
	return nil
}

func (m *RawValue) GetFulltextAlterView() isRawValue_FulltextAlterView {
	if m != nil {
		return m.FulltextAlterView
	}
	return nil
}

func (x *RawValue) GetText() string {
	if x, ok := x.GetFulltextAlterView().(*RawValue_Text); ok {
		return x.Text
	}
	return ""
}

type isRawValue_ValueType interface {
	isRawValue_ValueType()
}

type RawValue_Integer struct {
	Integer *IntegerValue `protobuf:"bytes,10,opt,name=integer,proto3,oneof"`
}

type RawValue_Fp struct {
	Fp *FloatValue `protobuf:"bytes,11,opt,name=fp,proto3,oneof"`
}

type RawValue_String_ struct {
	String_ string `protobuf:"bytes,12,opt,name=string,proto3,oneof"`
}

type RawValue_Bytes struct {
	Bytes []byte `protobuf:"bytes,13,opt,name=bytes,proto3,oneof"`
}

type RawValue_Any struct {
	Any *Any `protobuf:"bytes,14,opt,name=any,proto3,oneof"`
}

type RawValue_Tuple struct {
	Tuple *Tuple `protobuf:"bytes,15,opt,name=tuple,proto3,oneof"`
}

type RawValue_Point struct {
	Point *GeoPoint `protobuf:"bytes,16,opt,name=point,proto3,oneof"`
}

func (*RawValue_Integer) isRawValue_ValueType() {}

func (*RawValue_Fp) isRawValue_ValueType() {}

func (*RawValue_String_) isRawValue_ValueType() {}

func (*RawValue_Bytes) isRawValue_ValueType() {}

func (*RawValue_Any) isRawValue_ValueType() {}

func (*RawValue_Tuple) isRawValue_ValueType() {}

func (*RawValue_Point) isRawValue_ValueType() {}

type isRawValue_FulltextAlterView interface {
	isRawValue_FulltextAlterView()
}

type RawValue_Text struct {
	Text string `protobuf:"bytes,50,opt,name=text,proto3,oneof"`
}

func (*RawValue_Text) isRawValue_FulltextAlterView() {}

type DomainId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DomainId) Reset() {
	*x = DomainId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_all_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainId) ProtoMessage() {}

func (x *DomainId) ProtoReflect() protoreflect.Message {
	mi := &file_all_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainId.ProtoReflect.Descriptor instead.
func (*DomainId) Descriptor() ([]byte, []int) {
	return file_all_proto_rawDescGZIP(), []int{8}
}

func (x *DomainId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Eq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field string    `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Value *RawValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Eq) Reset() {
	*x = Eq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_all_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Eq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Eq) ProtoMessage() {}

func (x *Eq) ProtoReflect() protoreflect.Message {
	mi := &file_all_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Eq.ProtoReflect.Descriptor instead.
func (*Eq) Descriptor() ([]byte, []int) {
	return file_all_proto_rawDescGZIP(), []int{9}
}

func (x *Eq) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *Eq) GetValue() *RawValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type In struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field string      `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Value []*RawValue `protobuf:"bytes,2,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *In) Reset() {
	*x = In{}
	if protoimpl.UnsafeEnabled {
		mi := &file_all_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *In) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*In) ProtoMessage() {}

func (x *In) ProtoReflect() protoreflect.Message {
	mi := &file_all_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use In.ProtoReflect.Descriptor instead.
func (*In) Descriptor() ([]byte, []int) {
	return file_all_proto_rawDescGZIP(), []int{10}
}

func (x *In) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *In) GetValue() []*RawValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type IsNull struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
}

func (x *IsNull) Reset() {
	*x = IsNull{}
	if protoimpl.UnsafeEnabled {
		mi := &file_all_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsNull) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsNull) ProtoMessage() {}

func (x *IsNull) ProtoReflect() protoreflect.Message {
	mi := &file_all_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsNull.ProtoReflect.Descriptor instead.
func (*IsNull) Descriptor() ([]byte, []int) {
	return file_all_proto_rawDescGZIP(), []int{11}
}

func (x *IsNull) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

type LessThan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field    string    `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Value    *RawValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	OrEquals bool      `protobuf:"varint,3,opt,name=or_equals,json=orEquals,proto3" json:"or_equals,omitempty"`
}

func (x *LessThan) Reset() {
	*x = LessThan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_all_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessThan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessThan) ProtoMessage() {}

func (x *LessThan) ProtoReflect() protoreflect.Message {
	mi := &file_all_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessThan.ProtoReflect.Descriptor instead.
func (*LessThan) Descriptor() ([]byte, []int) {
	return file_all_proto_rawDescGZIP(), []int{12}
}

func (x *LessThan) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *LessThan) GetValue() *RawValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *LessThan) GetOrEquals() bool {
	if x != nil {
		return x.OrEquals
	}
	return false
}

type GreaterThan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field    string    `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Value    *RawValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	OrEquals bool      `protobuf:"varint,3,opt,name=or_equals,json=orEquals,proto3" json:"or_equals,omitempty"`
}

func (x *GreaterThan) Reset() {
	*x = GreaterThan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_all_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GreaterThan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GreaterThan) ProtoMessage() {}

func (x *GreaterThan) ProtoReflect() protoreflect.Message {
	mi := &file_all_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GreaterThan.ProtoReflect.Descriptor instead.
func (*GreaterThan) Descriptor() ([]byte, []int) {
	return file_all_proto_rawDescGZIP(), []int{13}
}

func (x *GreaterThan) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *GreaterThan) GetValue() *RawValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *GreaterThan) GetOrEquals() bool {
	if x != nil {
		return x.OrEquals
	}
	return false
}

type Between struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field        string    `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	From         *RawValue `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	OrEqualsFrom bool      `protobuf:"varint,3,opt,name=or_equals_from,json=orEqualsFrom,proto3" json:"or_equals_from,omitempty"`
	To           *RawValue `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	OrEqualsTo   bool      `protobuf:"varint,5,opt,name=or_equals_to,json=orEqualsTo,proto3" json:"or_equals_to,omitempty"`
}

func (x *Between) Reset() {
	*x = Between{}
	if protoimpl.UnsafeEnabled {
		mi := &file_all_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Between) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Between) ProtoMessage() {}

func (x *Between) ProtoReflect() protoreflect.Message {
	mi := &file_all_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Between.ProtoReflect.Descriptor instead.
func (*Between) Descriptor() ([]byte, []int) {
	return file_all_proto_rawDescGZIP(), []int{14}
}

func (x *Between) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *Between) GetFrom() *RawValue {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Between) GetOrEqualsFrom() bool {
	if x != nil {
		return x.OrEqualsFrom
	}
	return false
}

func (x *Between) GetTo() *RawValue {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *Between) GetOrEqualsTo() bool {
	if x != nil {
		return x.OrEqualsTo
	}
	return false
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	And []*Filter `protobuf:"bytes,1,rep,name=and,proto3" json:"and,omitempty"`
	Or  []*Filter `protobuf:"bytes,2,rep,name=or,proto3" json:"or,omitempty"`
	Not *Filter   `protobuf:"bytes,3,opt,name=not,proto3" json:"not,omitempty"`
	// Types that are assignable to Op:
	//	*Filter_Eq
	//	*Filter_In
	//	*Filter_IsNull
	//	*Filter_Lte
	//	*Filter_Gte
	//	*Filter_Between
	Op isFilter_Op `protobuf_oneof:"op"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_all_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_all_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_all_proto_rawDescGZIP(), []int{15}
}

func (x *Filter) GetAnd() []*Filter {
	if x != nil {
		return x.And
	}
	return nil
}

func (x *Filter) GetOr() []*Filter {
	if x != nil {
		return x.Or
	}
	return nil
}

func (x *Filter) GetNot() *Filter {
	if x != nil {
		return x.Not
	}
	return nil
}

func (m *Filter) GetOp() isFilter_Op {
	if m != nil {
		return m.Op
	}
	return nil
}

func (x *Filter) GetEq() *Eq {
	if x, ok := x.GetOp().(*Filter_Eq); ok {
		return x.Eq
	}
	return nil
}

func (x *Filter) GetIn() *In {
	if x, ok := x.GetOp().(*Filter_In); ok {
		return x.In
	}
	return nil
}

func (x *Filter) GetIsNull() *IsNull {
	if x, ok := x.GetOp().(*Filter_IsNull); ok {
		return x.IsNull
	}
	return nil
}

func (x *Filter) GetLte() *LessThan {
	if x, ok := x.GetOp().(*Filter_Lte); ok {
		return x.Lte
	}
	return nil
}

func (x *Filter) GetGte() *GreaterThan {
	if x, ok := x.GetOp().(*Filter_Gte); ok {
		return x.Gte
	}
	return nil
}

func (x *Filter) GetBetween() *Between {
	if x, ok := x.GetOp().(*Filter_Between); ok {
		return x.Between
	}
	return nil
}

type isFilter_Op interface {
	isFilter_Op()
}

type Filter_Eq struct {
	Eq *Eq `protobuf:"bytes,14,opt,name=eq,proto3,oneof"`
}

type Filter_In struct {
	In *In `protobuf:"bytes,15,opt,name=in,proto3,oneof"`
}

type Filter_IsNull struct {
	IsNull *IsNull `protobuf:"bytes,16,opt,name=is_null,json=isNull,proto3,oneof"`
}

type Filter_Lte struct {
	Lte *LessThan `protobuf:"bytes,17,opt,name=lte,proto3,oneof"`
}

type Filter_Gte struct {
	Gte *GreaterThan `protobuf:"bytes,18,opt,name=gte,proto3,oneof"`
}

type Filter_Between struct {
	Between *Between `protobuf:"bytes,19,opt,name=between,proto3,oneof"`
}

func (*Filter_Eq) isFilter_Op() {}

func (*Filter_In) isFilter_Op() {}

func (*Filter_IsNull) isFilter_Op() {}

func (*Filter_Lte) isFilter_Op() {}

func (*Filter_Gte) isFilter_Op() {}

func (*Filter_Between) isFilter_Op() {}

type ExecutionPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanId string `protobuf:"bytes,99,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
}

func (x *ExecutionPlan) Reset() {
	*x = ExecutionPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_all_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionPlan) ProtoMessage() {}

func (x *ExecutionPlan) ProtoReflect() protoreflect.Message {
	mi := &file_all_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionPlan.ProtoReflect.Descriptor instead.
func (*ExecutionPlan) Descriptor() ([]byte, []int) {
	return file_all_proto_rawDescGZIP(), []int{16}
}

func (x *ExecutionPlan) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

type Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter   *Filter           `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Text     *Text             `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Plan     *ExecutionPlan    `protobuf:"bytes,5,opt,name=plan,proto3" json:"plan,omitempty"`
	Metadata map[string]string `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Query) Reset() {
	*x = Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_all_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_all_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_all_proto_rawDescGZIP(), []int{17}
}

func (x *Query) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *Query) GetText() *Text {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *Query) GetPlan() *ExecutionPlan {
	if x != nil {
		return x.Plan
	}
	return nil
}

func (x *Query) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type Text struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *Text) Reset() {
	*x = Text{}
	if protoimpl.UnsafeEnabled {
		mi := &file_all_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Text) ProtoMessage() {}

func (x *Text) ProtoReflect() protoreflect.Message {
	mi := &file_all_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Text.ProtoReflect.Descriptor instead.
func (*Text) Descriptor() ([]byte, []int) {
	return file_all_proto_rawDescGZIP(), []int{18}
}

func (x *Text) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type Any struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeUrl string     `protobuf:"bytes,1,opt,name=type_url,json=typeUrl,proto3" json:"type_url,omitempty"`
	Value   []byte     `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	TypeId  *SRaaSType `protobuf:"bytes,99,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
}

func (x *Any) Reset() {
	*x = Any{}
	if protoimpl.UnsafeEnabled {
		mi := &file_all_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Any) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Any) ProtoMessage() {}

func (x *Any) ProtoReflect() protoreflect.Message {
	mi := &file_all_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Any.ProtoReflect.Descriptor instead.
func (*Any) Descriptor() ([]byte, []int) {
	return file_all_proto_rawDescGZIP(), []int{19}
}

func (x *Any) GetTypeUrl() string {
	if x != nil {
		return x.TypeUrl
	}
	return ""
}

func (x *Any) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Any) GetTypeId() *SRaaSType {
	if x != nil {
		return x.TypeId
	}
	return nil
}

type SRaaSType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version     string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	MessageName string `protobuf:"bytes,2,opt,name=message_name,json=messageName,proto3" json:"message_name,omitempty"`
}

func (x *SRaaSType) Reset() {
	*x = SRaaSType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_all_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SRaaSType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SRaaSType) ProtoMessage() {}

func (x *SRaaSType) ProtoReflect() protoreflect.Message {
	mi := &file_all_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SRaaSType.ProtoReflect.Descriptor instead.
func (*SRaaSType) Descriptor() ([]byte, []int) {
	return file_all_proto_rawDescGZIP(), []int{20}
}

func (x *SRaaSType) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SRaaSType) GetMessageName() string {
	if x != nil {
		return x.MessageName
	}
	return ""
}

var File_all_proto protoreflect.FileDescriptor

var file_all_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x73, 0x2e, 0x76, 0x61, 0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x22,
	0x79, 0x0a, 0x10, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x2e, 0x76, 0x61, 0x73,
	0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x2f, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x73, 0x2e, 0x76, 0x61, 0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x44, 0x0a, 0x0f, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x31, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x2e, 0x76, 0x61, 0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x22, 0x77, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x2e, 0x76,
	0x61, 0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x02, 0x70,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73,
	0x2e, 0x76, 0x61, 0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x61, 0x77,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x70, 0x6b, 0x22, 0x41, 0x0a, 0x0c, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x18, 0x12, 0x20, 0x01, 0x28, 0x12, 0x48, 0x00, 0x52, 0x06, 0x73, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x42, 0x0b, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65,
	0x4a, 0x04, 0x08, 0x01, 0x10, 0x12, 0x4a, 0x04, 0x08, 0x13, 0x10, 0x1f, 0x22, 0x51, 0x0a, 0x0a,
	0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x06, 0x64, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x06, 0x64, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x0b, 0x0a, 0x09,
	0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x1f, 0x22,
	0x5d, 0x0a, 0x08, 0x47, 0x65, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c,
	0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6f, 0x49, 0x64, 0x73, 0x22, 0x3d,
	0x0a, 0x05, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73,
	0x2e, 0x76, 0x61, 0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x61, 0x77,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0xfd, 0x02,
	0x0a, 0x08, 0x52, 0x61, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x73, 0x2e, 0x76, 0x61, 0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52,
	0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x02, 0x66, 0x70, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x2e, 0x76, 0x61,
	0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x02, 0x66, 0x70, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x03,
	0x61, 0x6e, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x73, 0x2e, 0x76, 0x61, 0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x6e, 0x79, 0x48, 0x00, 0x52, 0x03, 0x61, 0x6e, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x74, 0x75, 0x70,
	0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x73, 0x2e, 0x76, 0x61, 0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x75,
	0x70, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x05, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x05,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x73, 0x2e, 0x76, 0x61, 0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x05, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x15, 0x0a, 0x13, 0x66, 0x75, 0x6c, 0x6c, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x22, 0x1a, 0x0a,
	0x08, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x02, 0x45, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x2e, 0x76, 0x61,
	0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x61, 0x77, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4e, 0x0a, 0x02, 0x49, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x2e, 0x76, 0x61,
	0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x61, 0x77, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1e, 0x0a, 0x06, 0x49, 0x73, 0x4e,
	0x75, 0x6c, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x71, 0x0a, 0x08, 0x4c, 0x65, 0x73,
	0x73, 0x54, 0x68, 0x61, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x32, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x73, 0x2e, 0x76, 0x61, 0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x52, 0x61, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x5f, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x6f, 0x72, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x73, 0x22, 0x74, 0x0a, 0x0b,
	0x47, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x2e, 0x76, 0x61, 0x73, 0x67, 0x65, 0x6e,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x61, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x5f, 0x65, 0x71, 0x75, 0x61,
	0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x72, 0x45, 0x71, 0x75, 0x61,
	0x6c, 0x73, 0x22, 0xc7, 0x01, 0x0a, 0x07, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x2e, 0x76, 0x61, 0x73, 0x67,
	0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x61, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x24, 0x0a, 0x0e, 0x6f, 0x72, 0x5f, 0x65, 0x71, 0x75,
	0x61, 0x6c, 0x73, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x6f, 0x72, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x2c, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x73, 0x2e, 0x76, 0x61, 0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x61,
	0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x72,
	0x5f, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x73, 0x5f, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x6f, 0x72, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x73, 0x54, 0x6f, 0x22, 0xc1, 0x03, 0x0a,
	0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x03, 0x61, 0x6e, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x2e, 0x76, 0x61,
	0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x03, 0x61, 0x6e, 0x64, 0x12, 0x2a, 0x0a, 0x02, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x2e, 0x76, 0x61, 0x73, 0x67, 0x65,
	0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x02, 0x6f,
	0x72, 0x12, 0x2c, 0x0a, 0x03, 0x6e, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x2e, 0x76, 0x61, 0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x03, 0x6e, 0x6f, 0x74, 0x12,
	0x28, 0x0a, 0x02, 0x65, 0x71, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x73, 0x2e, 0x76, 0x61, 0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x45, 0x71, 0x48, 0x00, 0x52, 0x02, 0x65, 0x71, 0x12, 0x28, 0x0a, 0x02, 0x69, 0x6e, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x2e, 0x76,
	0x61, 0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x48, 0x00, 0x52,
	0x02, 0x69, 0x6e, 0x12, 0x35, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x2e, 0x76, 0x61,
	0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x73, 0x4e, 0x75, 0x6c, 0x6c,
	0x48, 0x00, 0x52, 0x06, 0x69, 0x73, 0x4e, 0x75, 0x6c, 0x6c, 0x12, 0x30, 0x0a, 0x03, 0x6c, 0x74,
	0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73,
	0x2e, 0x76, 0x61, 0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x65, 0x73,
	0x73, 0x54, 0x68, 0x61, 0x6e, 0x48, 0x00, 0x52, 0x03, 0x6c, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x03,
	0x67, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x73, 0x2e, 0x76, 0x61, 0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x48, 0x00, 0x52, 0x03, 0x67, 0x74,
	0x65, 0x12, 0x37, 0x0a, 0x07, 0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x2e, 0x76, 0x61, 0x73, 0x67,
	0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x48,
	0x00, 0x52, 0x07, 0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x42, 0x04, 0x0a, 0x02, 0x6f, 0x70,
	0x22, 0x28, 0x0a, 0x0d, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61,
	0x6e, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x63, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x22, 0xa2, 0x02, 0x0a, 0x05, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x32, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x2e, 0x76, 0x61,
	0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x2e,
	0x76, 0x61, 0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x2e, 0x76, 0x61,
	0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x12, 0x43, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x2e, 0x76, 0x61, 0x73, 0x67, 0x65, 0x6e, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x1c, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x6e, 0x0a,
	0x03, 0x41, 0x6e, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x79, 0x70, 0x65, 0x55, 0x72, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x2e,
	0x76, 0x61, 0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x52, 0x61, 0x61,
	0x53, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x48, 0x0a,
	0x09, 0x53, 0x52, 0x61, 0x61, 0x53, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0xac, 0x01, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x12, 0x54, 0x0a, 0x07, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x24, 0x2e,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x2e, 0x76, 0x61, 0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x2e, 0x76, 0x61, 0x73,
	0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4c, 0x0a, 0x0a, 0x46, 0x69, 0x6e, 0x64,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x25, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x2e,
	0x76, 0x61, 0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x2e, 0x76, 0x61, 0x73, 0x67, 0x65, 0x6e, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x41, 0x6e, 0x79, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x3b, 0x70, 0x61, 0x6e, 0x64,
	0x6f, 0x72, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_all_proto_rawDescOnce sync.Once
	file_all_proto_rawDescData = file_all_proto_rawDesc
)

func file_all_proto_rawDescGZIP() []byte {
	file_all_proto_rawDescOnce.Do(func() {
		file_all_proto_rawDescData = protoimpl.X.CompressGZIP(file_all_proto_rawDescData)
	})
	return file_all_proto_rawDescData
}

var file_all_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_all_proto_goTypes = []interface{}{
	(*ExecutionRequest)(nil),  // 0: vertis.vasgen.grpc.ExecutionRequest
	(*ExecutionResult)(nil),   // 1: vertis.vasgen.grpc.ExecutionResult
	(*FindObjectRequest)(nil), // 2: vertis.vasgen.grpc.FindObjectRequest
	(*IntegerValue)(nil),      // 3: vertis.vasgen.grpc.IntegerValue
	(*FloatValue)(nil),        // 4: vertis.vasgen.grpc.FloatValue
	(*GeoPoint)(nil),          // 5: vertis.vasgen.grpc.GeoPoint
	(*Tuple)(nil),             // 6: vertis.vasgen.grpc.Tuple
	(*RawValue)(nil),          // 7: vertis.vasgen.grpc.RawValue
	(*DomainId)(nil),          // 8: vertis.vasgen.grpc.DomainId
	(*Eq)(nil),                // 9: vertis.vasgen.grpc.Eq
	(*In)(nil),                // 10: vertis.vasgen.grpc.In
	(*IsNull)(nil),            // 11: vertis.vasgen.grpc.IsNull
	(*LessThan)(nil),          // 12: vertis.vasgen.grpc.LessThan
	(*GreaterThan)(nil),       // 13: vertis.vasgen.grpc.GreaterThan
	(*Between)(nil),           // 14: vertis.vasgen.grpc.Between
	(*Filter)(nil),            // 15: vertis.vasgen.grpc.Filter
	(*ExecutionPlan)(nil),     // 16: vertis.vasgen.grpc.ExecutionPlan
	(*Query)(nil),             // 17: vertis.vasgen.grpc.Query
	(*Text)(nil),              // 18: vertis.vasgen.grpc.Text
	(*Any)(nil),               // 19: vertis.vasgen.grpc.Any
	(*SRaaSType)(nil),         // 20: vertis.vasgen.grpc.SRaaSType
	nil,                       // 21: vertis.vasgen.grpc.Query.MetadataEntry
}
var file_all_proto_depIdxs = []int32{
	8,  // 0: vertis.vasgen.grpc.ExecutionRequest.domain:type_name -> vertis.vasgen.grpc.DomainId
	17, // 1: vertis.vasgen.grpc.ExecutionRequest.query:type_name -> vertis.vasgen.grpc.Query
	19, // 2: vertis.vasgen.grpc.ExecutionResult.payload:type_name -> vertis.vasgen.grpc.Any
	8,  // 3: vertis.vasgen.grpc.FindObjectRequest.domain:type_name -> vertis.vasgen.grpc.DomainId
	7,  // 4: vertis.vasgen.grpc.FindObjectRequest.pk:type_name -> vertis.vasgen.grpc.RawValue
	7,  // 5: vertis.vasgen.grpc.Tuple.fields:type_name -> vertis.vasgen.grpc.RawValue
	3,  // 6: vertis.vasgen.grpc.RawValue.integer:type_name -> vertis.vasgen.grpc.IntegerValue
	4,  // 7: vertis.vasgen.grpc.RawValue.fp:type_name -> vertis.vasgen.grpc.FloatValue
	19, // 8: vertis.vasgen.grpc.RawValue.any:type_name -> vertis.vasgen.grpc.Any
	6,  // 9: vertis.vasgen.grpc.RawValue.tuple:type_name -> vertis.vasgen.grpc.Tuple
	5,  // 10: vertis.vasgen.grpc.RawValue.point:type_name -> vertis.vasgen.grpc.GeoPoint
	7,  // 11: vertis.vasgen.grpc.Eq.value:type_name -> vertis.vasgen.grpc.RawValue
	7,  // 12: vertis.vasgen.grpc.In.value:type_name -> vertis.vasgen.grpc.RawValue
	7,  // 13: vertis.vasgen.grpc.LessThan.value:type_name -> vertis.vasgen.grpc.RawValue
	7,  // 14: vertis.vasgen.grpc.GreaterThan.value:type_name -> vertis.vasgen.grpc.RawValue
	7,  // 15: vertis.vasgen.grpc.Between.from:type_name -> vertis.vasgen.grpc.RawValue
	7,  // 16: vertis.vasgen.grpc.Between.to:type_name -> vertis.vasgen.grpc.RawValue
	15, // 17: vertis.vasgen.grpc.Filter.and:type_name -> vertis.vasgen.grpc.Filter
	15, // 18: vertis.vasgen.grpc.Filter.or:type_name -> vertis.vasgen.grpc.Filter
	15, // 19: vertis.vasgen.grpc.Filter.not:type_name -> vertis.vasgen.grpc.Filter
	9,  // 20: vertis.vasgen.grpc.Filter.eq:type_name -> vertis.vasgen.grpc.Eq
	10, // 21: vertis.vasgen.grpc.Filter.in:type_name -> vertis.vasgen.grpc.In
	11, // 22: vertis.vasgen.grpc.Filter.is_null:type_name -> vertis.vasgen.grpc.IsNull
	12, // 23: vertis.vasgen.grpc.Filter.lte:type_name -> vertis.vasgen.grpc.LessThan
	13, // 24: vertis.vasgen.grpc.Filter.gte:type_name -> vertis.vasgen.grpc.GreaterThan
	14, // 25: vertis.vasgen.grpc.Filter.between:type_name -> vertis.vasgen.grpc.Between
	15, // 26: vertis.vasgen.grpc.Query.filter:type_name -> vertis.vasgen.grpc.Filter
	18, // 27: vertis.vasgen.grpc.Query.text:type_name -> vertis.vasgen.grpc.Text
	16, // 28: vertis.vasgen.grpc.Query.plan:type_name -> vertis.vasgen.grpc.ExecutionPlan
	21, // 29: vertis.vasgen.grpc.Query.metadata:type_name -> vertis.vasgen.grpc.Query.MetadataEntry
	20, // 30: vertis.vasgen.grpc.Any.type_id:type_name -> vertis.vasgen.grpc.SRaaSType
	0,  // 31: vertis.vasgen.grpc.Search.Execute:input_type -> vertis.vasgen.grpc.ExecutionRequest
	2,  // 32: vertis.vasgen.grpc.Search.FindObject:input_type -> vertis.vasgen.grpc.FindObjectRequest
	1,  // 33: vertis.vasgen.grpc.Search.Execute:output_type -> vertis.vasgen.grpc.ExecutionResult
	19, // 34: vertis.vasgen.grpc.Search.FindObject:output_type -> vertis.vasgen.grpc.Any
	33, // [33:35] is the sub-list for method output_type
	31, // [31:33] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_all_proto_init() }
func file_all_proto_init() {
	if File_all_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_all_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_all_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_all_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_all_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegerValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_all_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FloatValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_all_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeoPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_all_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tuple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_all_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_all_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_all_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Eq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_all_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*In); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_all_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsNull); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_all_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessThan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_all_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GreaterThan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_all_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Between); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_all_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_all_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_all_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_all_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Text); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_all_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Any); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_all_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SRaaSType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_all_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*IntegerValue_Sint64)(nil),
	}
	file_all_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*FloatValue_Double)(nil),
		(*FloatValue_Float)(nil),
	}
	file_all_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*RawValue_Integer)(nil),
		(*RawValue_Fp)(nil),
		(*RawValue_String_)(nil),
		(*RawValue_Bytes)(nil),
		(*RawValue_Any)(nil),
		(*RawValue_Tuple)(nil),
		(*RawValue_Point)(nil),
		(*RawValue_Text)(nil),
	}
	file_all_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*Filter_Eq)(nil),
		(*Filter_In)(nil),
		(*Filter_IsNull)(nil),
		(*Filter_Lte)(nil),
		(*Filter_Gte)(nil),
		(*Filter_Between)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_all_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_all_proto_goTypes,
		DependencyIndexes: file_all_proto_depIdxs,
		MessageInfos:      file_all_proto_msgTypes,
	}.Build()
	File_all_proto = out.File
	file_all_proto_rawDesc = nil
	file_all_proto_goTypes = nil
	file_all_proto_depIdxs = nil
}
