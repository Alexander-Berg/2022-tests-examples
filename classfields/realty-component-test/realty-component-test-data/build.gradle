plugins {
    id 'ru.yandex.realty.java-conventions'
}

description = 'realty-component-test-data'

configurations {
    testOutput
}

dependencies {
    api(project(':realty-common'))
    api(project(path: ':realty-common', configuration: 'testOutput'))
    api(project(':realty-component-test-common'))
    api(project(':realty-extdata-core'))
    api(project(':realty-model'))
    api(project(path: ':realty-model', configuration: 'testOutput'))
    api('ch.qos.logback:logback-core:1.1.7')
    api("com.dimafeng:testcontainers-scala-cassandra_${versions.scala_major_version}:0.40.2") {
        exclude group: 'org.testcontainers', module: 'cassandra'
    }
    api("com.dimafeng:testcontainers-scala-kafka_${versions.scala_major_version}:0.40.2") {
        exclude group: 'org.testcontainers', module: 'kafka'
    }
    api("com.dimafeng:testcontainers-scala-mysql_${versions.scala_major_version}:0.40.2")
    api("com.dimafeng:testcontainers-scala-postgresql_${versions.scala_major_version}:0.40.2")
    api("com.dimafeng:testcontainers-scala-scalatest-selenium_${versions.scala_major_version}:0.40.2") {
        exclude group: 'org.seleniumhq.selenium', module: 'selenium-java'
        exclude group: 'org.testcontainers', module: 'selenium'
    }
    api("com.dimafeng:testcontainers-scala-vault_${versions.scala_major_version}:0.40.2") {
        exclude group: 'org.testcontainers', module: 'vault'
    }
    api('com.ibm.icu:icu4j:4.8.1.1')
    api('jaxen:jaxen:1.1.3')
    api('jdom:jdom:1.0')
    api('org.hamcrest:hamcrest-core:1.3')
    api("org.scalactic:scalactic_${versions.scala_major_version}:3.0.5")
    api("org.typelevel:cats-kernel_${versions.scala_major_version}:2.5.0")
    api("org.typelevel:simulacrum-scalafix-annotations_${versions.scala_major_version}:0.5.4")
    api('xom:xom:1.0')
    testImplementation("org.testcontainers:mysql:${versions.testcontainers_mysql_version}")
}

tasks.register('testsJar', Jar) {
    archiveClassifier = 'tests'
    from(sourceSets.test.output)
}

artifacts {
    testOutput testsJar
}


