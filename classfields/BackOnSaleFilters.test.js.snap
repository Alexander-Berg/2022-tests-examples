// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render: должен нарисовать набор основных и дополнительных фильтров и плашку с действиями 1`] = `
<div
  className="BackOnSaleFilters BackOnSale__filters"
>
  <div
    className="BackOnSaleFilters__row"
  >
    <div
      className="BackOnSaleFilters__column"
    >
      <h1
        className="BackOnSaleFilters__title"
      >
        Снова в продаже
      </h1>
    </div>
    <div
      className="BackOnSaleFilters__column BackOnSaleFilters__column_right"
    >
      <div
        className="BackOnSaleFilters__saveButtonContainer"
      >
        <Link
          className="BackOnSaleFilters__listButton"
          onClick={[Function]}
        >
          <div
            className="BackOnSaleFilters__listButtonIcon"
          >
            <IconSvg
              id="svgID"
              size="24"
            />
          </div>
          <span
            className="Buyout__buttonText"
          >
            Сохранённые
             
            поиски
          </span>
        </Link>
      </div>
      <Connect(GeoSelect) />
      <BackOnSaleFiltersSubscriptionsPopup
        anchor={
          Object {
            "current": null,
          }
        }
        closePopup={[Function]}
        isOpened={false}
        removeSubscription={[Function]}
        subscriptions={Array []}
        updateSubscription={[Function]}
      />
    </div>
  </div>
  mainForm
  extendedForm
  actions
</div>
`;

exports[`renderActionCollapse: должен нарисовать кнопку Свернуть/Развернуть 1`] = `
<Link
  className="BackOnSaleFilters__actionCollapse"
  onClick={[Function]}
>
  Все параметры
  <IconSvg
    className="BackOnSaleFilters__actionCollapse"
    id="svgID"
    size="24"
  />
</Link>
`;

exports[`renderActions: должен нарисовать панель действий 1`] = `
<div
  className="BackOnSaleFilters__actions"
>
  <div
    className="BackOnSaleFilters__column"
  >
    <div
      className="BackOnSaleFilters__column_controlHalf"
    >
      actionCollapse
    </div>
    <div
      className="BackOnSaleFilters__column_controlHalf"
    >
      filtersCount
      renderResetLink
    </div>
  </div>
  <div
    className="BackOnSaleFilters__column"
  >
    <div
      className="BackOnSaleFilters__saveButtonContainer"
    >
      <Link
        className="BackOnSaleFilters__saveButton"
        disabled={false}
        onClick={[Function]}
      >
        <div
          className="BackOnSaleFilters__listButtonIcon"
        >
          <IconSvg
            id="svgID"
            size="24"
          />
        </div>
        <span
          className="BackOnSaleFilters__buttonText"
        >
          Сохранить поиск
        </span>
      </Link>
    </div>
  </div>
  <div
    className="BackOnSaleFilters__column"
  >
    submitButton
    <BackOnSaleExport
      disabled={false}
      disabledTooltipText="Для экспорта выберите период не более 180 дней"
      isLoading={false}
      onClick={[Function]}
    />
  </div>
</div>
`;

exports[`renderExtendedForm должен вернуть null, если !this.state.showExtendedFilters 1`] = `null`;

exports[`renderExtendedForm должен вернуть набор дополнительных фильтров 1`] = `
<div
  className="BackOnSaleFilters__extendedForm"
>
  <div
    className="BackOnSaleFilters__row"
  >
    <div
      className="BackOnSaleFilters__column"
    >
      <Select
        clearItemText="Любое"
        maxMenuHeight={0}
        menuSize="m"
        mode="check"
        name="last_event_types"
        onChange={[Function]}
        placeholder="Тип записи"
        size="m"
        value={Array []}
        width="full"
      >
        <Item
          value="AUTORU_OFFER_NEW"
        >
          Продавался новым
        </Item>
        <Item
          value="AUTORU_OFFER_USED"
        >
          Продавался с пробегом
        </Item>
        <Item
          value="EXTERNAL_SALE"
        >
          Продавался не на Авто.ру
        </Item>
        <Item
          value="MAINTENANCE"
        >
          Обслуживался на сервисе
        </Item>
        <Item
          value="ESTIMATE"
        >
          Оценивался
        </Item>
        <Item
          value="SALE_OF_INSURANCE"
        >
          Продали страховку
        </Item>
        <Item
          value="PURCHASE_OF_REPORT"
        >
          Купили отчёт
        </Item>
      </Select>
    </div>
    <div
      className="BackOnSaleFilters__column"
    >
      <Select
        clearItemText="Любой"
        maxMenuHeight={0}
        menuSize="m"
        mode="radio"
        name="seller_type"
        onChange={[Function]}
        placeholder="Продавец"
        size="m"
        width="full"
      >
        <Item
          value="PRIVATE"
        >
          Частник
        </Item>
        <Item
          value="COMMERCIAL"
        >
          Компания
        </Item>
      </Select>
    </div>
    <div
      className="BackOnSaleFilters__column"
    >
      <Select
        clearItemText="Все"
        maxMenuHeight={0}
        menuSize="m"
        mode="radio"
        name="is_sold"
        onChange={[Function]}
        placeholder="Актуальность"
        size="m"
        width="full"
      >
        <Item
          value="ACTIVE"
        >
          Активные
        </Item>
        <Item
          value="SOLD"
        >
          Снятые
        </Item>
      </Select>
    </div>
  </div>
  <div
    className="BackOnSaleFilters__row"
  >
    <div
      className="BackOnSaleFilters__column"
    >
      <TextInput
        hasClear={true}
        name="vin"
        onChange={[Function]}
        placeholder="VIN номер или несколько через запятую"
        radius="r8"
        size="m"
        type="text"
        value=""
        valueProcessor={[Function]}
        width="full"
      />
    </div>
  </div>
</div>
`;

exports[`renderFiltersCount должен вернуть null, если нет дополнительных фильтров 1`] = `null`;

exports[`renderFiltersCount должен нарисовать счетчик дополнительных фильтров 1`] = `
<span
  className="BackOnSaleFilters__filtersCounter"
>
  2
</span>
`;

exports[`renderMainForm: должен вернуть набор основных фильтров 1`] = `
<div
  className="BackOnSaleFilters__mainForm"
>
  <div
    className="BackOnSaleFilters__row"
  >
    <div
      className="BackOnSaleFilters__MMColumn"
    >
      <MMMMultiFilter
        breadcrumbsPublicApi={
          Object {
            "data": Array [],
            "status": "SUCCESS",
          }
        }
        catalogFilter={Array []}
        counterField="count"
        dispatch={[Function]}
        handleChangedControl={[Function]}
        markFilterClassName="BackOnSaleFilters__mark"
        multiModels={false}
        multiline={false}
        onChange={[Function]}
        onMMMControlChange={[Function]}
        section="cars"
        withExclude={false}
        withGeneration={false}
        withGenerationForNew={false}
        withMultiGenerations={true}
        withNameplates={false}
        withPopularMarks={true}
        withPopularModels={true}
        withVendors={false}
      />
    </div>
    <div
      className="BackOnSaleFilters__column"
    >
      <Select
        className="BackOnSaleFilters__generation"
        clearItemText="Любое"
        disabled={true}
        maxMenuHeight={0}
        menuSize="m"
        mode="radio"
        name="generation"
        onChange={[Function]}
        placeholder="Поколение"
        size="m"
        width="full"
      />
    </div>
  </div>
  <div
    className="BackOnSaleFilters__row"
  >
    <div
      className="BackOnSaleFilters__column"
    >
      <PriceFromToFilter
        currency="RUR"
        disabled={false}
        onChange={[Function]}
        size="m"
      />
    </div>
    <div
      className="BackOnSaleFilters__column"
    >
      <KmAgeFromToFilter
        onChange={[Function]}
        size="m"
      />
    </div>
    <div
      className="BackOnSaleFilters__column"
    >
      <YearFromToFilter
        onChange={[Function]}
        size="m"
      />
    </div>
  </div>
</div>
`;

exports[`renderResetLink должен вернуть null, если счетчики фильтров равны 0 1`] = `null`;

exports[`renderResetLink должен нарисовать кнопку сброса фильтров 1`] = `
<Link
  className="BackOnSaleFilters__linkReset"
  color="gray"
  url="linkCabinet/back-on-sale/?"
>
  Сбросить
  <IconSvg
    className="BackOnSaleFilters__linkResetIcon"
    id="svgID"
    size="24"
  />
</Link>
`;

exports[`renderSubmitButton: должен нарисовать кнопку отправки формы 1`] = `
<ButtonWithLoader
  className="BackOnSaleFilters__submitButton"
  color="blue"
  loading={false}
  onClick={[Function]}
  size="m"
  width="full"
>
  Найти
</ButtonWithLoader>
`;
