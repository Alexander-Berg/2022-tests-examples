//
//  ChatInputViewTests.swift
//  Unit Tests
//
//  Created by Dmitry Barillo on 06.05.2022.
//  Copyright ¬© 2022 Yandex. All rights reserved.
//

// swiftlint:disable line_length

import XCTest
import YREDesignKit
import ChattoAdditions
@testable import YREChatModule

final class ChatInputViewTests: XCTestCase {
    func testBlockedByMeLayout() {
        let view = ChatInputView()
        let blockedViewModel = BlockedInputView.ViewModel(
            kind: .button(title: "–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å", accessibilityID: "", onTap: {}),
            description: nil
        )
        let mode = ChatInputView.Mode.blocked(blockedViewModel)

        let viewController = UIViewController()
        self.setupView(view, with: mode, in: viewController)

        self.assertSnapshot(viewController.view)
    }
    
    func testBlockedByOtherUserLayout() {
        let view = ChatInputView()
        let blockedViewModel = BlockedInputView.ViewModel(
            kind: .noAction,
            description: "–û–π, –∫–∞–∂–µ—Ç—Å—è —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –∑–∞–±–ª–æ–∫—Ä–æ–≤–∞–ª –≤–∞—Å, –ø–æ—ç—Ç–æ–º—É –Ω–∞–ø–∏—Å–∞—Ç—å –µ–º—É –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è. –ù–∞–≤–µ—Ä–Ω–æ–µ –±–µ—Å–µ–¥–∞ –Ω–µ –∑–∞–¥–∞–ª–∞—Å—å".yre_insertNBSPs()
        )
        let mode = ChatInputView.Mode.blocked(blockedViewModel)

        let viewController = UIViewController()
        self.setupView(view, with: mode, in: viewController)

        self.assertSnapshot(viewController.view)
    }
    
    func testMeWasBannedLayout() {
        let view = ChatInputView()
        let blockedViewModel = BlockedInputView.ViewModel(
            kind: .button(title: "–ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É", accessibilityID: "", onTap: {}),
            description: "–ó–∞–º–µ—Ç–∏–ª–∏ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –≤–∞—à–∏ —á–∞—Ç—ã. –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ  –ø–æ—Ö–æ–∂–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π. –ü–æ–¥–æ–∂–¥–∏—Ç–µ 24 —á–∞—Å–∞, –∏ –¥–æ—Å—Ç—É–ø –∫ —á–∞—Ç–∞–º –≤–µ—Ä–Ω—ë—Ç—Å—è".yre_insertNBSPs()
        )
        let mode = ChatInputView.Mode.blocked(blockedViewModel)

        let viewController = UIViewController()
        self.setupView(view, with: mode, in: viewController)

        self.assertSnapshot(viewController.view)
    }
    
    func testOtherUserWasBannedLayout() {
        let view = ChatInputView()
        let blockedViewModel = BlockedInputView.ViewModel(
            kind: .noAction,
            description: "–ó–∞–º–µ—Ç–∏–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –æ—Ç–∫–ª—é—á–∏–ª–∏ –µ–≥–æ —á–∞—Ç—ã. –ß–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –Ω–∞–ø–∏—Å–∞—Ç—å —Å–Ω–æ–≤–∞.".yre_insertNBSPs()
        )
        let mode = ChatInputView.Mode.blocked(blockedViewModel)

        let viewController = UIViewController()
        self.setupView(view, with: mode, in: viewController)

        self.assertSnapshot(viewController.view)
    }

    func testMeChangedTypeLayout() {
        let view = ChatInputView()
        let blockedViewModel = BlockedInputView.ViewModel(
            kind: .button(title: "–ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É", accessibilityID: "", onTap: {}),
            description: "–í—ã —Å—Ç–∞–ª–∏ –∞–≥–µ–Ω—Ç–æ–º –∏ —á–∞—Ç—ã —Å –ø–æ–∫—É–ø–∞—Ç–µ–ª—è–º–∏ —Ç–µ–ø–µ—Ä—å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã. –°—Ç–∞—Ä—ã–µ –¥–æ–±—Ä—ã–µ –∑–≤–æ–Ω–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–∞–∫ –∏ –ø—Ä–µ–∂–¥–µ.".yre_insertNBSPs()
        )
        let mode = ChatInputView.Mode.blocked(blockedViewModel)

        let viewController = UIViewController()
        self.setupView(view, with: mode, in: viewController)

        self.assertSnapshot(viewController.view)
    }
    
    func testOtherUserChangedTypeLayout() {
        let view = ChatInputView()
        let blockedViewModel = BlockedInputView.ViewModel(
            kind: .button(title: "–ü–æ–∑–≤–æ–Ω–∏—Ç—å", accessibilityID: "", onTap: {}),
            description: "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞–ø–∏—Å–∞—Ç—å —ç—Ç–æ–º—É —á–µ–ª–æ–≤–µ–∫—É –±–æ–ª—å—à–µ –Ω–µ–ª—å–∑—è ‚Äî –æ–Ω —Å—Ç–∞–ª –∞–≥–µ–Ω—Ç–æ–º, –∞ —á–∞—Ç–æ–≤ —É –Ω–∏—Ö –ø–æ–∫–∞ –Ω–µ—Ç. –ù–æ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–∑–≤–æ–Ω–∏—Ç—å.".yre_insertNBSPs()
        )
        let mode = ChatInputView.Mode.blocked(blockedViewModel)

        let viewController = UIViewController()
        self.setupView(view, with: mode, in: viewController)

        self.assertSnapshot(viewController.view)
    }
    
    func testOtherUserDisabledChatLayout() {
        let view = ChatInputView()
        let blockedViewModel = BlockedInputView.ViewModel(
            kind: .button(title: "–ü–æ–∑–≤–æ–Ω–∏—Ç—å", accessibilityID: "", onTap: {}),
            description: "–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–∫–ª—é—á–µ–Ω—ã —á–∞—Ç—ã –∏ –Ω–∞–ø–∏—Å–∞—Ç—å –µ–º—É –±–æ–ª—å—à–µ –Ω–µ–ª—å–∑—è. –ù–æ –≤—Å—ë –µ—â—ë –º–æ–∂–Ω–æ –ø–æ–∑–≤–æ–Ω–∏—Ç—å".yre_insertNBSPs()
        )
        let mode = ChatInputView.Mode.blocked(blockedViewModel)

        let viewController = UIViewController()
        self.setupView(view, with: mode, in: viewController)

        self.assertSnapshot(viewController.view)
    }
    
    func testflatCanNoLongerBeRentedLayout() {
        let view = ChatInputView()
        let blockedViewModel = BlockedInputView.ViewModel(
            kind: .noAction,
            description: "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∫–≤–∞—Ä—Ç–∏—Ä–∞ –±–æ–ª—å—à–µ –Ω–µ —Å–¥–∞—ë—Ç—Å—è".yre_insertNBSPs()
        )
        let mode = ChatInputView.Mode.blocked(blockedViewModel)

        let viewController = UIViewController()
        self.setupView(view, with: mode, in: viewController)

        self.assertSnapshot(viewController.view)
    }

    func testRentCallCenterClosedChatLayout() {
        let view = ChatInputView()
        let blockedViewModel = BlockedInputView.ViewModel(
            kind: .onlyDescription,
            description: "–≠—Ç–æ—Ç —á–∞—Ç –∑–∞–≤–µ—Ä—à—ë–Ω. –°–ø–∞—Å–∏–±–æ –∑–∞ –±–µ—Å–µ–¥—É üòä".yre_insertNBSPs()
        )
        let mode = ChatInputView.Mode.blocked(blockedViewModel)

        let viewController = UIViewController()
        self.setupView(view, with: mode, in: viewController)

        self.assertSnapshot(viewController.view)
      }
                                                          
    private func setupView(
        _ view: ChatInputView,
        with mode: ChatInputView.Mode,
        in viewController: UIViewController
    ) {
        viewController.view.addSubview(view)
        view.yre_edgesToSuperview(insets: .init(top: .zero, left: .zero, bottom: .nan, right: .zero))

        view.backgroundColor = ColorScheme.Background.primary
        view.mode = mode
        view.setNeedsLayout()
        view.layoutIfNeeded()

        let size = CGSize(width: UIScreen.main.bounds.width, height: view.bounds.height)
        viewController.view.frame = .init(origin: .zero, size: size)
    }
}
