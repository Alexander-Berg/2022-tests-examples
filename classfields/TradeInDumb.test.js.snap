// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render тесты должен вернуть корректный компонент, если isLoading = true 1`] = `
<div
  className="TradeIn"
>
  <OrdersHeader
    canWrite={true}
    onSwitcherToggle={[Function]}
    title="Заявки на трейд-ин"
  />
  renderFilters
  <div
    className="TradeIn__wrapper TradeIn__wrapper_isLoading"
  >
    <TradeInPlaceholder />
  </div>
  renderPagination
</div>
`;

exports[`render тесты должен вернуть корректный компонент, если items.length === 0 1`] = `
<div
  className="TradeIn"
>
  <OrdersHeader
    canWrite={true}
    onSwitcherToggle={[Function]}
    title="Заявки на трейд-ин"
  />
  renderFilters
  <div
    className="TradeIn__wrapper"
  >
    <TradeInPlaceholder />
  </div>
  renderPagination
</div>
`;

exports[`render тесты должен вернуть корректный компонент, если items.length > 0 1`] = `
<div
  className="TradeIn"
>
  <OrdersHeader
    canWrite={true}
    onSwitcherToggle={[Function]}
    title="Заявки на трейд-ин"
  />
  renderFilters
  <div
    className="TradeIn__wrapper"
  >
    renderTable
  </div>
  renderPagination
</div>
`;

exports[`render тесты должен вернуть промо-плейсхолдер, если раздел никогда не активировался 1`] = `<Connect(TradeInInfoDumb) />`;

exports[`renderFilters тесты должен вернуть корректный компонент, если !isNewFilterDisabled && !isUsedFilterDisabled 1`] = `
<div
  className="TradeIn__filters"
>
  <RadioGroup
    className="TradeIn__filters__radioGroup"
    disabled={false}
    mode="radio"
    onChange={[Function]}
    size="l"
    type="button"
    value="ALL"
    view="primary"
  >
    <Radio
      checked={false}
      color="whiteHoverBlue"
      disabled={false}
      mode="radio"
      type="radio"
      value="ALL"
    >
      Все
    </Radio>
    <Radio
      checked={false}
      color="whiteHoverBlue"
      disabled={false}
      mode="radio"
      type="radio"
      value="NEW"
    >
      Новые
    </Radio>
    <Radio
      checked={false}
      color="whiteHoverBlue"
      disabled={false}
      mode="radio"
      type="radio"
      value="USED"
    >
      С пробегом
    </Radio>
  </RadioGroup>
  <DateRange
    maxDate="1988-01-03"
    onChange={[Function]}
    presets={Array []}
    size="l"
    value={
      Object {
        "from": "2019-03-20",
        "to": "1988-01-03",
      }
    }
    width="default"
  />
  <div
    className="TradeIn__filters__info"
  >
    <React.Fragment>
      40 заявок
      <span
        className="TradeIn__filters__arrow"
      >
        →
      </span>
      500 ₽
    </React.Fragment>
  </div>
</div>
`;

exports[`renderFilters тесты должен вернуть корректный компонент, если !isNewFilterDisabled && isUsedFilterDisabled 1`] = `
<div
  className="TradeIn__filters"
>
  <RadioGroup
    className="TradeIn__filters__radioGroup"
    disabled={false}
    mode="radio"
    onChange={[Function]}
    size="l"
    type="button"
    value="ALL"
    view="primary"
  >
    <Radio
      checked={false}
      color="whiteHoverBlue"
      disabled={false}
      mode="radio"
      type="radio"
      value="ALL"
    >
      Все
    </Radio>
    <Radio
      checked={false}
      color="whiteHoverBlue"
      disabled={false}
      mode="radio"
      type="radio"
      value="NEW"
    >
      Новые
    </Radio>
    <Radio
      checked={false}
      color="whiteHoverBlue"
      disabled={true}
      mode="radio"
      type="radio"
      value="USED"
    >
      С пробегом
    </Radio>
  </RadioGroup>
  <DateRange
    maxDate="1988-01-03"
    onChange={[Function]}
    presets={Array []}
    size="l"
    value={
      Object {
        "from": "2019-03-20",
        "to": "1988-01-03",
      }
    }
    width="default"
  />
  <div
    className="TradeIn__filters__info"
  >
    <React.Fragment>
      40 заявок
      <span
        className="TradeIn__filters__arrow"
      >
        →
      </span>
      500 ₽
    </React.Fragment>
  </div>
</div>
`;

exports[`renderFilters тесты должен вернуть корректный компонент, если dateRange.toDate 1`] = `
<div
  className="TradeIn__filters"
>
  <RadioGroup
    className="TradeIn__filters__radioGroup"
    disabled={false}
    mode="radio"
    onChange={[Function]}
    size="l"
    type="button"
    value="ALL"
    view="primary"
  >
    <Radio
      checked={false}
      color="whiteHoverBlue"
      disabled={false}
      mode="radio"
      type="radio"
      value="ALL"
    >
      Все
    </Radio>
    <Radio
      checked={false}
      color="whiteHoverBlue"
      disabled={false}
      mode="radio"
      type="radio"
      value="NEW"
    >
      Новые
    </Radio>
    <Radio
      checked={false}
      color="whiteHoverBlue"
      disabled={false}
      mode="radio"
      type="radio"
      value="USED"
    >
      С пробегом
    </Radio>
  </RadioGroup>
  <DateRange
    maxDate="1988-01-03"
    onChange={[Function]}
    presets={Array []}
    size="l"
    value={
      Object {
        "from": "2019-02-20",
        "to": "2019-03-20",
      }
    }
    width="default"
  />
  <div
    className="TradeIn__filters__info"
  >
    <React.Fragment>
      40 заявок
      <span
        className="TradeIn__filters__arrow"
      >
        →
      </span>
      500 ₽
    </React.Fragment>
  </div>
</div>
`;

exports[`renderFilters тесты должен вернуть корректный компонент, если isNewFilterDisabled && !isUsedFilterDisabled 1`] = `
<div
  className="TradeIn__filters"
>
  <RadioGroup
    className="TradeIn__filters__radioGroup"
    disabled={false}
    mode="radio"
    onChange={[Function]}
    size="l"
    type="button"
    value="ALL"
    view="primary"
  >
    <Radio
      checked={false}
      color="whiteHoverBlue"
      disabled={false}
      mode="radio"
      type="radio"
      value="ALL"
    >
      Все
    </Radio>
    <Radio
      checked={false}
      color="whiteHoverBlue"
      disabled={true}
      mode="radio"
      type="radio"
      value="NEW"
    >
      Новые
    </Radio>
    <Radio
      checked={false}
      color="whiteHoverBlue"
      disabled={false}
      mode="radio"
      type="radio"
      value="USED"
    >
      С пробегом
    </Radio>
  </RadioGroup>
  <DateRange
    maxDate="1988-01-03"
    onChange={[Function]}
    presets={Array []}
    size="l"
    value={
      Object {
        "from": "2019-03-20",
        "to": "1988-01-03",
      }
    }
    width="default"
  />
  <div
    className="TradeIn__filters__info"
  >
    <React.Fragment>
      40 заявок
      <span
        className="TradeIn__filters__arrow"
      >
        →
      </span>
      500 ₽
    </React.Fragment>
  </div>
</div>
`;

exports[`renderFilters тесты должен вернуть корректный компонент, если isNewFilterDisabled и isUsedFilterDisabled 1`] = `
<div
  className="TradeIn__filters"
>
  <RadioGroup
    className="TradeIn__filters__radioGroup"
    disabled={true}
    mode="radio"
    onChange={[Function]}
    size="l"
    type="button"
    value="ALL"
    view="primary"
  >
    <Radio
      checked={false}
      color="whiteHoverBlue"
      disabled={false}
      mode="radio"
      type="radio"
      value="ALL"
    >
      Все
    </Radio>
    <Radio
      checked={false}
      color="whiteHoverBlue"
      disabled={true}
      mode="radio"
      type="radio"
      value="NEW"
    >
      Новые
    </Radio>
    <Radio
      checked={false}
      color="whiteHoverBlue"
      disabled={true}
      mode="radio"
      type="radio"
      value="USED"
    >
      С пробегом
    </Radio>
  </RadioGroup>
  <DateRange
    maxDate="1988-01-03"
    onChange={[Function]}
    presets={Array []}
    size="l"
    value={
      Object {
        "from": "2019-03-20",
        "to": "1988-01-03",
      }
    }
    width="default"
  />
  <div
    className="TradeIn__filters__info"
  >
    <React.Fragment>
      40 заявок
      <span
        className="TradeIn__filters__arrow"
      >
        →
      </span>
      500 ₽
    </React.Fragment>
  </div>
</div>
`;

exports[`renderFilters тесты должен вернуть корректный компонент, если totalRequestCount === 0 1`] = `
<div
  className="TradeIn__filters"
>
  <RadioGroup
    className="TradeIn__filters__radioGroup"
    disabled={false}
    mode="radio"
    onChange={[Function]}
    size="l"
    type="button"
    value="ALL"
    view="primary"
  >
    <Radio
      checked={false}
      color="whiteHoverBlue"
      disabled={false}
      mode="radio"
      type="radio"
      value="ALL"
    >
      Все
    </Radio>
    <Radio
      checked={false}
      color="whiteHoverBlue"
      disabled={false}
      mode="radio"
      type="radio"
      value="NEW"
    >
      Новые
    </Radio>
    <Radio
      checked={false}
      color="whiteHoverBlue"
      disabled={false}
      mode="radio"
      type="radio"
      value="USED"
    >
      С пробегом
    </Radio>
  </RadioGroup>
  <DateRange
    maxDate="1988-01-03"
    onChange={[Function]}
    presets={Array []}
    size="l"
    value={
      Object {
        "from": "2019-02-20",
        "to": "2019-03-20",
      }
    }
    width="default"
  />
  <div
    className="TradeIn__filters__info"
  >
    Нет заявок
  </div>
</div>
`;

exports[`renderPagination тест: должен вернуть корректный компонент 1`] = `
<ListingPagination
  buttonsSize="s"
  current={1}
  disabled={false}
  linkBuilder={[Function]}
  max={3}
  min={1}
  onClick={[Function]}
  renderAfterPages={[Function]}
  showMore={true}
  showNextPrev={false}
  showNextTip={true}
  showPrevTip={true}
  size={11}
/>
`;

exports[`renderTable тесты должен вернуть корректный компонент, если items.length === 0 1`] = `
<table
  border="0"
  cellPadding="0"
  cellSpacing="0"
  className="TradeIn__table"
>
  <thead>
    <tr>
      <th
        colSpan="2"
      >
        Дата
      </th>
      <th>
        Время
      </th>
      <th>
        Входящий
      </th>
      <th>
        Внутренний
      </th>
      <th>
        Звонок
      </th>
      <th>
        Стоимость
      </th>
    </tr>
  </thead>
  <tbody />
</table>
`;

exports[`renderTable тесты должен вернуть корректный компонент, если разные года в items.create_date 1`] = `
<table
  border="0"
  cellPadding="0"
  cellSpacing="0"
  className="TradeIn__table"
>
  <thead>
    <tr>
      <th
        colSpan="2"
      >
        Дата
      </th>
      <th>
        Время
      </th>
      <th>
        Входящий
      </th>
      <th>
        Внутренний
      </th>
      <th>
        Звонок
      </th>
      <th>
        Стоимость
      </th>
    </tr>
  </thead>
  <tbody>
    <TradeInItem
      hasSeparator={true}
      item={
        Object {
          "create_date": "1988-03-01 00:00:01",
          "id": 1,
        }
      }
    />
    <TradeInItem
      item={
        Object {
          "create_date": "1988-03-01 00:00:02",
          "id": 2,
        }
      }
    />
    <TradeInItem
      hasSeparator={true}
      item={
        Object {
          "create_date": "1987-03-02 00:00:03",
          "id": 3,
        }
      }
      showYear={true}
    />
  </tbody>
</table>
`;

exports[`renderTable тесты должен вернуть корректный компонент, если разные дни items.create_date 1`] = `
<table
  border="0"
  cellPadding="0"
  cellSpacing="0"
  className="TradeIn__table"
>
  <thead>
    <tr>
      <th
        colSpan="2"
      >
        Дата
      </th>
      <th>
        Время
      </th>
      <th>
        Входящий
      </th>
      <th>
        Внутренний
      </th>
      <th>
        Звонок
      </th>
      <th>
        Стоимость
      </th>
    </tr>
  </thead>
  <tbody>
    <TradeInItem
      hasSeparator={true}
      item={
        Object {
          "create_date": "1988-03-01 00:00:01",
          "id": 1,
        }
      }
    />
    <TradeInItem
      item={
        Object {
          "create_date": "1988-03-01 00:00:02",
          "id": 2,
        }
      }
    />
    <TradeInItem
      hasSeparator={true}
      item={
        Object {
          "create_date": "1988-03-02 00:00:03",
          "id": 3,
        }
      }
      showYear={false}
    />
  </tbody>
</table>
`;
