# generated by manificenta at Fri, 29 Jul 2022 12:55:04 MSK xellar-osx
manifests:
- accounts:
    agent_rewards:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
    agent_rewards_refunds:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
    cashless:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
    cashless_refunds:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
  calculator:
    transport:
      baseUrl: https://faas.test.billing.yandex.net
      debug: true
      retries:
        count: 3
  endpoints:
    payment:
      actions:
      - method: YT.GetMigrationInfo
        params:
        - action: const
          value: aero
        - action: const
          value: 37008957
        reference: migration_info
        stage: before_lock
      - method: YT.GetGenericRowsByFieldType
        name: contract_client_idx
        params:
        - action: const
          value: contract_client_idx
        - action: const
          value: client_id
        - action: const
          value:
          - 37008957
        - action: const
          value: int64
        reference: contract_client_idx
        stage: before_lock
      - deps:
        - contract_client_idx
        method: YT.GetContracts
        name: contracts
        params:
        - action: get
          key: references.contract_client_idx.*.id
        reference: contracts
        stage: before_lock
      - deps:
        - contracts
        method: Lib.Distinct
        name: unique_firms
        params:
        - action: extract
          nullify_missing: true
          path: $.references.contracts.*.collaterals[0].firm
        reference: firms
        stage: before_lock
      - deps:
        - unique_firms
        method: YT.GetGenericRowsByType
        params:
        - action: const
          value: firm_tax
        - action: get
          key: references.firms
        - action: const
          value: int64
        reference: firms
        stage: before_lock
      - method: Accounter.MakeLocation
        params:
        - action: const
          value: locks
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_lock
        - action: const
          value: client_id
        - action: const
          value: 37008957
        reference: account_location
        stage: before_lock
      - method: Accounter.MakeLocation
        name: state_params
        params:
        - action: const
          value: states
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_state
        - action: const
          value: client_id
        - action: const
          value: 37008957
        reference: state_params
        stage: before_lock
      - deps:
        - state_params
        method: Lib.MakeMap
        name: read_batch_params
        params:
        - action: const
          value: states
        - action: get
          keys:
          - references.state_params
        reference: read_batch_params
        stage: before_lock
      - method: Lib.Set
        name: event_rows
        params:
        - action: get
          key: input.Event.rows
          nullify_missing: true
        reference: event_rows
        stage: before_lock
      - method: Lib.Join
        name: event_refunds_rows
        params:
        - action: extract
          path: $.input.event.refunds..rows
        reference: event_refunds_rows
        stage: before_lock
      - deps:
        - event_rows
        - event_refunds_rows
        method: Lib.Join
        name: event_all_rows
        params:
        - action: get
          keys:
          - references.event_rows
          - references.event_refunds_rows
        reference: event_all_rows
        stage: before_lock
      - method: Lib.Join
        name: composite_all_rows
        params:
        - action: extract
          path: $.input.event.composite_components..["rows"]
        reference: composite_all_rows
        stage: before_lock
      - deps:
        - composite_all_rows
        - event_all_rows
        method: Lib.If
        name: result_rows
        params:
        - action: get
          key: input.Event.composite_components
          nullify_missing: true
        - action: const
          value: empty
        - action: const
          value: null
        - action: get
          key: references.event_all_rows
        - action: get
          key: references.composite_all_rows
        reference: result_rows
        stage: before_lock
      - deps:
        - result_rows
        method: Diod.GetKeys
        params:
        - action: const
          value: aero_calculator
        - action: extract
          path: $.references.result_rows[*].id
          type: string
        reference: diod_keys
        stage: before_lock
      - method: Accounter.CreateSharedLock
        params:
        - action: get
          key: references.account_location
        reference: lock_state
        stage: lock
      - method: Accounter.ReadBatch
        name: batch
        params:
        - action: get
          key: references.read_batch_params
        reference: batch
        stage: after_lock
      - deps:
        - batch
        method: Lib.MakeMap
        params:
        - action: const
          value: states
        - action: get
          key: references.batch.States
        reference: lock
        stage: after_lock
      - method: Lib.JoinToString
        name: event_type
        params:
        - action: get
          keys:
          - input.Namespace
          - input.Endpoint
        - action: const
          value: ':'
        reference: event_type
        stage: after_calc
      - deps:
        - event_type
        foreach:
          action: get
          key: calc_result.Data.ClientTransactions
        method: Accounter.WriteCalculatorResponse
        name: write_batch
        params:
        - action: get
          key: main.references.event_type
        - action: get
          key: iteration.value.batch_id
        - action: get
          key: iteration.value.dt
        - action: get
          key: main.calc_result.Data.Event
        - action: get
          key: iteration.value.transactions
        - action: get
          key: main.references.account_location
        - action: get
          key: main.references.lock_state.object
        reference: write_batch
        stage: after_calc
      - deps:
        - write_batch
        method: Diod.UpdateKeys
        name: update_diod_keys
        params:
        - action: get
          key: calc_result.Data.Params.keys
        stage: after_calc
      calc_references:
      - migration_info
      - contracts
      - firms
      - lock
      - diod_keys
      calculator_method: /faas-common-default/call/aero-payment/json
      consts:
      - partner_id: 37008957
      - product_id: f7a2b688-4e6c-4fe9-9636-fa6d94e49422
      - minimal_agent_reward: "0.01"
      faas:
        function: billing.hot.calculators.trust.calculator.faas.adaptors.payment.PaymentAdaptor
        peerdir: billing/hot/calculators/trust/calculator
        revision: 9780067
        settings:
          accounts_mapping:
          - - - 1101
              - payment
            - - cashless
              - RewardAnalytic
              - credit
          - - - 1101
              - refund
            - - cashless_refunds
              - RewardAnalytic
              - debit
          - - - -1
              - payment
            - - agent_rewards
              - RewardAnalytic
              - credit
          - - - -1
              - refund
            - - agent_rewards_refunds
              - RewardAnalytic
              - debit
          adapter_getters:
            arguments: {}
            getters:
              client_id:
                arguments:
                  const: 37008957
                type: ConstGetter
              product_id:
                arguments:
                  const: f7a2b688-4e6c-4fe9-9636-fa6d94e49422
                type: ConstGetter
            type: DefaultAdapter
          aw_calculator:
            adapter:
              arguments: {}
              getters:
                __null:
                  arguments:
                    const: null
                  type: ConstGetter
                __partner_commission_sum:
                  arguments:
                    jsonpath: $.cs.partner_commission_sum
                  type: FieldGetter
                __service_fee:
                  arguments:
                    jsonpath: $.row.service_product.service_fee
                  type: FieldGetter
                __zero_amount:
                  arguments:
                    const: 0
                  type: ConstGetter
                amount_getter:
                  arguments:
                    cases:
                    - left: __partner_commission_sum
                      operator: eq
                      right: __null
                      value: __zero_amount
                    default: __partner_commission_sum
                  type: CaseGetter
                no_agent_reward:
                  arguments:
                    default: null
                    key: __service_fee
                    mapping:
                      1: true
                  type: ConstDispatcherGetter
                percent_getter:
                  arguments:
                    const: 100
                  type: ConstGetter
              type: DefaultAdapter
            calculator:
              decorators:
              - arguments:
                  value: "0.01"
                type: MinimalValueDecorator
              - arguments:
                  field: no_agent_reward
                  skipped_values:
                  - true
                type: NoRewardDecorator
              type: DefaultCalculator
          eb:
            project: aero_calculator
            tags:
              endpoint: payment
          endpoint: payment
          namespace: aero
          row_middlewares:
          - arguments: {}
            type: FillCommonTsMiddleware
          - arguments:
              src: dry_run
            type: FillFromRowAdapterMiddleware
          - arguments:
              src: service_id
            type: FillFromRowAdapterMiddleware
          - arguments:
              dst: product_mdh_id
              src: product_id
            type: FillFromRowAdapterMiddleware
          - arguments: {}
            type: FillTaxPolicyMiddleware
          - arguments: {}
            type: FillAmountWoVatMiddleware
  locks:
    cutoff_dt_lock:
      attributes:
      - client_id
    payout_lock:
      attributes:
      - client_id
      - contract_id
      - currency
      - service_id
  namespace: aero
  states:
    cutoff_dt_state:
      attributes:
      - client_id
- accounts:
    cashless:
      attributes:
      - client_id
      - contract_id
      - currency
    cashless_refunds:
      attributes:
      - client_id
      - contract_id
      - currency
    commission_refunds:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
    commission_refunds_acted:
      add_attributes:
      - operation_type
      attributes:
      - client_id
      - contract_id
      - invoice_id
      - currency
    commissions:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
    commissions_acted:
      add_attributes:
      - operation_type
      attributes:
      - client_id
      - contract_id
      - invoice_id
      - currency
    incoming_payments:
      add_attributes:
      - operation_type
      attributes:
      - client_id
      - contract_id
      - invoice_id
      - currency
    payout:
      add_attributes:
      - service_id
      attributes:
      - client_id
      - contract_id
      - currency
    payout_sent:
      add_attributes:
      - service_id
      attributes:
      - client_id
      - contract_id
      - currency
  calculator:
    transport:
      baseUrl: https://faas.test.billing.yandex.net
      debug: true
      retries:
        count: 3
      timeout: 5s
  endpoints:
    acts:
      actions:
      - method: YT.GetMigrationInfo
        params:
        - action: get
          key: input.Namespace
        - action: get
          key: input.Event.obj.client_id
          type: int64
        reference: migration_info
        stage: before_lock
      - method: YT.GetContracts
        name: contracts
        params:
        - action: get
          keys:
          - input.Event.obj.contract_id
        reference: contracts
        stage: before_lock
      - method: YT.GetGenericRowsByFieldType
        params:
        - action: const
          value: personal_accounts
        - action: const
          value: client_id
        - action: get
          keys:
          - input.Event.obj.client_id
        - action: const
          value: uint64
        reference: personal_accounts
        stage: before_lock
      - method: Accounter.MakeLocation
        params:
        - action: const
          value: locks
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_lock
        - action: const
          value: client_id
        - action: get
          key: input.Event.obj.client_id
        reference: lock_location
        stage: before_lock
      - method: Accounter.CreateSharedLock
        params:
        - action: get
          key: references.lock_location
        reference: lock_state
        stage: lock
      - method: Lib.JoinToString
        name: event_type
        params:
        - action: get
          keys:
          - input.Namespace
          - input.Endpoint
        - action: const
          value: ':'
        reference: event_type
        stage: after_calc
      - deps:
        - event_type
        method: Accounter.WriteCalculatorResponse
        params:
        - action: get
          key: references.event_type
        - action: get
          key: calc_result.Data.Event.tariffer_payload.external_id
        - action: get
          key: calc_result.Data.Event.tariffer_payload.common_ts
        - action: get
          key: calc_result.Data.Event
        - action: get
          key: calc_result.Data.ClientTransactions.0.transactions
          nullify_missing: true
        - action: get
          key: references.lock_location
        - action: get
          key: references.lock_state.object
        reference: write_batch
        stage: after_calc
      calc_references:
      - migration_info
      - contracts
      - personal_accounts
      calculator_method: /faas-common-default/call/bnpl-acts/json
      faas:
        function: billing.hot.calculators.actotron_act_rows.calculator.acts
        peerdir: billing/hot/calculators/actotron_act_rows/calculator
        revision: 9780067
        settings:
          eb:
            project: bnpl_calculator
            tags:
              endpoint: acts
          invoice_code: YANDEX_SERVICE
          namespace: bnpl
          service_id: 1125
    cashless:
      actions:
      - method: YT.GetMigrationInfo
        params:
        - action: const
          value: bnpl
        - action: get
          key: input.Event.billing_client_id
          type: int64
        reference: migration_info
        stage: before_lock
      - method: YT.GetContracts
        name: contracts
        params:
        - action: get
          keys:
          - input.Event.billing_contract_id
        reference: contracts
        stage: before_lock
      - deps:
        - contracts
        method: YT.GetGenericRowByType
        params:
        - action: const
          value: firm_tax
        - action: extract
          nullify_missing: true
          path: $.references.contracts[0].collaterals[0].firm
        - action: const
          value: int64
        reference: firm
        stage: before_lock
      - method: Accounter.MakeLocation
        params:
        - action: const
          value: locks
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_lock
        - action: const
          value: client_id
        - action: get
          key: input.Event.billing_client_id
        reference: account_location
        stage: before_lock
      - method: Accounter.MakeLocation
        name: state_params
        params:
        - action: const
          value: states
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_state
        - action: const
          value: client_id
        - action: get
          key: input.Event.billing_client_id
        reference: state_params
        stage: before_lock
      - deps:
        - state_params
        method: Lib.MakeMap
        name: read_batch_params
        params:
        - action: const
          value: states
        - action: get
          keys:
          - references.state_params
        reference: read_batch_params
        stage: before_lock
      - method: Lib.MakeMap
        params:
        - action: const
          value: split
        - action: const
          value: d15388b7-8afe-4af0-a8cb-82feb83945fd
        reference: products
        stage: before_lock
      - method: Accounter.CreateSharedLock
        params:
        - action: get
          key: references.account_location
        reference: lock_state
        stage: lock
      - method: Accounter.ReadBatch
        name: batch
        params:
        - action: get
          key: references.read_batch_params
        reference: batch
        stage: after_lock
      - deps:
        - batch
        method: Lib.MakeMap
        params:
        - action: const
          value: states
        - action: get
          key: references.batch.States
        reference: lock
        stage: after_lock
      - method: Lib.JoinToString
        name: event_type
        params:
        - action: get
          keys:
          - input.Namespace
          - input.Endpoint
        - action: const
          value: ':'
        reference: event_type
        stage: after_calc
      - deps:
        - event_type
        method: Accounter.WriteCalculatorResponse
        params:
        - action: get
          key: references.event_type
        - action: get
          key: calc_result.Data.Event.tariffer_payload.external_id
        - action: get
          key: calc_result.Data.Event.tariffer_payload.common_ts
        - action: get
          key: calc_result.Data.Event
        - action: get
          key: calc_result.Data.ClientTransactions.0.transactions
          nullify_missing: true
        - action: get
          key: references.account_location
        - action: get
          key: references.lock_state.object
        reference: write_batch
        stage: after_calc
      calc_references:
      - migration_info
      - contracts
      - firm
      - lock
      - products
      calculator_method: /faas-common-default/call/bnpl-cashless/json
      consts:
      - product_split: d15388b7-8afe-4af0-a8cb-82feb83945fd
      faas:
        function: billing.hot.calculators.bnpl.calculator.faas.adaptor.cashless
        peerdir: billing/hot/calculators/bnpl/calculator
        revision: 9780067
        settings:
          eb:
            project: bnpl_calculator
            tags:
              endpoint: cashless
    payout:
      actions:
      - method: Accounter.MakeDatedLocation
        name: cashless
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: cashless
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: cashless
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: cashless_refunds
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: cashless_refunds
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: cashless_refunds
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: commissions
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: commissions
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: commissions
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: commission_refunds
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: commission_refunds
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: commission_refunds
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: commissions_acted
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: commissions_acted
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: commissions_acted
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: commission_refunds_acted
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: commission_refunds_acted
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: commission_refunds_acted
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: incoming_payments
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: incoming_payments
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: incoming_payments
        stage: before_lock
      - method: YT.GetGenericRowsByFieldType
        name: contract_client_idx
        params:
        - action: const
          value: contract_client_idx
        - action: const
          value: client_id
        - action: get
          keys:
          - input.Event.client_id
        - action: const
          value: int64
        reference: contract_client_idx
        stage: before_lock
      - deps:
        - contract_client_idx
        method: YT.GetContracts
        params:
        - action: get
          key: references.contract_client_idx.*.id
        reference: contracts
        stage: before_lock
      - method: YT.GetMigrationInfo
        params:
        - action: const
          value: bnpl
        - action: get
          key: input.Event.client_id
          type: int64
        reference: migration_info
        stage: before_lock
      - method: YT.GetGenericRowsByFieldType
        params:
        - action: const
          value: personal_accounts
        - action: const
          value: client_id
        - action: get
          keys:
          - input.Event.client_id
        - action: const
          value: uint64
        reference: personal_accounts
        stage: before_lock
      - method: Accounter.MakeLocation
        name: state_params
        params:
        - action: const
          value: states
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_state
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: state_params
        stage: before_lock
      - deps:
        - cashless
        - cashless_refunds
        - commissions
        - commission_refunds
        - commissions_acted
        - commission_refunds_acted
        - state_params
        method: Lib.MakeMap
        params:
        - action: const
          value: balances
        - action: get
          keys:
          - references.cashless
          - references.cashless_refunds
          - references.commissions
          - references.commission_refunds
          - references.commissions_acted
          - references.commission_refunds_acted
        - action: const
          value: states
        - action: get
          keys:
          - references.state_params
        reference: read_batch_params
        stage: before_lock
      - method: Accounter.MakeLocation
        params:
        - action: const
          value: locks
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_lock
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: account_location
        stage: before_lock
      - method: Accounter.CreateExclusiveLock
        params:
        - action: get
          key: references.account_location
        - action: const
          value: 6
        - action: const
          value: 2
        reference: account_lock
        stage: lock
      - method: Accounter.ReadBatch
        name: accounts
        params:
        - action: get
          key: references.read_batch_params
        reference: accounts
        stage: after_lock
      - deps:
        - accounts
        method: Lib.MakeMap
        params:
        - action: const
          value: states
        - action: get
          key: references.accounts.States
        reference: lock
        stage: after_lock
      - method: Lib.JoinToString
        name: event_type
        params:
        - action: get
          keys:
          - input.Namespace
          - input.Endpoint
        - action: const
          value: ':'
        reference: event_type
        stage: after_calc
      - method: Lib.Filter
        name: account_states
        params:
        - action: get
          key: calc_result.Data.States
          nullify_missing: true
        - action: const
          value: item.loc.type
        - action: const
          value: ==
        - action: const
          value: cutoff_dt_state
        reference: account_states
        stage: after_calc
      - deps:
        - event_type
        - account_states
        method: Accounter.WriteCalculatorResponseNRemoveLock
        name: write_account_batch
        params:
        - action: get
          key: references.event_type
        - action: get
          key: calc_result.Data.Event.transaction_id
        - action: get
          key: calc_result.Data.Event.tariffer_payload.common_ts
        - action: get
          key: calc_result.Data.Event
        - action: get
          key: calc_result.Data.ClientTransactions.0.transactions
          nullify_missing: true
        - action: get
          key: references.account_location
        - action: get
          key: references.account_lock.object
        - action: get
          key: references.account_states
        reference: write_account_batch
        stage: after_calc
      calc_references:
      - accounts
      - migration_info
      - contracts
      - personal_accounts
      - lock
      calculator_method: /faas-common-default/call/bnpl-payout/json
      faas:
        function: billing.hot.calculators.bnpl.calculator.faas.adaptor.payout
        peerdir: billing/hot/calculators/bnpl/calculator
        revision: 9780067
        settings:
          eb:
            project: bnpl_calculator
            tags:
              endpoint: payout
  locks:
    cutoff_dt_lock:
      attributes:
      - client_id
    payout_lock:
      attributes:
      - client_id
      - contract_id
      - currency
      - service_id
  namespace: bnpl
  states:
    cutoff_dt_state:
      attributes:
      - client_id
- accounts:
    commission_refunds:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
    commissions:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
  calculator:
    transport:
      baseUrl: https://faas.test.billing.yandex.net
      debug: true
      retries:
        count: 3
      timeout: 5s
  endpoints:
    commissions:
      actions:
      - method: YT.GetMigrationInfo
        params:
        - action: const
          value: bnpl_income
        - action: get
          key: input.Event.billing_client_id
          type: int64
        reference: migration_info
        stage: before_lock
      - method: YT.GetContracts
        name: contracts
        params:
        - action: get
          keys:
          - input.Event.billing_contract_id
        reference: contracts
        stage: before_lock
      - deps:
        - contracts
        method: YT.GetGenericRowByType
        params:
        - action: const
          value: firm_tax
        - action: extract
          nullify_missing: true
          path: $.references.contracts[0].collaterals[0].firm
        - action: const
          value: int64
        reference: firm
        stage: before_lock
      - method: Accounter.MakeLocation
        params:
        - action: const
          value: locks
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_lock
        - action: const
          value: client_id
        - action: get
          key: input.Event.billing_client_id
        reference: account_location
        stage: before_lock
      - method: Lib.MakeMap
        params:
        - action: const
          value: default
        - action: const
          value: e6a38e6d-f22d-4c05-b533-76031c2ed15c
        reference: products
        stage: before_lock
      - method: Accounter.CreateSharedLock
        params:
        - action: get
          key: references.account_location
        reference: lock_state
        stage: lock
      - method: Lib.JoinToString
        name: event_type
        params:
        - action: get
          keys:
          - input.Namespace
          - input.Endpoint
        - action: const
          value: ':'
        reference: event_type
        stage: after_calc
      - deps:
        - event_type
        method: Accounter.WriteCalculatorResponse
        params:
        - action: get
          key: references.event_type
        - action: get
          key: calc_result.Data.Event.tariffer_payload.external_id
        - action: get
          key: calc_result.Data.Event.tariffer_payload.common_ts
        - action: get
          key: calc_result.Data.Event
        - action: get
          key: calc_result.Data.ClientTransactions.0.transactions
          nullify_missing: true
        - action: get
          key: references.account_location
        - action: get
          key: references.lock_state.object
        reference: write_batch
        stage: after_calc
      calc_references:
      - migration_info
      - contracts
      - firm
      - products
      calculator_method: /faas-common-default/call/bnpl_income-commissions/json
      consts:
      - product_default: e6a38e6d-f22d-4c05-b533-76031c2ed15c
      faas:
        function: billing.hot.calculators.bnpl_income.calculator.faas.adaptor.commissions
        peerdir: billing/hot/calculators/bnpl_income/calculator
        revision: 9780067
        settings:
          eb:
            project: bnpl_income_calculator
            tags:
              endpoint: commissions
  locks:
    cutoff_dt_lock:
      attributes:
      - client_id
  namespace: bnpl_income
  states:
    cutoff_dt_state:
      attributes:
      - client_id
- accounts:
    cashless:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
    cashless_refunds:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
  calculator:
    transport:
      baseUrl: https://faas.test.billing.yandex.net
      debug: true
      retries:
        count: 3
      timeout: 5s
  endpoints:
    payment:
      actions:
      - method: YT.GetMigrationInfo
        params:
        - action: const
          value: disk
        - action: const
          value: 42807381
        reference: migration_info
        stage: before_lock
      - method: YT.GetGenericRowsByFieldType
        name: contract_client_idx
        params:
        - action: const
          value: contract_client_idx
        - action: const
          value: client_id
        - action: const
          value:
          - 42807381
        - action: const
          value: int64
        reference: contract_client_idx
        stage: before_lock
      - deps:
        - contract_client_idx
        method: YT.GetContracts
        name: contracts
        params:
        - action: get
          key: references.contract_client_idx.*.id
        reference: contracts
        stage: before_lock
      - deps:
        - contracts
        method: Lib.Distinct
        name: unique_firms
        params:
        - action: extract
          nullify_missing: true
          path: $.references.contracts.*.collaterals[0].firm
        reference: firms
        stage: before_lock
      - deps:
        - unique_firms
        method: YT.GetGenericRowsByType
        params:
        - action: const
          value: firm_tax
        - action: get
          key: references.firms
        - action: const
          value: int64
        reference: firms
        stage: before_lock
      - method: Accounter.MakeLocation
        params:
        - action: const
          value: locks
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_lock
        - action: const
          value: client_id
        - action: const
          value: 42807381
        reference: account_location
        stage: before_lock
      - method: Lib.Set
        name: event_rows
        params:
        - action: get
          key: input.Event.rows
          nullify_missing: true
        reference: event_rows
        stage: before_lock
      - method: Lib.Join
        name: event_refunds_rows
        params:
        - action: extract
          path: $.input.event.refunds..rows
        reference: event_refunds_rows
        stage: before_lock
      - deps:
        - event_rows
        - event_refunds_rows
        method: Lib.Join
        name: event_all_rows
        params:
        - action: get
          keys:
          - references.event_rows
          - references.event_refunds_rows
        reference: event_all_rows
        stage: before_lock
      - method: Lib.Join
        name: composite_all_rows
        params:
        - action: extract
          path: $.input.event.composite_components..["rows"]
        reference: composite_all_rows
        stage: before_lock
      - deps:
        - composite_all_rows
        - event_all_rows
        method: Lib.If
        name: result_rows
        params:
        - action: get
          key: input.Event.composite_components
          nullify_missing: true
        - action: const
          value: empty
        - action: const
          value: null
        - action: get
          key: references.event_all_rows
        - action: get
          key: references.composite_all_rows
        reference: result_rows
        stage: before_lock
      - deps:
        - result_rows
        method: Diod.GetKeys
        params:
        - action: const
          value: disk_calculator
        - action: extract
          path: $.references.result_rows[*].id
          type: string
        reference: diod_keys
        stage: before_lock
      - method: Accounter.CreateSharedLock
        params:
        - action: get
          key: references.account_location
        reference: lock_state
        stage: lock
      - method: Lib.JoinToString
        name: event_type
        params:
        - action: get
          keys:
          - input.Namespace
          - input.Endpoint
        - action: const
          value: ':'
        reference: event_type
        stage: after_calc
      - deps:
        - event_type
        foreach:
          action: get
          key: calc_result.Data.ClientTransactions
        method: Accounter.WriteCalculatorResponse
        name: write_batch
        params:
        - action: get
          key: main.references.event_type
        - action: get
          key: iteration.value.batch_id
        - action: get
          key: iteration.value.dt
        - action: get
          key: main.calc_result.Data.Event
        - action: get
          key: iteration.value.transactions
        - action: get
          key: main.references.account_location
        - action: get
          key: main.references.lock_state.object
        reference: write_batch
        stage: after_calc
      - deps:
        - write_batch
        method: Diod.UpdateKeys
        name: update_diod_keys
        params:
        - action: get
          key: calc_result.Data.Params.keys
        stage: after_calc
      calc_references:
      - migration_info
      - contracts
      - firms
      - diod_keys
      calculator_method: /faas-common-default/call/disk-payment/json
      consts:
      - partner_id: 42807381
      - product_rub: d3e28d48-41c1-4951-96de-d2110b6a0f65
      - product_usd: 39966a60-c6f3-4e5f-8edb-650c54344c54
      faas:
        function: billing.hot.calculators.trust.calculator.faas.adaptors.payment.PaymentAdaptor
        peerdir: billing/hot/calculators/trust/calculator
        revision: 9780067
        settings:
          accounts_mapping:
          - - - 1101
              - payment
            - - cashless
              - RewardAnalytic
              - credit
          - - - 1101
              - refund
            - - cashless_refunds
              - RewardAnalytic
              - debit
          - - - 1201
              - payment
            - - cashless
              - RewardAnalytic
              - credit
          - - - 1201
              - refund
            - - cashless_refunds
              - RewardAnalytic
              - debit
          adapter_getters:
            arguments: {}
            getters:
              __event_currency:
                arguments:
                  jsonpath: $.row.currency
                type: FieldGetter
              client_id:
                arguments:
                  const: 42807381
                type: ConstGetter
              product_id:
                arguments:
                  default: d3e28d48-41c1-4951-96de-d2110b6a0f65
                  key: __event_currency
                  mapping:
                    USD: 39966a60-c6f3-4e5f-8edb-650c54344c54
                type: ConstDispatcherGetter
            type: DefaultAdapter
          eb:
            project: disk_calculator
            tags:
              endpoint: payment
          endpoint: payment
          namespace: disk
          row_middlewares:
          - arguments: {}
            type: FillCommonTsMiddleware
          - arguments:
              src: dry_run
            type: FillFromRowAdapterMiddleware
          - arguments:
              src: service_id
            type: FillFromRowAdapterMiddleware
          - arguments:
              dst: product_mdh_id
              src: product_id
            type: FillFromRowAdapterMiddleware
          - arguments: {}
            type: FillTaxPolicyMiddleware
          - arguments: {}
            type: FillAmountWoVatMiddleware
  locks:
    cutoff_dt_lock:
      attributes:
      - client_id
    payout_lock:
      attributes:
      - client_id
      - contract_id
      - currency
      - service_id
  namespace: disk
  states:
    cutoff_dt_state:
      attributes:
      - client_id
- accounts:
    dummy_event:
      attributes:
      - contract_id
      - client_id
  calculator:
    transport:
      baseUrl: https://faas.test.billing.yandex.net
      debug: true
      retries:
        count: 3
  endpoints: {}
  locks:
    dummy_lock:
      attributes:
      - client_id
  namespace: dummy
- accounts:
    cashless:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
    cashless_refunds:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
    plus_withdraw_refunds:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
    plus_withdraws:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
  calculator:
    transport:
      baseUrl: https://faas.test.billing.yandex.net
      debug: true
      retries:
        count: 3
      timeout: 5s
  endpoints:
    payment:
      actions:
      - method: Lib.MakeMap
        name: try_conversion_map
        params:
        - action: const
          value: src_cc
        - action: const
          value: tcmb
        - action: const
          value: to
        - action: const
          value: USD
        reference: try_conversion_map
        stage: before_lock
      - method: Lib.MakeMap
        name: default_conversion_map
        params:
        - action: const
          value: src_cc
        - action: const
          value: null
        - action: const
          value: to
        - action: get
          key: input.Event.currency
        reference: default_conversion_map
        stage: before_lock
      - deps:
        - try_conversion_map
        - default_conversion_map
        method: Lib.MakeMap
        name: conversion_map
        params:
        - action: const
          value: TRY
        - action: get
          key: references.try_conversion_map
        - action: const
          value: default
        - action: get
          key: references.default_conversion_map
        reference: conversion_map
        stage: before_lock
      - method: Lib.MakeMap
        name: partner_map
        params:
        - action: const
          value: RUB
        - action: const
          value: 1351874741
        - action: const
          value: USD
        - action: const
          value: 1357680324
        - action: const
          value: EUR
        - action: const
          value: 1357680365
        - action: const
          value: TRY
        - action: const
          value: 1358543687
        reference: partner_map
        stage: before_lock
      - deps:
        - partner_map
        method: Lib.Set
        name: partner_id
        params:
        - action: extract
          path: $.references.partner_map[$.input.event.currency]
        reference: partner_id
        stage: before_lock
      - deps:
        - partner_id
        method: YT.GetMigrationInfo
        params:
        - action: const
          value: games
        - action: get
          key: references.partner_id
        reference: migration_info
        stage: before_lock
      - deps:
        - partner_id
        method: YT.GetGenericRowsByFieldType
        name: contract_ids
        params:
        - action: const
          value: contract_client_idx
        - action: const
          value: client_id
        - action: get
          keys:
          - references.partner_id
        - action: const
          value: int64
        reference: contract_ids
        stage: before_lock
      - deps:
        - contract_ids
        method: YT.GetContracts
        name: contracts
        params:
        - action: get
          key: references.contract_ids.*.id
        reference: contracts
        stage: before_lock
      - deps:
        - contracts
        method: Lib.Distinct
        name: unique_firms
        params:
        - action: extract
          nullify_missing: true
          path: $.references.contracts.*.collaterals[0].firm
        reference: firms
        stage: before_lock
      - deps:
        - unique_firms
        method: YT.GetGenericRowsByType
        params:
        - action: const
          value: firm_tax
        - action: get
          key: references.firms
        - action: const
          value: int64
        reference: firms
        stage: before_lock
      - method: Lib.If
        name: transactions_dt
        params:
        - action: get
          key: input.Event.composite_components
          nullify_missing: true
        - action: const
          value: empty
        - action: const
          value: null
        - action: get
          keys:
          - input.Event.postauth_dt
        - action: extract
          path: $.input.event.composite_components[*].postauth_dt
        reference: transactions_dt
        stage: before_lock
      - deps:
        - transactions_dt
        method: Lib.Max
        name: transaction_dt
        params:
        - action: get
          key: references.transactions_dt
          type: time
        reference: transaction_dt
        stage: before_lock
      - deps:
        - conversion_map
        method: Lib.If
        name: conversion_params
        params:
        - action: extract
          nullify_missing: true
          path: $.references.conversion_map[$.input.event.currency]
        - action: const
          value: ==
        - action: const
          value: null
        - action: get
          key: references.conversion_map.default
        - action: extract
          nullify_missing: true
          path: $.references.conversion_map[$.input.event.currency]
        reference: conversion_params
        stage: before_lock
      - deps:
        - conversion_params
        - transaction_dt
        method: YT.GetIsoCurrencyRate
        name: conversion_rate
        params:
        - action: get
          key: references.conversion_params.src_cc
        - action: get
          key: input.Event.currency
        - action: get
          key: references.conversion_params.to
        - action: get
          key: references.transaction_dt
        reference: conversion_rate
        stage: before_lock
      - deps:
        - conversion_params
        - conversion_rate
        method: Lib.MakeMap
        name: currency_conversion
        params:
        - action: const
          value: to
        - action: get
          key: references.conversion_params.to
        - action: const
          value: rate
        - action: get
          key: references.conversion_rate
        reference: currency_conversion
        stage: before_lock
      - deps:
        - partner_id
        method: Accounter.MakeLocation
        params:
        - action: const
          value: locks
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_lock
        - action: const
          value: client_id
        - action: get
          key: references.partner_id
        reference: account_location
        stage: before_lock
      - method: Lib.Set
        name: event_rows
        params:
        - action: get
          key: input.Event.rows
          nullify_missing: true
        reference: event_rows
        stage: before_lock
      - method: Lib.Join
        name: event_refunds_rows
        params:
        - action: extract
          path: $.input.event.refunds..rows
        reference: event_refunds_rows
        stage: before_lock
      - deps:
        - event_rows
        - event_refunds_rows
        method: Lib.Join
        name: event_all_rows
        params:
        - action: get
          keys:
          - references.event_rows
          - references.event_refunds_rows
        reference: event_all_rows
        stage: before_lock
      - method: Lib.Join
        name: composite_all_rows
        params:
        - action: extract
          path: $.input.event.composite_components..["rows"]
        reference: composite_all_rows
        stage: before_lock
      - deps:
        - composite_all_rows
        - event_all_rows
        method: Lib.If
        name: result_rows
        params:
        - action: get
          key: input.Event.composite_components
          nullify_missing: true
        - action: const
          value: empty
        - action: const
          value: null
        - action: get
          key: references.event_all_rows
        - action: get
          key: references.composite_all_rows
        reference: result_rows
        stage: before_lock
      - deps:
        - result_rows
        method: Diod.GetKeys
        params:
        - action: const
          value: games_calculator
        - action: extract
          path: $.references.result_rows[*].id
          type: string
        reference: diod_keys
        stage: before_lock
      - method: Accounter.CreateSharedLock
        params:
        - action: get
          key: references.account_location
        reference: lock_state
        stage: lock
      - method: Lib.JoinToString
        name: event_type
        params:
        - action: get
          keys:
          - input.Namespace
          - input.Endpoint
        - action: const
          value: ':'
        reference: event_type
        stage: after_calc
      - deps:
        - event_type
        foreach:
          action: get
          key: calc_result.Data.ClientTransactions
        method: Accounter.WriteCalculatorResponse
        name: write_batch
        params:
        - action: get
          key: main.references.event_type
        - action: get
          key: iteration.value.batch_id
        - action: get
          key: iteration.value.dt
        - action: get
          key: main.calc_result.Data.Event
        - action: get
          key: iteration.value.transactions
        - action: get
          key: main.references.account_location
        - action: get
          key: main.references.lock_state.object
        reference: write_batch
        stage: after_calc
      - deps:
        - write_batch
        method: Diod.UpdateKeys
        name: update_diod_keys
        params:
        - action: get
          key: calc_result.Data.Params.keys
        stage: after_calc
      calc_references:
      - migration_info
      - contracts
      - firms
      - diod_keys
      - currency_conversion
      calculator_method: /faas-common-default/call/games-payment/json
      consts:
      - partner_id_rub: 1351874741
      - partner_id_usd: 1357680324
      - partner_id_eur: 1357680365
      - partner_id_try: 1358543687
      - product_rub: 744e8324-9513-49a9-940d-03dde8148ef1
      - product_default: dee7935b-334e-4d22-818a-db8c2a854dcc
      - try_usd_src_cc: tcmb
      faas:
        function: billing.hot.calculators.trust.calculator.faas.adaptors.payment.PaymentAdaptor
        peerdir: billing/hot/calculators/trust/calculator
        revision: 9780067
        settings:
          accounts_mapping:
          - - - 1101
              - payment
            - - cashless
              - RewardAnalytic
              - credit
          - - - 1101
              - refund
            - - cashless_refunds
              - RewardAnalytic
              - debit
          - - - 1540
              - payment
            - - cashless
              - RewardAnalytic
              - credit
          - - - 1540
              - refund
            - - cashless_refunds
              - RewardAnalytic
              - debit
          - - - 1201
              - payment
            - - cashless
              - RewardAnalytic
              - credit
          - - - 1201
              - refund
            - - cashless_refunds
              - RewardAnalytic
              - debit
          adapter_getters:
            arguments: {}
            getters:
              __eur:
                arguments:
                  const: EUR
                type: ConstGetter
              __event_currency:
                arguments:
                  jsonpath: $.row.currency
                type: FieldGetter
              __partner_id_eur:
                arguments:
                  const: 1357680365
                type: ConstGetter
              __partner_id_rub:
                arguments:
                  const: 1351874741
                type: ConstGetter
              __partner_id_try:
                arguments:
                  const: 1358543687
                type: ConstGetter
              __partner_id_usd:
                arguments:
                  const: 1357680324
                type: ConstGetter
              __product_default:
                arguments:
                  const: dee7935b-334e-4d22-818a-db8c2a854dcc
                type: ConstGetter
              __product_rub:
                arguments:
                  const: 744e8324-9513-49a9-940d-03dde8148ef1
                type: ConstGetter
              __rub:
                arguments:
                  const: RUB
                type: ConstGetter
              __try:
                arguments:
                  const: TRY
                type: ConstGetter
              client_id:
                arguments:
                  cases:
                  - left: __event_currency
                    operator: eq
                    right: __rub
                    value: __partner_id_rub
                  - left: __event_currency
                    operator: eq
                    right: __eur
                    value: __partner_id_eur
                  - left: __event_currency
                    operator: eq
                    right: __try
                    value: __partner_id_try
                  default: __partner_id_usd
                type: CaseGetter
              product_id:
                arguments:
                  cases:
                  - left: __event_currency
                    operator: eq
                    right: __rub
                    value: __product_rub
                  default: __product_default
                type: CaseGetter
            type: DefaultAdapter
          currency_conversion:
            TRY: USD
          eb:
            project: games_calculator
            tags:
              endpoint: payment
          endpoint: payment
          namespace: games
          row_middlewares:
          - arguments: {}
            type: FillCommonTsMiddleware
          - arguments:
              src: dry_run
            type: FillFromRowAdapterMiddleware
          - arguments:
              src: service_id
            type: FillFromRowAdapterMiddleware
          - arguments:
              dst: product_mdh_id
              src: product_id
            type: FillFromRowAdapterMiddleware
          - arguments: {}
            type: FillTaxPolicyMiddleware
          - arguments: {}
            type: FillAmountWoVatMiddleware
  locks:
    cutoff_dt_lock:
      attributes:
      - client_id
    payout_lock:
      attributes:
      - client_id
      - contract_id
      - currency
      - service_id
  namespace: games
  states:
    cutoff_dt_state:
      attributes:
      - client_id
- accounts:
    cashless:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
    cashless_refunds:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
  calculator:
    transport:
      baseUrl: https://faas.test.billing.yandex.net
      debug: true
      retries:
        count: 3
      timeout: 5s
  endpoints:
    payment:
      actions:
      - method: Lib.If
        name: partner_id
        params:
        - action: get
          key: input.Event.currency
        - action: const
          value: ==
        - action: const
          value: RUB
        - action: const
          value: 82663760
        - action: const
          value: 94652451
        reference: partner_id
        stage: before_lock
      - deps:
        - partner_id
        method: YT.GetMigrationInfo
        params:
        - action: const
          value: mail_pro
        - action: get
          key: references.partner_id
        reference: migration_info
        stage: before_lock
      - deps:
        - partner_id
        method: YT.GetGenericRowsByFieldType
        name: contract_client_idx
        params:
        - action: const
          value: contract_client_idx
        - action: const
          value: client_id
        - action: get
          keys:
          - references.partner_id
        - action: const
          value: int64
        reference: contract_client_idx
        stage: before_lock
      - deps:
        - contract_client_idx
        method: YT.GetContracts
        name: contracts
        params:
        - action: get
          key: references.contract_client_idx.*.id
        reference: contracts
        stage: before_lock
      - deps:
        - contracts
        method: Lib.Distinct
        name: unique_firms
        params:
        - action: extract
          nullify_missing: true
          path: $.references.contracts.*.collaterals[0].firm
        reference: firms
        stage: before_lock
      - deps:
        - unique_firms
        method: YT.GetGenericRowsByType
        params:
        - action: const
          value: firm_tax
        - action: get
          key: references.firms
        - action: const
          value: int64
        reference: firms
        stage: before_lock
      - deps:
        - partner_id
        method: Accounter.MakeLocation
        params:
        - action: const
          value: locks
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_lock
        - action: const
          value: client_id
        - action: get
          key: references.partner_id
        reference: account_location
        stage: before_lock
      - method: Lib.Set
        name: event_rows
        params:
        - action: get
          key: input.Event.rows
          nullify_missing: true
        reference: event_rows
        stage: before_lock
      - method: Lib.Join
        name: event_refunds_rows
        params:
        - action: extract
          path: $.input.event.refunds..rows
        reference: event_refunds_rows
        stage: before_lock
      - deps:
        - event_rows
        - event_refunds_rows
        method: Lib.Join
        name: event_all_rows
        params:
        - action: get
          keys:
          - references.event_rows
          - references.event_refunds_rows
        reference: event_all_rows
        stage: before_lock
      - method: Lib.Join
        name: composite_all_rows
        params:
        - action: extract
          path: $.input.event.composite_components..["rows"]
        reference: composite_all_rows
        stage: before_lock
      - deps:
        - composite_all_rows
        - event_all_rows
        method: Lib.If
        name: result_rows
        params:
        - action: get
          key: input.Event.composite_components
          nullify_missing: true
        - action: const
          value: empty
        - action: const
          value: null
        - action: get
          key: references.event_all_rows
        - action: get
          key: references.composite_all_rows
        reference: result_rows
        stage: before_lock
      - deps:
        - result_rows
        method: Diod.GetKeys
        params:
        - action: const
          value: mail_pro_calculator
        - action: extract
          path: $.references.result_rows[*].id
          type: string
        reference: diod_keys
        stage: before_lock
      - method: Accounter.CreateSharedLock
        params:
        - action: get
          key: references.account_location
        reference: lock_state
        stage: lock
      - method: Lib.JoinToString
        name: event_type
        params:
        - action: get
          keys:
          - input.Namespace
          - input.Endpoint
        - action: const
          value: ':'
        reference: event_type
        stage: after_calc
      - deps:
        - event_type
        foreach:
          action: get
          key: calc_result.Data.ClientTransactions
        method: Accounter.WriteCalculatorResponse
        name: write_batch
        params:
        - action: get
          key: main.references.event_type
        - action: get
          key: iteration.value.batch_id
        - action: get
          key: iteration.value.dt
        - action: get
          key: main.calc_result.Data.Event
        - action: get
          key: iteration.value.transactions
        - action: get
          key: main.references.account_location
        - action: get
          key: main.references.lock_state.object
        reference: write_batch
        stage: after_calc
      - deps:
        - write_batch
        method: Diod.UpdateKeys
        name: update_diod_keys
        params:
        - action: get
          key: calc_result.Data.Params.keys
        stage: after_calc
      calc_references:
      - migration_info
      - contracts
      - firms
      - diod_keys
      calculator_method: /faas-common-default/call/mail_pro-payment/json
      consts:
      - partner_id_rub: 82663760
      - partner_id_usd: 94652451
      - product_rub: 506c60e8-a42d-452f-b76c-e1c1d89c5e1b
      - product_default: f95b78e7-c4bc-406a-a6d4-69acfb0e9278
      faas:
        function: billing.hot.calculators.trust.calculator.faas.adaptors.payment.PaymentAdaptor
        peerdir: billing/hot/calculators/trust/calculator
        revision: 9780067
        settings:
          accounts_mapping:
          - - - 1101
              - payment
            - - cashless
              - RewardAnalytic
              - credit
          - - - 1101
              - refund
            - - cashless_refunds
              - RewardAnalytic
              - debit
          adapter_getters:
            arguments: {}
            getters:
              __event_currency:
                arguments:
                  jsonpath: $.row.currency
                type: FieldGetter
              __partner_id_rub:
                arguments:
                  const: 82663760
                type: ConstGetter
              __partner_id_usd:
                arguments:
                  const: 94652451
                type: ConstGetter
              __product_default:
                arguments:
                  const: f95b78e7-c4bc-406a-a6d4-69acfb0e9278
                type: ConstGetter
              __product_rub:
                arguments:
                  const: 506c60e8-a42d-452f-b76c-e1c1d89c5e1b
                type: ConstGetter
              __rub:
                arguments:
                  const: RUB
                type: ConstGetter
              client_id:
                arguments:
                  cases:
                  - left: __event_currency
                    operator: eq
                    right: __rub
                    value: __partner_id_rub
                  default: __partner_id_usd
                type: CaseGetter
              product_id:
                arguments:
                  cases:
                  - left: __event_currency
                    operator: eq
                    right: __rub
                    value: __product_rub
                  default: __product_default
                type: CaseGetter
            type: DefaultAdapter
          eb:
            project: mail_pro_calculator
            tags:
              endpoint: payment
          endpoint: payment
          namespace: mail_pro
          row_middlewares:
          - arguments: {}
            type: FillCommonTsMiddleware
          - arguments:
              src: dry_run
            type: FillFromRowAdapterMiddleware
          - arguments:
              src: service_id
            type: FillFromRowAdapterMiddleware
          - arguments:
              dst: product_mdh_id
              src: product_id
            type: FillFromRowAdapterMiddleware
          - arguments: {}
            type: FillTaxPolicyMiddleware
          - arguments: {}
            type: FillAmountWoVatMiddleware
  locks:
    cutoff_dt_lock:
      attributes:
      - client_id
    payout_lock:
      attributes:
      - client_id
      - contract_id
      - currency
      - service_id
  namespace: mail_pro
  states:
    cutoff_dt_state:
      attributes:
      - client_id
- accounts:
    cashless:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
    cashless_refunds:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
    plus_withdraw:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
    plus_withdraw_refunds:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
  calculator:
    transport:
      baseUrl: https://faas.test.billing.yandex.net
      debug: true
      retries:
        count: 3
      timeout: 5s
  endpoints:
    payment:
      actions:
      - method: YT.GetMigrationInfo
        params:
        - action: const
          value: music
        - action: const
          value: 33043275
        reference: migration_info
        stage: before_lock
      - method: YT.GetGenericRowsByFieldType
        name: contract_client_idx
        params:
        - action: const
          value: contract_client_idx
        - action: const
          value: client_id
        - action: const
          value:
          - 33043275
        - action: const
          value: int64
        reference: contract_client_idx
        stage: before_lock
      - deps:
        - contract_client_idx
        method: YT.GetContracts
        name: contracts
        params:
        - action: get
          key: references.contract_client_idx.*.id
        reference: contracts
        stage: before_lock
      - deps:
        - contracts
        method: Lib.Distinct
        name: unique_firms
        params:
        - action: extract
          nullify_missing: true
          path: $.references.contracts.*.collaterals[0].firm
        reference: firms
        stage: before_lock
      - deps:
        - unique_firms
        method: YT.GetGenericRowsByType
        params:
        - action: const
          value: firm_tax
        - action: get
          key: references.firms
        - action: const
          value: int64
        reference: firms
        stage: before_lock
      - method: Accounter.MakeLocation
        params:
        - action: const
          value: locks
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_lock
        - action: const
          value: client_id
        - action: const
          value: 33043275
        reference: account_location
        stage: before_lock
      - method: Lib.Set
        name: event_rows
        params:
        - action: get
          key: input.Event.rows
          nullify_missing: true
        reference: event_rows
        stage: before_lock
      - method: Lib.Join
        name: event_refunds_rows
        params:
        - action: extract
          path: $.input.event.refunds..rows
        reference: event_refunds_rows
        stage: before_lock
      - deps:
        - event_rows
        - event_refunds_rows
        method: Lib.Join
        name: event_all_rows
        params:
        - action: get
          keys:
          - references.event_rows
          - references.event_refunds_rows
        reference: event_all_rows
        stage: before_lock
      - method: Lib.Join
        name: composite_all_rows
        params:
        - action: extract
          path: $.input.event.composite_components..["rows"]
        reference: composite_all_rows
        stage: before_lock
      - deps:
        - composite_all_rows
        - event_all_rows
        method: Lib.If
        name: result_rows
        params:
        - action: get
          key: input.Event.composite_components
          nullify_missing: true
        - action: const
          value: empty
        - action: const
          value: null
        - action: get
          key: references.event_all_rows
        - action: get
          key: references.composite_all_rows
        reference: result_rows
        stage: before_lock
      - deps:
        - result_rows
        method: Diod.GetKeys
        params:
        - action: const
          value: music_calculator
        - action: extract
          path: $.references.result_rows[*].id
          type: string
        reference: diod_keys
        stage: before_lock
      - method: Accounter.CreateSharedLock
        params:
        - action: get
          key: references.account_location
        reference: lock_state
        stage: lock
      - method: Lib.JoinToString
        name: event_type
        params:
        - action: get
          keys:
          - input.Namespace
          - input.Endpoint
        - action: const
          value: ':'
        reference: event_type
        stage: after_calc
      - deps:
        - event_type
        foreach:
          action: get
          key: calc_result.Data.ClientTransactions
        method: Accounter.WriteCalculatorResponse
        name: write_batch
        params:
        - action: get
          key: main.references.event_type
        - action: get
          key: iteration.value.batch_id
        - action: get
          key: iteration.value.dt
        - action: get
          key: main.calc_result.Data.Event
        - action: get
          key: iteration.value.transactions
        - action: get
          key: main.references.account_location
        - action: get
          key: main.references.lock_state.object
        reference: write_batch
        stage: after_calc
      - deps:
        - write_batch
        method: Diod.UpdateKeys
        name: update_diod_keys
        params:
        - action: get
          key: calc_result.Data.Params.keys
        stage: after_calc
      calc_references:
      - migration_info
      - contracts
      - firms
      - diod_keys
      calculator_method: /faas-common-default/call/music-payment/json
      consts:
      - partner_id: 33043275
      faas:
        function: billing.hot.calculators.trust.calculator.faas.adaptors.payment.PaymentAdaptor
        peerdir: billing/hot/calculators/trust/calculator
        revision: 9780067
        settings:
          accounts_mapping:
          - - - 1534
              - payment
            - - plus_withdraw
              - RewardAnalytic
              - credit
          - - - 1534
              - refund
            - - plus_withdraw_refunds
              - RewardAnalytic
              - debit
          - - - 1101
              - payment
            - - cashless
              - RewardAnalytic
              - credit
          - - - 1101
              - refund
            - - cashless_refunds
              - RewardAnalytic
              - debit
          - - - 1201
              - payment
            - - cashless
              - RewardAnalytic
              - credit
          - - - 1201
              - refund
            - - cashless_refunds
              - RewardAnalytic
              - debit
          - - - 1544
              - payment
            - - cashless
              - RewardAnalytic
              - credit
          - - - 1544
              - refund
            - - cashless_refunds
              - RewardAnalytic
              - debit
          adapter_getters:
            arguments: {}
            getters:
              __actual_service_fee:
                arguments:
                  jsonpath: $.row.service_product.service_fee
                type: FieldGetter
              act_service_id:
                arguments:
                  const: 23
                type: ConstGetter
              client_id:
                arguments:
                  const: 33043275
                type: ConstGetter
              product_id:
                arguments:
                  default: 4bc007c3-11f1-4531-a1cb-09d0ec90468f
                  key: __actual_service_fee
                  mapping:
                    1: 612e0f9c-a3d7-4d02-be0b-a31a57242da4
                    2: 85a6597d-2bca-4da4-9b46-f6c23c4638cd
                    4: 1f102314-0817-4389-b6dd-1241326c4f79
                    5: aa3040be-43bb-4b60-bca3-31663733247f
                    6: 94171a26-680c-4b89-b56f-e61bd30e9493
                    7: 41c6d7ad-ef14-4359-8bd3-a605cf73dc51
                    11: df88f800-e0f2-41ad-8ce5-518ec0173ebd
                type: ConstDispatcherGetter
            type: DefaultAdapter
          eb:
            project: music_calculator
            tags:
              endpoint: payment
          endpoint: payment
          namespace: music
          row_filters:
          - arguments:
              allowed_currencies:
              - RUB
            type: CurrencyFilter
          row_middlewares:
          - arguments: {}
            type: FillCommonTsMiddleware
          - arguments:
              src: dry_run
            type: FillFromRowAdapterMiddleware
          - arguments:
              dst: service_id
              src: act_service_id
            type: FillFromRowAdapterMiddleware
          - arguments:
              dst: product_mdh_id
              src: product_id
            type: FillFromRowAdapterMiddleware
          - arguments: {}
            type: FillTaxPolicyMiddleware
          - arguments: {}
            type: FillAmountWoVatMiddleware
  locks:
    cutoff_dt_lock:
      attributes:
      - client_id
    payout_lock:
      attributes:
      - client_id
      - contract_id
      - currency
      - service_id
  namespace: music
  states:
    cutoff_dt_state:
      attributes:
      - client_id
- accounts:
    cashless:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
    cashless_refunds:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
    plus_withdraw:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
    plus_withdraw_refunds:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
  calculator:
    transport:
      baseUrl: https://faas.test.billing.yandex.net
      debug: true
      retries:
        count: 3
      timeout: 5s
  endpoints:
    payment:
      actions:
      - method: YT.GetMigrationInfo
        params:
        - action: const
          value: music_mediaservices
        - action: const
          value: 89905212
        reference: migration_info
        stage: before_lock
      - method: YT.GetGenericRowsByFieldType
        name: contract_client_idx
        params:
        - action: const
          value: contract_client_idx
        - action: const
          value: client_id
        - action: const
          value:
          - 89905212
        - action: const
          value: int64
        reference: contract_client_idx
        stage: before_lock
      - deps:
        - contract_client_idx
        method: YT.GetContracts
        name: contracts
        params:
        - action: get
          key: references.contract_client_idx.*.id
        reference: contracts
        stage: before_lock
      - deps:
        - contracts
        method: Lib.Distinct
        name: unique_firms
        params:
        - action: extract
          nullify_missing: true
          path: $.references.contracts.*.collaterals[0].firm
        reference: firms
        stage: before_lock
      - deps:
        - unique_firms
        method: YT.GetGenericRowsByType
        params:
        - action: const
          value: firm_tax
        - action: get
          key: references.firms
        - action: const
          value: int64
        reference: firms
        stage: before_lock
      - method: Accounter.MakeLocation
        params:
        - action: const
          value: locks
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_lock
        - action: const
          value: client_id
        - action: const
          value: 89905212
        reference: account_location
        stage: before_lock
      - method: Lib.Set
        name: event_rows
        params:
        - action: get
          key: input.Event.rows
          nullify_missing: true
        reference: event_rows
        stage: before_lock
      - method: Lib.Join
        name: event_refunds_rows
        params:
        - action: extract
          path: $.input.event.refunds..rows
        reference: event_refunds_rows
        stage: before_lock
      - deps:
        - event_rows
        - event_refunds_rows
        method: Lib.Join
        name: event_all_rows
        params:
        - action: get
          keys:
          - references.event_rows
          - references.event_refunds_rows
        reference: event_all_rows
        stage: before_lock
      - method: Lib.Join
        name: composite_all_rows
        params:
        - action: extract
          path: $.input.event.composite_components..["rows"]
        reference: composite_all_rows
        stage: before_lock
      - deps:
        - composite_all_rows
        - event_all_rows
        method: Lib.If
        name: result_rows
        params:
        - action: get
          key: input.Event.composite_components
          nullify_missing: true
        - action: const
          value: empty
        - action: const
          value: null
        - action: get
          key: references.event_all_rows
        - action: get
          key: references.composite_all_rows
        reference: result_rows
        stage: before_lock
      - deps:
        - result_rows
        method: Diod.GetKeys
        params:
        - action: const
          value: music_mediaservices_calculator
        - action: extract
          path: $.references.result_rows[*].id
          type: string
        reference: diod_keys
        stage: before_lock
      - method: Accounter.CreateSharedLock
        params:
        - action: get
          key: references.account_location
        reference: lock_state
        stage: lock
      - method: Lib.JoinToString
        name: event_type
        params:
        - action: get
          keys:
          - input.Namespace
          - input.Endpoint
        - action: const
          value: ':'
        reference: event_type
        stage: after_calc
      - deps:
        - event_type
        foreach:
          action: get
          key: calc_result.Data.ClientTransactions
        method: Accounter.WriteCalculatorResponse
        name: write_batch
        params:
        - action: get
          key: main.references.event_type
        - action: get
          key: iteration.value.batch_id
        - action: get
          key: iteration.value.dt
        - action: get
          key: main.calc_result.Data.Event
        - action: get
          key: iteration.value.transactions
        - action: get
          key: main.references.account_location
        - action: get
          key: main.references.lock_state.object
        reference: write_batch
        stage: after_calc
      - deps:
        - write_batch
        method: Diod.UpdateKeys
        name: update_diod_keys
        params:
        - action: get
          key: calc_result.Data.Params.keys
        stage: after_calc
      calc_references:
      - migration_info
      - contracts
      - firms
      - diod_keys
      calculator_method: /faas-common-default/call/music_mediaservices-payment/json
      consts:
      - partner_id: 89905212
      faas:
        function: billing.hot.calculators.trust.calculator.faas.adaptors.payment.PaymentAdaptor
        peerdir: billing/hot/calculators/trust/calculator
        revision: 9780067
        settings:
          accounts_mapping:
          - - - 1534
              - payment
            - - plus_withdraw
              - RewardAnalytic
              - credit
          - - - 1534
              - refund
            - - plus_withdraw_refunds
              - RewardAnalytic
              - debit
          - - - 1101
              - payment
            - - cashless
              - RewardAnalytic
              - credit
          - - - 1101
              - refund
            - - cashless_refunds
              - RewardAnalytic
              - debit
          - - - 1201
              - payment
            - - cashless
              - RewardAnalytic
              - credit
          - - - 1201
              - refund
            - - cashless_refunds
              - RewardAnalytic
              - debit
          - - - 1544
              - payment
            - - cashless
              - RewardAnalytic
              - credit
          - - - 1544
              - refund
            - - cashless_refunds
              - RewardAnalytic
              - debit
          adapter_getters:
            arguments: {}
            getters:
              __actual_service_fee:
                arguments:
                  jsonpath: $.row.service_product.service_fee
                type: FieldGetter
              __service_fee_12:
                arguments:
                  const: 12
                type: ConstGetter
              __service_fee_12_product:
                arguments:
                  const: ccc3e2df-d345-4d43-b857-3c1b1ac72008
                type: ConstGetter
              __service_fee_13:
                arguments:
                  const: 13
                type: ConstGetter
              __service_fee_13_product:
                arguments:
                  const: 1eacadd4-46f3-4c7e-a661-fcdf725297c6
                type: ConstGetter
              __service_fee_20:
                arguments:
                  const: 20
                type: ConstGetter
              __service_fee_20_product:
                arguments:
                  const: 6cc8d94a-d02d-42f3-ad4b-b28a52d02d02
                type: ConstGetter
              __service_fee_21:
                arguments:
                  const: 21
                type: ConstGetter
              __service_fee_21_product:
                arguments:
                  const: 36842c2f-c22e-43e8-b847-4f384f44ceaf
                type: ConstGetter
              __service_fee_22:
                arguments:
                  const: 22
                type: ConstGetter
              __service_fee_22_product:
                arguments:
                  const: cb96d6ea-f6c2-48af-8159-7318304b5066
                type: ConstGetter
              __service_fee_default_product:
                arguments:
                  const: 39851fdc-8c5a-4d8c-b505-acc1b7c8f2d4
                type: ConstGetter
              client_id:
                arguments:
                  const: 89905212
                type: ConstGetter
              product_id:
                arguments:
                  cases:
                  - left: __actual_service_fee
                    operator: eq
                    right: __service_fee_12
                    value: __service_fee_12_product
                  - left: __actual_service_fee
                    operator: eq
                    right: __service_fee_13
                    value: __service_fee_13_product
                  - left: __actual_service_fee
                    operator: eq
                    right: __service_fee_20
                    value: __service_fee_20_product
                  - left: __actual_service_fee
                    operator: eq
                    right: __service_fee_21
                    value: __service_fee_21_product
                  - left: __actual_service_fee
                    operator: eq
                    right: __service_fee_22
                    value: __service_fee_22_product
                  default: __service_fee_default_product
                type: CaseGetter
            type: DefaultAdapter
          eb:
            project: music_mediaservices_calculator
            tags:
              endpoint: payment
          endpoint: payment
          namespace: music_mediaservices
          row_filters:
          - arguments:
              allowed_currencies:
              - RUB
            type: CurrencyFilter
          row_middlewares:
          - arguments: {}
            type: FillCommonTsMiddleware
          - arguments:
              src: dry_run
            type: FillFromRowAdapterMiddleware
          - arguments:
              src: service_id
            type: FillFromRowAdapterMiddleware
          - arguments:
              dst: product_mdh_id
              src: product_id
            type: FillFromRowAdapterMiddleware
          - arguments: {}
            type: FillTaxPolicyMiddleware
          - arguments: {}
            type: FillAmountWoVatMiddleware
  locks:
    cutoff_dt_lock:
      attributes:
      - client_id
    payout_lock:
      attributes:
      - client_id
      - contract_id
      - currency
      - service_id
  namespace: music_mediaservices
  states:
    cutoff_dt_state:
      attributes:
      - client_id
- accounts:
    agent_rewards:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
    cashless:
      add_attributes:
      - terminal_id
      attributes:
      - client_id
      - contract_id
      - currency
    cashless_refunds:
      add_attributes:
      - terminal_id
      attributes:
      - client_id
      - contract_id
      - currency
    payout:
      add_attributes:
      - service_id
      attributes:
      - client_id
      - contract_id
      - currency
    payout_sent:
      add_attributes:
      - service_id
      attributes:
      - client_id
      - contract_id
      - currency
    promocodes:
      attributes:
      - client_id
      - contract_id
      - currency
    promocodes_refunds:
      attributes:
      - client_id
      - contract_id
      - currency
  calculator:
    transport:
      baseUrl: https://faas.test.billing.yandex.net
      debug: true
      retries:
        count: 3
  endpoints:
    cashless:
      actions:
      - method: YT.GetMigrationInfo
        params:
        - action: const
          value: oplata
        - action: get
          key: input.Event.merchant.client_id
          type: int64
        reference: migration_info
        stage: before_lock
      - method: YT.GetContracts
        name: contracts
        params:
        - action: get
          keys:
          - input.Event.merchant.contract_id
        reference: contracts
        stage: before_lock
      - deps:
        - contracts
        method: YT.GetGenericRowByType
        params:
        - action: const
          value: firm_tax
        - action: extract
          nullify_missing: true
          path: $.references.contracts[0].collaterals[0].firm
        - action: const
          value: int64
        reference: firm
        stage: before_lock
      - method: Accounter.MakeLocation
        params:
        - action: const
          value: locks
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_lock
        - action: const
          value: client_id
        - action: get
          key: input.Event.merchant.client_id
        reference: account_location
        stage: before_lock
      - method: Accounter.MakeLocation
        name: state_params
        params:
        - action: const
          value: states
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_state
        - action: const
          value: client_id
        - action: get
          key: input.Event.merchant.client_id
        reference: state_params
        stage: before_lock
      - deps:
        - state_params
        method: Lib.MakeMap
        name: read_batch_params
        params:
        - action: const
          value: states
        - action: get
          keys:
          - references.state_params
        reference: read_batch_params
        stage: before_lock
      - method: Lib.MakeMap
        params:
        - action: const
          value: "3"
        - action: const
          value: 6433b8d4-ae84-4b00-a15d-b44b09a1d77f
        - action: const
          value: default
        - action: const
          value: e6a38e6d-f22d-4c05-b533-76031c2ed15c
        reference: products
        stage: before_lock
      - method: Accounter.CreateSharedLock
        params:
        - action: get
          key: references.account_location
        reference: lock_state
        stage: lock
      - method: Accounter.ReadBatch
        name: batch
        params:
        - action: get
          key: references.read_batch_params
        reference: batch
        stage: after_lock
      - deps:
        - batch
        method: Lib.MakeMap
        params:
        - action: const
          value: states
        - action: get
          key: references.batch.States
        reference: lock
        stage: after_lock
      - method: Lib.JoinToString
        name: event_type
        params:
        - action: get
          keys:
          - input.Namespace
          - input.Endpoint
        - action: const
          value: ':'
        reference: event_type
        stage: after_calc
      - deps:
        - event_type
        method: Accounter.WriteCalculatorResponse
        params:
        - action: get
          key: references.event_type
        - action: get
          key: calc_result.Data.Event.tariffer_payload.external_id
        - action: get
          key: calc_result.Data.Event.tariffer_payload.common_ts
        - action: get
          key: calc_result.Data.Event
        - action: get
          key: calc_result.Data.ClientTransactions.0.transactions
          nullify_missing: true
        - action: get
          key: references.account_location
        - action: get
          key: references.lock_state.object
        reference: write_batch
        stage: after_calc
      calc_references:
      - migration_info
      - contracts
      - firm
      - lock
      - products
      calculator_method: /faas-common-default/call/oplata-cashless/json
      consts:
      - product_3: 6433b8d4-ae84-4b00-a15d-b44b09a1d77f
      - product_default: e6a38e6d-f22d-4c05-b533-76031c2ed15c
      faas:
        function: billing.hot.calculators.oplata.calculator.faas.adaptor.cashless
        peerdir: billing/hot/calculators/oplata/calculator
        revision: 9780067
        settings:
          eb:
            project: oplata_calculator
            tags:
              endpoint: cashless
    payout:
      actions:
      - method: Accounter.MakeDatedLocation
        name: cashless
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: cashless
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        - action: const
          value: terminal_id
        - action: set_null
        reference: cashless
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: promocodes
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: promocodes
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: promocodes
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: cashless_refunds
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: cashless_refunds
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        - action: const
          value: terminal_id
        - action: set_null
        reference: cashless_refunds
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: promocodes_refunds
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: promocodes_refunds
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: promocodes_refunds
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: agent_rewards
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: agent_rewards
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: agent_rewards
        stage: before_lock
      - method: YT.GetGenericRowsByFieldType
        name: contract_client_idx
        params:
        - action: const
          value: contract_client_idx
        - action: const
          value: client_id
        - action: get
          keys:
          - input.Event.client_id
        - action: const
          value: int64
        reference: contract_client_idx
        stage: before_lock
      - deps:
        - contract_client_idx
        method: YT.GetContracts
        params:
        - action: get
          key: references.contract_client_idx.*.id
        reference: contracts
        stage: before_lock
      - method: YT.GetMigrationInfo
        params:
        - action: const
          value: oplata
        - action: get
          key: input.Event.client_id
          type: int64
        reference: migration_info
        stage: before_lock
      - method: YT.GetGenericRowsByFieldType
        params:
        - action: const
          value: personal_accounts
        - action: const
          value: client_id
        - action: get
          keys:
          - input.Event.client_id
        - action: const
          value: uint64
        reference: personal_accounts
        stage: before_lock
      - method: Accounter.MakeLocation
        name: state_params
        params:
        - action: const
          value: states
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_state
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: state_params
        stage: before_lock
      - deps:
        - cashless
        - promocodes
        - cashless_refunds
        - promocodes_refunds
        - agent_rewards
        - state_params
        method: Lib.MakeMap
        params:
        - action: const
          value: balances
        - action: get
          keys:
          - references.cashless
          - references.promocodes
          - references.cashless_refunds
          - references.promocodes_refunds
          - references.agent_rewards
        - action: const
          value: states
        - action: get
          keys:
          - references.state_params
        reference: read_batch_params
        stage: before_lock
      - method: Accounter.MakeLocation
        params:
        - action: const
          value: locks
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_lock
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: account_location
        stage: before_lock
      - method: Accounter.CreateExclusiveLock
        params:
        - action: get
          key: references.account_location
        - action: const
          value: 6
        - action: const
          value: 2
        reference: account_lock
        stage: lock
      - method: Accounter.ReadBatch
        name: accounts
        params:
        - action: get
          key: references.read_batch_params
        reference: accounts
        stage: after_lock
      - deps:
        - accounts
        method: Lib.MakeMap
        params:
        - action: const
          value: states
        - action: get
          key: references.accounts.States
        reference: lock
        stage: after_lock
      - method: Lib.JoinToString
        name: event_type
        params:
        - action: get
          keys:
          - input.Namespace
          - input.Endpoint
        - action: const
          value: ':'
        reference: event_type
        stage: after_calc
      - method: Lib.Filter
        name: account_states
        params:
        - action: get
          key: calc_result.Data.States
          nullify_missing: true
        - action: const
          value: item.loc.type
        - action: const
          value: ==
        - action: const
          value: cutoff_dt_state
        reference: account_states
        stage: after_calc
      - deps:
        - event_type
        - account_states
        method: Accounter.WriteCalculatorResponseNRemoveLock
        name: write_account_batch
        params:
        - action: get
          key: references.event_type
        - action: get
          key: calc_result.Data.Event.transaction_id
        - action: get
          key: calc_result.Data.Event.tariffer_payload.common_ts
        - action: get
          key: calc_result.Data.Event
        - action: get
          key: calc_result.Data.ClientTransactions.0.transactions
          nullify_missing: true
        - action: get
          key: references.account_location
        - action: get
          key: references.account_lock.object
        - action: get
          key: references.account_states
        reference: write_account_batch
        stage: after_calc
      calc_references:
      - accounts
      - migration_info
      - contracts
      - personal_accounts
      - lock
      calculator_method: /faas-common-default/call/oplata-payout/json
      faas:
        function: billing.hot.calculators.oplata.calculator.faas.adaptor.payout
        peerdir: billing/hot/calculators/oplata/calculator
        revision: 9780067
        settings:
          eb:
            project: oplata_calculator
            tags:
              endpoint: payout
  locks:
    cutoff_dt_lock:
      attributes:
      - client_id
    payout_lock:
      attributes:
      - client_id
      - contract_id
      - currency
      - service_id
  namespace: oplata
  states:
    cutoff_dt_state:
      attributes:
      - client_id
- accounts:
    user_costs:
      attributes:
      - service_id
      - client_id
    user_credit:
      attributes:
      - service_id
      - client_id
  calculator:
    transport:
      baseUrl: https://faas.test.billing.yandex.net
      debug: true
      retries:
        count: 3
  endpoints:
    credit:
      actions:
      - method: Lib.JoinToString
        name: limit_key
        params:
        - action: get
          keys:
          - input.Event.service_id
          - input.Event.client_id
        - action: const
          value: ':'
        reference: limit_key
        stage: before_lock
      - deps:
        - limit_key
        method: YT.GetGenericRowByType
        params:
        - action: const
          value: overdraft_client_limits
        - action: get
          key: references.limit_key
        - action: const
          value: string
        reference: user_limit
        stage: before_lock
      - method: YT.GetGenericRowByType
        params:
        - action: const
          value: overdraft_service_limits
        - action: get
          key: input.Event.service_id
        - action: const
          value: uint64
        reference: service_limit
        stage: before_lock
      - method: Accounter.MakeLocation
        params:
        - action: const
          value: accounts
        - action: const
          value: overdraft
        - action: const
          value: overdraft_lock
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        - action: const
          value: service_id
        - action: get
          key: input.Event.service_id
        reference: account_lock_location
        stage: before_lock
      - method: Accounter.MakeLocation
        params:
        - action: const
          value: accounts
        - action: const
          value: overdraft
        - action: const
          value: user_costs
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        - action: const
          value: service_id
        - action: get
          key: input.Event.service_id
        reference: account_costs_location
        stage: before_lock
      - method: Accounter.MakeLocation
        params:
        - action: const
          value: accounts
        - action: const
          value: overdraft
        - action: const
          value: user_credit
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        - action: const
          value: service_id
        - action: get
          key: input.Event.service_id
        reference: account_credit_location
        stage: before_lock
      - method: Accounter.CreateSharedLock
        params:
        - action: get
          key: references.account_lock_location
        reference: lock_state
        stage: lock
      - method: Accounter.GetAccountTurnover
        name: turnover1d
        params:
        - action: get
          key: references.account_costs_location
        - action: get
          key: input.Event.dtFrom
        - action: get
          key: input.Event.dfTo
        reference: turnover1d
        stage: after_lock
      - method: Accounter.GetAccountTurnover
        name: personal_credit_turnover
        params:
        - action: get
          key: references.account_credit_location
        - action: get
          key: input.Event.dtCreditHistoryFrom
        - action: get
          key: input.Event.dfTo
        reference: personal_credit_turnover
        stage: after_lock
      - method: Lib.JoinToString
        name: event_type
        params:
        - action: get
          keys:
          - input.Namespace
          - input.Endpoint
        - action: const
          value: ':'
        reference: event_type
        stage: after_calc
      - deps:
        - event_type
        method: Accounter.WriteCalculatorResponse
        params:
        - action: get
          key: references.event_type
        - action: get
          key: calc_result.Data.Event.transaction_id
        - action: get
          key: calc_result.Data.Event.dt
        - action: get
          key: calc_result.Data.Event
        - action: get
          key: calc_result.Data.ClientTransactions
          nullify_missing: true
        - action: get
          key: references.account_lock_location
        - action: get
          key: references.lock_state.object
        reference: write_batch
        stage: after_calc
      calc_references:
      - user_limit
      - service_limit
      - turnover1d
      - personal_credit_turnover
      - account_costs_location
      - account_credit_location
      - limit_key
      calculator_method: /faas-common-default/call/overdraft-credit/json
      faas:
        function: mlp.mimas.billing.calculator.calculator.OverdraftCalculator
        peerdir: mlp/mimas/billing/calculator
        revision: 9780067
        settings:
          eb:
            project: overdraft_calculator
            tags:
              endpoint: credit
      http_clients:
        saturn:
          base_url: http://localhost
  locks:
    overdraft_lock:
      attributes:
      - service_id
      - client_id
  namespace: overdraft
- accounts:
    act_expense:
      add_attributes:
      - contract_id
      - page_id
      attributes:
      - client_id
      - country
      - currency
    act_income:
      add_attributes:
      - contract_id
      - product_mdh_id
      attributes:
      - client_id
      - country
      - currency
    bonus_general:
      add_attributes:
      - cashback_service
      - topup_cashback_service
      - cashback_type
      - has_plus
      - operator
      attributes:
      - client_id
      - country
      - currency
      - original_act_sender_id
      - original_act_receiver_id
    bonus_spendable:
      add_attributes:
      - cashback_service
      - topup_cashback_service
      - cashback_type
      - has_plus
      - operator
      attributes:
      - client_id
      - country
      - currency
      - original_act_sender_id
      - original_act_receiver_id
  calculator:
    transport:
      baseUrl: https://faas.test.billing.yandex.net
      debug: true
      retries:
        count: 3
  endpoints:
    act-row:
      actions:
      - method: Lib.MakeMap
        name: generate_contract_map
        params:
        - action: const
          value: 1:9:RU:general
        - action: const
          value: "2278752"
        - action: const
          value: 9:1:RU:general
        - action: const
          value: "2278312"
        - action: const
          value: 1:9:RU:spendable
        - action: const
          value: "2278828"
        - action: const
          value: 9:1:RU:spendable
        - action: const
          value: "2297386"
        - action: const
          value: 1:13:RU:general
        - action: const
          value: "2144400"
        - action: const
          value: 13:1:RU:general
        - action: const
          value: "2143932"
        - action: const
          value: 1:13:RU:spendable
        - action: const
          value: "2144410"
        - action: const
          value: 13:1:RU:spendable
        - action: const
          value: "2143970"
        - action: const
          value: 1:24:KZ:general
        - action: const
          value: "4836350"
        - action: const
          value: 24:1:KZ:general
        - action: const
          value: "4840453"
        - action: const
          value: 1:24:KZ:spendable
        - action: const
          value: NO CONTRACT
        - action: const
          value: 24:1:KZ:spendable
        - action: const
          value: NO CONTRACT
        - action: const
          value: 1:30:RU:general
        - action: const
          value: "2145549"
        - action: const
          value: 30:1:RU:general
        - action: const
          value: "2145582"
        - action: const
          value: 1:30:RU:spendable
        - action: const
          value: "2145554"
        - action: const
          value: 30:1:RU:spendable
        - action: const
          value: "2145605"
        - action: const
          value: 1:31:KZ:general
        - action: const
          value: "4836456"
        - action: const
          value: 31:1:KZ:general
        - action: const
          value: "4840461"
        - action: const
          value: 1:31:KZ:spendable
        - action: const
          value: NO CONTRACT
        - action: const
          value: 31:1:KZ:spendable
        - action: const
          value: NO CONTRACT
        - action: const
          value: 1:32:RU:general
        - action: const
          value: "2272531"
        - action: const
          value: 32:1:RU:general
        - action: const
          value: "2272431"
        - action: const
          value: 1:32:RU:spendable
        - action: const
          value: "2272608"
        - action: const
          value: 32:1:RU:spendable
        - action: const
          value: "2272944"
        - action: const
          value: 1:115:BY:general
        - action: const
          value: "4836604"
        - action: const
          value: 115:1:BY:general
        - action: const
          value: "4836549"
        - action: const
          value: 1:115:BY:spendable
        - action: const
          value: NO CONTRACT
        - action: const
          value: 115:1:BY:spendable
        - action: const
          value: NO CONTRACT
        - action: const
          value: 1:121:RU:general
        - action: const
          value: "2145080"
        - action: const
          value: 121:1:RU:general
        - action: const
          value: "2145171"
        - action: const
          value: 1:121:RU:spendable
        - action: const
          value: "2145110"
        - action: const
          value: 121:1:RU:spendable
        - action: const
          value: "2145186"
        - action: const
          value: 1:121:BY:general
        - action: const
          value: "4834603"
        - action: const
          value: 121:1:BY:general
        - action: const
          value: "4834610"
        - action: const
          value: 1:121:BY:spendable
        - action: const
          value: "4834626"
        - action: const
          value: 121:1:BY:spendable
        - action: const
          value: "4834624"
        - action: const
          value: 1:121:KZ:general
        - action: const
          value: "4832817"
        - action: const
          value: 121:1:KZ:general
        - action: const
          value: "4832857"
        - action: const
          value: 1:121:KZ:spendable
        - action: const
          value: "4832909"
        - action: const
          value: 121:1:KZ:spendable
        - action: const
          value: "4832897"
        - action: const
          value: 1:124:RU:general
        - action: const
          value: "2362290"
        - action: const
          value: 124:1:RU:general
        - action: const
          value: "2362222"
        - action: const
          value: 1:124:RU:spendable
        - action: const
          value: "2362332"
        - action: const
          value: 124:1:RU:spendable
        - action: const
          value: "2447190"
        - action: const
          value: 1:129:RU:general
        - action: const
          value: "3750995"
        - action: const
          value: 129:1:RU:general
        - action: const
          value: "3750934"
        - action: const
          value: 1:129:RU:spendable
        - action: const
          value: "3751016"
        - action: const
          value: 129:1:RU:spendable
        - action: const
          value: "3750956"
        - action: const
          value: 1:130:RU:general
        - action: const
          value: "4834689"
        - action: const
          value: 130:1:RU:general
        - action: const
          value: "4834678"
        - action: const
          value: 1:130:RU:spendable
        - action: const
          value: "4834697"
        - action: const
          value: 130:1:RU:spendable
        - action: const
          value: "4837948"
        - action: const
          value: 1:1086:RU:general
        - action: const
          value: "3960856"
        - action: const
          value: 1086:1:RU:general
        - action: const
          value: "3960709"
        - action: const
          value: 1:1086:RU:spendable
        - action: const
          value: "3961002"
        - action: const
          value: 1086:1:RU:spendable
        - action: const
          value: "3966649"
        - action: const
          value: 1:1087:RU:general
        - action: const
          value: "4332960"
        - action: const
          value: 1087:1:RU:general
        - action: const
          value: "4333017"
        - action: const
          value: 1:1087:RU:spendable
        - action: const
          value: "4333111"
        - action: const
          value: 1087:1:RU:spendable
        - action: const
          value: "4334828"
        - action: const
          value: 1:1093:KZ:general
        - action: const
          value: "4836236"
        - action: const
          value: 1093:1:KZ:general
        - action: const
          value: "4840442"
        - action: const
          value: 1:1093:KZ:spendable
        - action: const
          value: NO CONTRACT
        - action: const
          value: 1093:1:KZ:spendable
        - action: const
          value: NO CONTRACT
        - action: const
          value: 1:1094:BY:general
        - action: const
          value: "4834846"
        - action: const
          value: 1094:1:BY:general
        - action: const
          value: "4834738"
        - action: const
          value: 1:1094:BY:spendable
        - action: const
          value: NO CONTRACT
        - action: const
          value: 1094:1:BY:spendable
        - action: const
          value: NO CONTRACT
        - action: const
          value: 1:1098:RU:general
        - action: const
          value: "5032531"
        - action: const
          value: 1098:1:RU:general
        - action: const
          value: NO CONTRACT
        - action: const
          value: 1:1098:RU:spendable
        - action: const
          value: "5032574"
        - action: const
          value: 1098:1:RU:spendable
        - action: const
          value: NO CONTRACT
        - action: const
          value: Нет аналитики
        - action: const
          value: null
        reference: contract_map
        stage: before_lock
      - method: Lib.MakeMap
        name: generate_product_map
        params:
        - action: const
          value: 1:RU:RUB
        - action: const
          value: 90495dc9-3655-4abe-a72d-0e9a795d2e2e
        - action: const
          value: 1:BY:RUB
        - action: const
          value: 78b1f394-975a-49b2-b765-90a896cccd70
        - action: const
          value: 1:BY:USD
        - action: const
          value: 726b2357-b6c0-45f6-abdd-7185d7f09741
        - action: const
          value: 1:KZ:RUB
        - action: const
          value: d743cd47-ef79-4b4c-8c99-41a25eaffea0
        - action: const
          value: 1:KZ:USD
        - action: const
          value: 91915775-e0f5-4c2d-9fdd-1180dae460ae
        - action: const
          value: 9:RU:RUB
        - action: const
          value: 4cb04403-eeaf-45aa-9050-456de0904bdd
        - action: const
          value: 13:RU:RUB
        - action: const
          value: 1550bcfe-9bd9-4c63-9131-8ff9695eebc9
        - action: const
          value: 24:KZ:USD
        - action: const
          value: d896246c-a8fa-4efb-b1bb-8428865ecdb4
        - action: const
          value: 30:RU:RUB
        - action: const
          value: 1af0884c-d982-4967-9e2c-74e0536883d3
        - action: const
          value: 31:KZ:USD
        - action: const
          value: 55deb66b-a7f2-494f-9558-bc161e4577b4
        - action: const
          value: 32:RU:RUB
        - action: const
          value: ac4de971-1b57-4867-8f4c-cf5bfb127b46
        - action: const
          value: 115:BY:USD
        - action: const
          value: 93cf3e14-16a1-42fc-b0b0-dc3e5eca1b4a
        - action: const
          value: 121:RU:RUB
        - action: const
          value: e49776c5-e91c-43d6-99d3-440c59e88d49
        - action: const
          value: 121:BY:RUB
        - action: const
          value: fa850037-04de-4e13-8532-3a4fe815f4dd
        - action: const
          value: 121:KZ:RUB
        - action: const
          value: fe86d7de-cdb9-4895-b680-89931d995f69
        - action: const
          value: 124:RU:RUB
        - action: const
          value: 4b482001-1858-431f-86f2-9fd7224f22aa
        - action: const
          value: 129:RU:RUB
        - action: const
          value: 8db90a9e-561e-4531-a2a7-ceb839d9795c
        - action: const
          value: 130:RU:RUB
        - action: const
          value: af025375-b6e3-4714-969a-2d5700476fc0
        - action: const
          value: 1086:RU:RUB
        - action: const
          value: fddbc6c9-56f1-4f33-8f2e-0e71bcfb4a10
        - action: const
          value: 1087:RU:RUB
        - action: const
          value: 1acb1c3b-92b3-4dce-9df9-e225f0df5b90
        - action: const
          value: 1093:KZ:USD
        - action: const
          value: 7db2ae49-7354-4845-8d04-35796ceeb017
        - action: const
          value: 1094:BY:USD
        - action: const
          value: 07bb77f5-23cb-483e-94b6-fee77b20c68f
        reference: product_map
        stage: before_lock
      - method: Lib.MakeMap
        name: generate_page_map
        params:
        - action: const
          value: 1:RU:RUB
        - action: const
          value: "70401"
        - action: const
          value: 1:BY:RUB
        - action: const
          value: "70415"
        - action: const
          value: 1:BY:USD
        - action: const
          value: "70417"
        - action: const
          value: 1:KZ:RUB
        - action: const
          value: "70416"
        - action: const
          value: 1:KZ:USD
        - action: const
          value: "70418"
        - action: const
          value: 9:RU:RUB
        - action: const
          value: "70406"
        - action: const
          value: 13:RU:RUB
        - action: const
          value: "70402"
        - action: const
          value: 24:KZ:USD
        - action: const
          value: "70419"
        - action: const
          value: 24:KZ:RUB
        - action: const
          value: ""
        - action: const
          value: 30:RU:RUB
        - action: const
          value: "70403"
        - action: const
          value: 31:KZ:USD
        - action: const
          value: "70420"
        - action: const
          value: 31:KZ:RUB
        - action: const
          value: ""
        - action: const
          value: 32:RU:RUB
        - action: const
          value: "70407"
        - action: const
          value: 115:BY:USD
        - action: const
          value: "70421"
        - action: const
          value: 115:BY:RUB
        - action: const
          value: ""
        - action: const
          value: 121:RU:RUB
        - action: const
          value: "70404"
        - action: const
          value: 121:BY:RUB
        - action: const
          value: "70413"
        - action: const
          value: 121:KZ:RUB
        - action: const
          value: "70414"
        - action: const
          value: 124:RU:RUB
        - action: const
          value: "70408"
        - action: const
          value: 129:RU:RUB
        - action: const
          value: "70409"
        - action: const
          value: 130:RU:RUB
        - action: const
          value: "70412"
        - action: const
          value: 1086:RU:RUB
        - action: const
          value: "70410"
        - action: const
          value: 1087:RU:RUB
        - action: const
          value: "70411"
        - action: const
          value: 1093:KZ:USD
        - action: const
          value: "70422"
        - action: const
          value: 1093:KZ:RUB
        - action: const
          value: ""
        - action: const
          value: 1094:BY:USD
        - action: const
          value: "70423"
        - action: const
          value: 1094:BY:RUB
        - action: const
          value: ""
        - action: const
          value: 1098:RU:RUB
        - action: const
          value: "70424"
        reference: page_map
        stage: before_lock
      - method: Lib.MakeMap
        name: generate_currency_iso_map
        params:
        - action: const
          value: "810"
        - action: const
          value: RUB
        - action: const
          value: "643"
        - action: const
          value: RUB
        - action: const
          value: "398"
        - action: const
          value: KZT
        - action: const
          value: "978"
        - action: const
          value: EUR
        - action: const
          value: "933"
        - action: const
          value: BYN
        - action: const
          value: "840"
        - action: const
          value: USD
        reference: currency_iso_map
        stage: before_lock
      - method: Lib.JoinToString
        name: event_type
        params:
        - action: get
          keys:
          - input.Endpoint
          - input.Event.act_type
        - action: const
          value: ':'
        reference: event_type
        stage: before_lock
      - method: Lib.JoinToString
        name: generate_map_contract_name
        params:
        - action: get
          keys:
          - input.Event.act_sender_id
          - input.Event.act_receiver_id
          - input.Event.country
          - input.Event.act_type
        - action: const
          value: ':'
        reference: map_contract_name
        stage: before_lock
      - deps:
        - generate_map_contract_name
        method: Lib.If
        name: check_act_sender_id_for_map_contract_name
        params:
        - action: get
          key: input.Event.act_sender_id
        - action: const
          value: ==
        - action: const
          value: Нет аналитики
        - action: const
          value: Нет аналитики
        - action: get
          key: references.map_contract_name
        reference: map_contract_name
        stage: before_lock
      - deps:
        - check_act_sender_id_for_map_contract_name
        method: Lib.If
        name: check_act_receiver_id_for_map_contract_name
        params:
        - action: get
          key: input.Event.act_receiver_id
        - action: const
          value: ==
        - action: const
          value: Нет аналитики
        - action: const
          value: Нет аналитики
        - action: get
          key: references.map_contract_name
        reference: map_contract_name
        stage: before_lock
      - deps:
        - generate_contract_map
        - check_act_receiver_id_for_map_contract_name
        method: Lib.MakeMap
        name: extract_contract_id
        params:
        - action: const
          value: contract_id
        - action: extract
          path: $.references.contract_map[$.references.map_contract_name]
        reference: extract_contract_id
        stage: before_lock
      - deps:
        - extract_contract_id
        method: Lib.If
        name: get_contract_id
        params:
        - action: get
          key: references.extract_contract_id.contract_id
        - action: const
          value: ==
        - action: const
          value: NO CONTRACT
        - action: const
          value: null
        - action: get
          key: references.extract_contract_id.contract_id
        reference: contract_id
        stage: before_lock
      - deps:
        - get_contract_id
        method: YT.GetContracts
        name: get_contract
        params:
        - action: get
          keys:
          - references.contract_id
        reference: contract
        stage: before_lock
      - deps:
        - get_contract
        method: Lib.If
        name: nvl_client_id
        params:
        - action: get
          key: references.contract.0.ClientID
          nullify_missing: true
        - action: const
          value: ==
        - action: const
          value: null
        - action: const
          value: -1
        - action: get
          key: references.contract.0.ClientID
          nullify_missing: true
        reference: nvl_client_id
        stage: before_lock
      - deps:
        - generate_currency_iso_map
        - get_contract
        method: Lib.MakeMap
        name: get_contract_currency
        params:
        - action: const
          value: currency
        - action: extract
          nullify_missing: true
          path: $.references.currency_iso_map[$.references.contract[0].collaterals[0].currency]
        reference: contract_currency
        stage: before_lock
      - deps:
        - get_contract_currency
        method: Lib.JoinToString
        name: generate_map_product_name
        params:
        - action: get
          keys:
          - input.Event.act_sender_id
          - input.Event.country
          - references.contract_currency.currency
        - action: const
          value: ':'
        reference: map_product_name
        stage: before_lock
      - deps:
        - generate_map_product_name
        method: YT.GetGenericRowByType
        name: get_mdh_product
        params:
        - action: const
          value: mdh_products
        - action: extract
          nullify_missing: true
          path: $.references.product_map[$.references.map_product_name]
        - action: const
          value: string
        reference: mdh_product
        stage: before_lock
      - deps:
        - get_contract_currency
        method: Lib.JoinToString
        name: generate_map_page_name
        params:
        - action: get
          keys:
          - input.Event.original_act_sender_id
          - input.Event.country
          - references.contract_currency.currency
        - action: const
          value: ':'
        reference: map_page_name
        stage: before_lock
      - deps:
        - generate_contract_map
        - generate_product_map
        - generate_page_map
        - get_contract_id
        - generate_map_product_name
        - generate_map_page_name
        method: Lib.MakeMap
        name: generate_map_current_data
        params:
        - action: const
          value: contract_id
        - action: get
          key: references.contract_id
        - action: const
          value: product_mdh_id
        - action: extract
          nullify_missing: true
          path: $.references.product_map[$.references.map_product_name]
        - action: const
          value: page_id
        - action: extract
          nullify_missing: true
          path: $.references.page_map[$.references.map_page_name]
        reference: map_data
        stage: before_lock
      - method: Lib.If
        name: get_act_sender_id
        params:
        - action: get
          key: input.Event.act_sender_id
        - action: const
          value: ==
        - action: const
          value: Нет аналитики
        - action: const
          value: null
        - action: get
          key: input.Event.act_sender_id
        reference: act_sender_id
        stage: before_lock
      - deps:
        - get_act_sender_id
        method: YT.GetGenericRowByType
        params:
        - action: const
          value: firm_tax
        - action: get
          key: references.act_sender_id
        - action: const
          value: int64
        reference: act_sender_firm
        stage: before_lock
      - method: YT.GetIsoCurrencyRate
        name: get_bonus_to_rub_currency_rate
        params:
        - action: const
          value: cbr
        - action: get
          key: input.Event.currency
        - action: const
          value: RUB
        - action: get
          key: input.Event.act_finish_timestamp
        reference: bonus_to_rub_currency_rate
        stage: before_lock
      - deps:
        - get_contract_currency
        method: Lib.If
        name: nvl_contract_currency
        params:
        - action: get
          key: references.contract_currency.currency
        - action: const
          value: ==
        - action: const
          value: null
        - action: const
          value: RUB
        - action: get
          key: references.contract_currency.currency
        reference: nvl_contract_currency
        stage: before_lock
      - deps:
        - nvl_contract_currency
        - generate_currency_iso_map
        method: YT.GetIsoCurrencyRate
        name: get_rub_to_contract_currency_rate
        params:
        - action: const
          value: cbr
        - action: const
          value: RUB
        - action: get
          key: references.nvl_contract_currency
        - action: get
          key: input.Event.act_finish_timestamp
        reference: rub_to_contract_currency_rate
        stage: before_lock
      - deps:
        - get_contract
        - nvl_client_id
        - generate_map_current_data
        method: Accounter.MakeDatedLocation
        name: generate_bonus_general_account_location
        params:
        - action: const
          value: accounts
        - action: const
          value: plus
        - action: const
          value: bonus_general
        - action: get
          key: input.Event.act_finish_timestamp
        - action: const
          value: client_id
        - action: get
          key: references.nvl_client_id
        - action: const
          value: country
        - action: get
          key: input.Event.country
        - action: const
          value: currency
        - action: get
          key: input.Event.currency
        - action: const
          value: original_act_sender_id
        - action: get
          key: input.Event.original_act_sender_id
        - action: const
          value: original_act_receiver_id
        - action: get
          key: input.Event.original_act_receiver_id
        - action: const
          value: cashback_service
        - action: get
          key: input.Event.cashback_service
        - action: const
          value: topup_cashback_service
        - action: get
          key: input.Event.topup_cashback_service
        - action: const
          value: cashback_type
        - action: get
          key: input.Event.cashback_type
        - action: const
          value: has_plus
        - action: get
          key: input.Event.has_plus
        - action: const
          value: operator
        - action: const
          value: yandex
        reference: bonus_general_account_location
        stage: before_lock
      - deps:
        - get_contract
        - nvl_client_id
        - generate_map_current_data
        method: Accounter.MakeDatedLocation
        name: generate_bonus_spendable_account_location
        params:
        - action: const
          value: accounts
        - action: const
          value: plus
        - action: const
          value: bonus_spendable
        - action: get
          key: input.Event.act_finish_timestamp
        - action: const
          value: client_id
        - action: get
          key: references.nvl_client_id
        - action: const
          value: country
        - action: get
          key: input.Event.country
        - action: const
          value: currency
        - action: get
          key: input.Event.currency
        - action: const
          value: original_act_sender_id
        - action: get
          key: input.Event.original_act_sender_id
        - action: const
          value: original_act_receiver_id
        - action: get
          key: input.Event.original_act_receiver_id
        - action: const
          value: cashback_service
        - action: get
          key: input.Event.cashback_service
        - action: const
          value: topup_cashback_service
        - action: get
          key: input.Event.topup_cashback_service
        - action: const
          value: cashback_type
        - action: get
          key: input.Event.cashback_type
        - action: const
          value: has_plus
        - action: get
          key: input.Event.has_plus
        - action: const
          value: operator
        - action: const
          value: yandex
        reference: bonus_spendable_account_location
        stage: before_lock
      - deps:
        - get_contract
        - nvl_client_id
        - generate_map_current_data
        method: Accounter.MakeDatedLocation
        name: generate_act_income_account_location
        params:
        - action: const
          value: accounts
        - action: const
          value: plus
        - action: const
          value: act_income
        - action: get
          key: input.Event.act_finish_timestamp
        - action: const
          value: client_id
        - action: get
          key: references.nvl_client_id
        - action: const
          value: country
        - action: get
          key: input.Event.country
        - action: const
          value: currency
        - action: get
          key: input.Event.currency
        - action: const
          value: contract_id
        - action: set_null
        - action: const
          value: product_mdh_id
        - action: get
          key: references.map_data.product_mdh_id
        reference: act_income_account_location
        stage: before_lock
      - deps:
        - get_contract
        - nvl_client_id
        - generate_map_current_data
        method: Accounter.MakeDatedLocation
        name: generate_act_expense_account_location
        params:
        - action: const
          value: accounts
        - action: const
          value: plus
        - action: const
          value: act_expense
        - action: get
          key: input.Event.act_finish_timestamp
        - action: const
          value: client_id
        - action: get
          key: references.nvl_client_id
        - action: const
          value: country
        - action: get
          key: input.Event.country
        - action: const
          value: currency
        - action: get
          key: input.Event.currency
        - action: const
          value: contract_id
        - action: set_null
        - action: const
          value: page_id
        - action: get
          key: references.map_data.page_id
        reference: act_expense_account_location
        stage: before_lock
      - deps:
        - generate_act_income_account_location
        - generate_act_expense_account_location
        - generate_bonus_general_account_location
        - generate_bonus_spendable_account_location
        method: Lib.MakeMap
        params:
        - action: const
          value: balances
        - action: get
          keys:
          - references.act_income_account_location
          - references.act_expense_account_location
          - references.bonus_general_account_location
          - references.bonus_spendable_account_location
        reference: read_batch_params
        stage: before_lock
      - deps:
        - get_contract
        - nvl_client_id
        method: Accounter.MakeLocation
        name: generate_lock_location
        params:
        - action: const
          value: locks
        - action: const
          value: plus
        - action: const
          value: client_lock
        - action: const
          value: client_id
        - action: get
          key: references.nvl_client_id
        reference: lock_location
        stage: before_lock
      - method: Accounter.CreateSharedLock
        params:
        - action: get
          key: references.lock_location
        reference: lock_state
        stage: lock
      - method: Accounter.ReadBatch
        name: accounts
        params:
        - action: get
          key: references.read_batch_params
        reference: accounts
        stage: after_lock
      - method: Accounter.WriteCalculatorResponse
        name: write_transactions_batch
        params:
        - action: get
          key: references.event_type
        - action: get
          key: calc_result.Data.Event.tariffer_payload.external_id
        - action: get
          key: calc_result.Data.Event.tariffer_payload.common_ts
        - action: get
          key: calc_result.Data.Event
        - action: get
          key: calc_result.Data.ClientTransactions.0.transactions
          nullify_missing: true
        - action: get
          key: references.lock_location
        - action: get
          key: references.lock_state.object
        reference: write_transactions_batch
        stage: after_calc
      calc_references:
      - map_data
      - contract
      - act_sender_firm
      - accounts
      - bonus_to_rub_currency_rate
      - rub_to_contract_currency_rate
      - contract_currency
      - mdh_product
      calculator_method: /faas-common-default/call/plus-act-row/json
      faas:
        function: billing.hot.calculators.plus.faas.entrypoint.act_row
        instance: default
        peerdir: billing/hot/calculators/plus
        revision: 9780067
        settings:
          eb:
            project: plus_calculator
            tags:
              endpoint: act-row
    act-row-check:
      actions:
      - method: Lib.MakeMap
        name: generate_contract_map
        params:
        - action: const
          value: 1:9:RU:general
        - action: const
          value: "2278752"
        - action: const
          value: 9:1:RU:general
        - action: const
          value: "2278312"
        - action: const
          value: 1:9:RU:spendable
        - action: const
          value: "2278828"
        - action: const
          value: 9:1:RU:spendable
        - action: const
          value: "2297386"
        - action: const
          value: 1:13:RU:general
        - action: const
          value: "2144400"
        - action: const
          value: 13:1:RU:general
        - action: const
          value: "2143932"
        - action: const
          value: 1:13:RU:spendable
        - action: const
          value: "2144410"
        - action: const
          value: 13:1:RU:spendable
        - action: const
          value: "2143970"
        - action: const
          value: 1:24:KZ:general
        - action: const
          value: "4836350"
        - action: const
          value: 24:1:KZ:general
        - action: const
          value: "4840453"
        - action: const
          value: 1:24:KZ:spendable
        - action: const
          value: NO CONTRACT
        - action: const
          value: 24:1:KZ:spendable
        - action: const
          value: NO CONTRACT
        - action: const
          value: 1:30:RU:general
        - action: const
          value: "2145549"
        - action: const
          value: 30:1:RU:general
        - action: const
          value: "2145582"
        - action: const
          value: 1:30:RU:spendable
        - action: const
          value: "2145554"
        - action: const
          value: 30:1:RU:spendable
        - action: const
          value: "2145605"
        - action: const
          value: 1:31:KZ:general
        - action: const
          value: "4836456"
        - action: const
          value: 31:1:KZ:general
        - action: const
          value: "4840461"
        - action: const
          value: 1:31:KZ:spendable
        - action: const
          value: NO CONTRACT
        - action: const
          value: 31:1:KZ:spendable
        - action: const
          value: NO CONTRACT
        - action: const
          value: 1:32:RU:general
        - action: const
          value: "2272531"
        - action: const
          value: 32:1:RU:general
        - action: const
          value: "2272431"
        - action: const
          value: 1:32:RU:spendable
        - action: const
          value: "2272608"
        - action: const
          value: 32:1:RU:spendable
        - action: const
          value: "2272944"
        - action: const
          value: 1:115:BY:general
        - action: const
          value: "4836604"
        - action: const
          value: 115:1:BY:general
        - action: const
          value: "4836549"
        - action: const
          value: 1:115:BY:spendable
        - action: const
          value: NO CONTRACT
        - action: const
          value: 115:1:BY:spendable
        - action: const
          value: NO CONTRACT
        - action: const
          value: 1:121:RU:general
        - action: const
          value: "2145080"
        - action: const
          value: 121:1:RU:general
        - action: const
          value: "2145171"
        - action: const
          value: 1:121:RU:spendable
        - action: const
          value: "2145110"
        - action: const
          value: 121:1:RU:spendable
        - action: const
          value: "2145186"
        - action: const
          value: 1:121:BY:general
        - action: const
          value: "4834603"
        - action: const
          value: 121:1:BY:general
        - action: const
          value: "4834610"
        - action: const
          value: 1:121:BY:spendable
        - action: const
          value: "4834626"
        - action: const
          value: 121:1:BY:spendable
        - action: const
          value: "4834624"
        - action: const
          value: 1:121:KZ:general
        - action: const
          value: "4832817"
        - action: const
          value: 121:1:KZ:general
        - action: const
          value: "4832857"
        - action: const
          value: 1:121:KZ:spendable
        - action: const
          value: "4832909"
        - action: const
          value: 121:1:KZ:spendable
        - action: const
          value: "4832897"
        - action: const
          value: 1:124:RU:general
        - action: const
          value: "2362290"
        - action: const
          value: 124:1:RU:general
        - action: const
          value: "2362222"
        - action: const
          value: 1:124:RU:spendable
        - action: const
          value: "2362332"
        - action: const
          value: 124:1:RU:spendable
        - action: const
          value: "2447190"
        - action: const
          value: 1:129:RU:general
        - action: const
          value: "3750995"
        - action: const
          value: 129:1:RU:general
        - action: const
          value: "3750934"
        - action: const
          value: 1:129:RU:spendable
        - action: const
          value: "3751016"
        - action: const
          value: 129:1:RU:spendable
        - action: const
          value: "3750956"
        - action: const
          value: 1:130:RU:general
        - action: const
          value: "4834689"
        - action: const
          value: 130:1:RU:general
        - action: const
          value: "4834678"
        - action: const
          value: 1:130:RU:spendable
        - action: const
          value: "4834697"
        - action: const
          value: 130:1:RU:spendable
        - action: const
          value: "4837948"
        - action: const
          value: 1:1086:RU:general
        - action: const
          value: "3960856"
        - action: const
          value: 1086:1:RU:general
        - action: const
          value: "3960709"
        - action: const
          value: 1:1086:RU:spendable
        - action: const
          value: "3961002"
        - action: const
          value: 1086:1:RU:spendable
        - action: const
          value: "3966649"
        - action: const
          value: 1:1087:RU:general
        - action: const
          value: "4332960"
        - action: const
          value: 1087:1:RU:general
        - action: const
          value: "4333017"
        - action: const
          value: 1:1087:RU:spendable
        - action: const
          value: "4333111"
        - action: const
          value: 1087:1:RU:spendable
        - action: const
          value: "4334828"
        - action: const
          value: 1:1093:KZ:general
        - action: const
          value: "4836236"
        - action: const
          value: 1093:1:KZ:general
        - action: const
          value: "4840442"
        - action: const
          value: 1:1093:KZ:spendable
        - action: const
          value: NO CONTRACT
        - action: const
          value: 1093:1:KZ:spendable
        - action: const
          value: NO CONTRACT
        - action: const
          value: 1:1094:BY:general
        - action: const
          value: "4834846"
        - action: const
          value: 1094:1:BY:general
        - action: const
          value: "4834738"
        - action: const
          value: 1:1094:BY:spendable
        - action: const
          value: NO CONTRACT
        - action: const
          value: 1094:1:BY:spendable
        - action: const
          value: NO CONTRACT
        - action: const
          value: 1:1098:RU:general
        - action: const
          value: "5032531"
        - action: const
          value: 1098:1:RU:general
        - action: const
          value: NO CONTRACT
        - action: const
          value: 1:1098:RU:spendable
        - action: const
          value: "5032574"
        - action: const
          value: 1098:1:RU:spendable
        - action: const
          value: NO CONTRACT
        - action: const
          value: Нет аналитики
        - action: const
          value: null
        reference: contract_map
        stage: before_lock
      - method: Lib.MakeMap
        name: generate_product_map
        params:
        - action: const
          value: 1:RU:RUB
        - action: const
          value: 90495dc9-3655-4abe-a72d-0e9a795d2e2e
        - action: const
          value: 1:BY:RUB
        - action: const
          value: 78b1f394-975a-49b2-b765-90a896cccd70
        - action: const
          value: 1:BY:USD
        - action: const
          value: 726b2357-b6c0-45f6-abdd-7185d7f09741
        - action: const
          value: 1:KZ:RUB
        - action: const
          value: d743cd47-ef79-4b4c-8c99-41a25eaffea0
        - action: const
          value: 1:KZ:USD
        - action: const
          value: 91915775-e0f5-4c2d-9fdd-1180dae460ae
        - action: const
          value: 9:RU:RUB
        - action: const
          value: 4cb04403-eeaf-45aa-9050-456de0904bdd
        - action: const
          value: 13:RU:RUB
        - action: const
          value: 1550bcfe-9bd9-4c63-9131-8ff9695eebc9
        - action: const
          value: 24:KZ:USD
        - action: const
          value: d896246c-a8fa-4efb-b1bb-8428865ecdb4
        - action: const
          value: 30:RU:RUB
        - action: const
          value: 1af0884c-d982-4967-9e2c-74e0536883d3
        - action: const
          value: 31:KZ:USD
        - action: const
          value: 55deb66b-a7f2-494f-9558-bc161e4577b4
        - action: const
          value: 32:RU:RUB
        - action: const
          value: ac4de971-1b57-4867-8f4c-cf5bfb127b46
        - action: const
          value: 115:BY:USD
        - action: const
          value: 93cf3e14-16a1-42fc-b0b0-dc3e5eca1b4a
        - action: const
          value: 121:RU:RUB
        - action: const
          value: e49776c5-e91c-43d6-99d3-440c59e88d49
        - action: const
          value: 121:BY:RUB
        - action: const
          value: fa850037-04de-4e13-8532-3a4fe815f4dd
        - action: const
          value: 121:KZ:RUB
        - action: const
          value: fe86d7de-cdb9-4895-b680-89931d995f69
        - action: const
          value: 124:RU:RUB
        - action: const
          value: 4b482001-1858-431f-86f2-9fd7224f22aa
        - action: const
          value: 129:RU:RUB
        - action: const
          value: 8db90a9e-561e-4531-a2a7-ceb839d9795c
        - action: const
          value: 130:RU:RUB
        - action: const
          value: af025375-b6e3-4714-969a-2d5700476fc0
        - action: const
          value: 1086:RU:RUB
        - action: const
          value: fddbc6c9-56f1-4f33-8f2e-0e71bcfb4a10
        - action: const
          value: 1087:RU:RUB
        - action: const
          value: 1acb1c3b-92b3-4dce-9df9-e225f0df5b90
        - action: const
          value: 1093:KZ:USD
        - action: const
          value: 7db2ae49-7354-4845-8d04-35796ceeb017
        - action: const
          value: 1094:BY:USD
        - action: const
          value: 07bb77f5-23cb-483e-94b6-fee77b20c68f
        reference: product_map
        stage: before_lock
      - method: Lib.MakeMap
        name: generate_page_map
        params:
        - action: const
          value: 1:RU:RUB
        - action: const
          value: "70401"
        - action: const
          value: 1:BY:RUB
        - action: const
          value: "70415"
        - action: const
          value: 1:BY:USD
        - action: const
          value: "70417"
        - action: const
          value: 1:KZ:RUB
        - action: const
          value: "70416"
        - action: const
          value: 1:KZ:USD
        - action: const
          value: "70418"
        - action: const
          value: 9:RU:RUB
        - action: const
          value: "70406"
        - action: const
          value: 13:RU:RUB
        - action: const
          value: "70402"
        - action: const
          value: 24:KZ:USD
        - action: const
          value: "70419"
        - action: const
          value: 24:KZ:RUB
        - action: const
          value: ""
        - action: const
          value: 30:RU:RUB
        - action: const
          value: "70403"
        - action: const
          value: 31:KZ:USD
        - action: const
          value: "70420"
        - action: const
          value: 31:KZ:RUB
        - action: const
          value: ""
        - action: const
          value: 32:RU:RUB
        - action: const
          value: "70407"
        - action: const
          value: 115:BY:USD
        - action: const
          value: "70421"
        - action: const
          value: 115:BY:RUB
        - action: const
          value: ""
        - action: const
          value: 121:RU:RUB
        - action: const
          value: "70404"
        - action: const
          value: 121:BY:RUB
        - action: const
          value: "70413"
        - action: const
          value: 121:KZ:RUB
        - action: const
          value: "70414"
        - action: const
          value: 124:RU:RUB
        - action: const
          value: "70408"
        - action: const
          value: 129:RU:RUB
        - action: const
          value: "70409"
        - action: const
          value: 130:RU:RUB
        - action: const
          value: "70412"
        - action: const
          value: 1086:RU:RUB
        - action: const
          value: "70410"
        - action: const
          value: 1087:RU:RUB
        - action: const
          value: "70411"
        - action: const
          value: 1093:KZ:USD
        - action: const
          value: "70422"
        - action: const
          value: 1093:KZ:RUB
        - action: const
          value: ""
        - action: const
          value: 1094:BY:USD
        - action: const
          value: "70423"
        - action: const
          value: 1094:BY:RUB
        - action: const
          value: ""
        - action: const
          value: 1098:RU:RUB
        - action: const
          value: "70424"
        reference: page_map
        stage: before_lock
      - method: Lib.MakeMap
        name: generate_currency_iso_map
        params:
        - action: const
          value: "810"
        - action: const
          value: RUB
        - action: const
          value: "643"
        - action: const
          value: RUB
        - action: const
          value: "398"
        - action: const
          value: KZT
        - action: const
          value: "978"
        - action: const
          value: EUR
        - action: const
          value: "933"
        - action: const
          value: BYN
        - action: const
          value: "840"
        - action: const
          value: USD
        reference: currency_iso_map
        stage: before_lock
      - method: Lib.JoinToString
        name: event_type
        params:
        - action: get
          keys:
          - input.Endpoint
          - input.Event.act_type
        - action: const
          value: ':'
        reference: event_type
        stage: before_lock
      - method: Lib.JoinToString
        name: generate_map_contract_name
        params:
        - action: get
          keys:
          - input.Event.act_sender_id
          - input.Event.act_receiver_id
          - input.Event.country
          - input.Event.act_type
        - action: const
          value: ':'
        reference: map_contract_name
        stage: before_lock
      - deps:
        - generate_map_contract_name
        method: Lib.If
        name: check_act_sender_id_for_map_contract_name
        params:
        - action: get
          key: input.Event.act_sender_id
        - action: const
          value: ==
        - action: const
          value: Нет аналитики
        - action: const
          value: Нет аналитики
        - action: get
          key: references.map_contract_name
        reference: map_contract_name
        stage: before_lock
      - deps:
        - check_act_sender_id_for_map_contract_name
        method: Lib.If
        name: check_act_receiver_id_for_map_contract_name
        params:
        - action: get
          key: input.Event.act_receiver_id
        - action: const
          value: ==
        - action: const
          value: Нет аналитики
        - action: const
          value: Нет аналитики
        - action: get
          key: references.map_contract_name
        reference: map_contract_name
        stage: before_lock
      - deps:
        - generate_contract_map
        - check_act_receiver_id_for_map_contract_name
        method: Lib.MakeMap
        name: extract_contract_id
        params:
        - action: const
          value: contract_id
        - action: extract
          path: $.references.contract_map[$.references.map_contract_name]
        reference: extract_contract_id
        stage: before_lock
      - deps:
        - extract_contract_id
        method: Lib.If
        name: get_contract_id
        params:
        - action: get
          key: references.extract_contract_id.contract_id
        - action: const
          value: ==
        - action: const
          value: NO CONTRACT
        - action: const
          value: null
        - action: get
          key: references.extract_contract_id.contract_id
        reference: contract_id
        stage: before_lock
      - deps:
        - get_contract_id
        method: YT.GetContracts
        name: get_contract
        params:
        - action: get
          keys:
          - references.contract_id
        reference: contract
        stage: before_lock
      - deps:
        - get_contract
        method: Lib.If
        name: nvl_client_id
        params:
        - action: get
          key: references.contract.0.ClientID
          nullify_missing: true
        - action: const
          value: ==
        - action: const
          value: null
        - action: const
          value: -1
        - action: get
          key: references.contract.0.ClientID
          nullify_missing: true
        reference: nvl_client_id
        stage: before_lock
      - deps:
        - generate_currency_iso_map
        - get_contract
        method: Lib.MakeMap
        name: get_contract_currency
        params:
        - action: const
          value: currency
        - action: extract
          nullify_missing: true
          path: $.references.currency_iso_map[$.references.contract[0].collaterals[0].currency]
        reference: contract_currency
        stage: before_lock
      - deps:
        - get_contract_currency
        method: Lib.JoinToString
        name: generate_map_product_name
        params:
        - action: get
          keys:
          - input.Event.act_sender_id
          - input.Event.country
          - references.contract_currency.currency
        - action: const
          value: ':'
        reference: map_product_name
        stage: before_lock
      - deps:
        - generate_map_product_name
        method: YT.GetGenericRowByType
        name: get_mdh_product
        params:
        - action: const
          value: mdh_products
        - action: extract
          nullify_missing: true
          path: $.references.product_map[$.references.map_product_name]
        - action: const
          value: string
        reference: mdh_product
        stage: before_lock
      - deps:
        - get_contract_currency
        method: Lib.JoinToString
        name: generate_map_page_name
        params:
        - action: get
          keys:
          - input.Event.original_act_sender_id
          - input.Event.country
          - references.contract_currency.currency
        - action: const
          value: ':'
        reference: map_page_name
        stage: before_lock
      - deps:
        - generate_contract_map
        - generate_product_map
        - generate_page_map
        - get_contract_id
        - generate_map_product_name
        - generate_map_page_name
        method: Lib.MakeMap
        name: generate_map_current_data
        params:
        - action: const
          value: contract_id
        - action: get
          key: references.contract_id
        - action: const
          value: product_mdh_id
        - action: extract
          nullify_missing: true
          path: $.references.product_map[$.references.map_product_name]
        - action: const
          value: page_id
        - action: extract
          nullify_missing: true
          path: $.references.page_map[$.references.map_page_name]
        reference: map_data
        stage: before_lock
      - method: Lib.If
        name: get_act_sender_id
        params:
        - action: get
          key: input.Event.act_sender_id
        - action: const
          value: ==
        - action: const
          value: Нет аналитики
        - action: const
          value: null
        - action: get
          key: input.Event.act_sender_id
        reference: act_sender_id
        stage: before_lock
      - deps:
        - get_act_sender_id
        method: YT.GetGenericRowByType
        params:
        - action: const
          value: firm_tax
        - action: get
          key: references.act_sender_id
        - action: const
          value: int64
        reference: act_sender_firm
        stage: before_lock
      - method: YT.GetIsoCurrencyRate
        name: get_bonus_to_rub_currency_rate
        params:
        - action: const
          value: cbr
        - action: get
          key: input.Event.currency
        - action: const
          value: RUB
        - action: get
          key: input.Event.act_finish_timestamp
        reference: bonus_to_rub_currency_rate
        stage: before_lock
      - deps:
        - get_contract_currency
        method: Lib.If
        name: nvl_contract_currency
        params:
        - action: get
          key: references.contract_currency.currency
        - action: const
          value: ==
        - action: const
          value: null
        - action: const
          value: RUB
        - action: get
          key: references.contract_currency.currency
        reference: nvl_contract_currency
        stage: before_lock
      - deps:
        - nvl_contract_currency
        - generate_currency_iso_map
        method: YT.GetIsoCurrencyRate
        name: get_rub_to_contract_currency_rate
        params:
        - action: const
          value: cbr
        - action: const
          value: RUB
        - action: get
          key: references.nvl_contract_currency
        - action: get
          key: input.Event.act_finish_timestamp
        reference: rub_to_contract_currency_rate
        stage: before_lock
      - deps:
        - get_contract
        - nvl_client_id
        - generate_map_current_data
        method: Accounter.MakeDatedLocation
        name: generate_bonus_general_account_location
        params:
        - action: const
          value: accounts
        - action: const
          value: plus
        - action: const
          value: bonus_general
        - action: get
          key: input.Event.act_finish_timestamp
        - action: const
          value: client_id
        - action: get
          key: references.nvl_client_id
        - action: const
          value: country
        - action: get
          key: input.Event.country
        - action: const
          value: currency
        - action: get
          key: input.Event.currency
        - action: const
          value: original_act_sender_id
        - action: get
          key: input.Event.original_act_sender_id
        - action: const
          value: original_act_receiver_id
        - action: get
          key: input.Event.original_act_receiver_id
        - action: const
          value: cashback_service
        - action: get
          key: input.Event.cashback_service
        - action: const
          value: topup_cashback_service
        - action: get
          key: input.Event.topup_cashback_service
        - action: const
          value: cashback_type
        - action: get
          key: input.Event.cashback_type
        - action: const
          value: has_plus
        - action: get
          key: input.Event.has_plus
        - action: const
          value: operator
        - action: const
          value: yandex
        reference: bonus_general_account_location
        stage: before_lock
      - deps:
        - get_contract
        - nvl_client_id
        - generate_map_current_data
        method: Accounter.MakeDatedLocation
        name: generate_bonus_spendable_account_location
        params:
        - action: const
          value: accounts
        - action: const
          value: plus
        - action: const
          value: bonus_spendable
        - action: get
          key: input.Event.act_finish_timestamp
        - action: const
          value: client_id
        - action: get
          key: references.nvl_client_id
        - action: const
          value: country
        - action: get
          key: input.Event.country
        - action: const
          value: currency
        - action: get
          key: input.Event.currency
        - action: const
          value: original_act_sender_id
        - action: get
          key: input.Event.original_act_sender_id
        - action: const
          value: original_act_receiver_id
        - action: get
          key: input.Event.original_act_receiver_id
        - action: const
          value: cashback_service
        - action: get
          key: input.Event.cashback_service
        - action: const
          value: topup_cashback_service
        - action: get
          key: input.Event.topup_cashback_service
        - action: const
          value: cashback_type
        - action: get
          key: input.Event.cashback_type
        - action: const
          value: has_plus
        - action: get
          key: input.Event.has_plus
        - action: const
          value: operator
        - action: const
          value: yandex
        reference: bonus_spendable_account_location
        stage: before_lock
      - deps:
        - get_contract
        - nvl_client_id
        - generate_map_current_data
        method: Accounter.MakeDatedLocation
        name: generate_act_income_account_location
        params:
        - action: const
          value: accounts
        - action: const
          value: plus
        - action: const
          value: act_income
        - action: get
          key: input.Event.act_finish_timestamp
        - action: const
          value: client_id
        - action: get
          key: references.nvl_client_id
        - action: const
          value: country
        - action: get
          key: input.Event.country
        - action: const
          value: currency
        - action: get
          key: input.Event.currency
        - action: const
          value: contract_id
        - action: set_null
        - action: const
          value: product_mdh_id
        - action: get
          key: references.map_data.product_mdh_id
        reference: act_income_account_location
        stage: before_lock
      - deps:
        - get_contract
        - nvl_client_id
        - generate_map_current_data
        method: Accounter.MakeDatedLocation
        name: generate_act_expense_account_location
        params:
        - action: const
          value: accounts
        - action: const
          value: plus
        - action: const
          value: act_expense
        - action: get
          key: input.Event.act_finish_timestamp
        - action: const
          value: client_id
        - action: get
          key: references.nvl_client_id
        - action: const
          value: country
        - action: get
          key: input.Event.country
        - action: const
          value: currency
        - action: get
          key: input.Event.currency
        - action: const
          value: contract_id
        - action: set_null
        - action: const
          value: page_id
        - action: get
          key: references.map_data.page_id
        reference: act_expense_account_location
        stage: before_lock
      - deps:
        - generate_act_income_account_location
        - generate_act_expense_account_location
        - generate_bonus_general_account_location
        - generate_bonus_spendable_account_location
        method: Lib.MakeMap
        params:
        - action: const
          value: balances
        - action: get
          keys:
          - references.act_income_account_location
          - references.act_expense_account_location
          - references.bonus_general_account_location
          - references.bonus_spendable_account_location
        reference: read_batch_params
        stage: before_lock
      - deps:
        - get_contract
        - nvl_client_id
        method: Accounter.MakeLocation
        name: generate_lock_location
        params:
        - action: const
          value: locks
        - action: const
          value: plus
        - action: const
          value: client_lock
        - action: const
          value: client_id
        - action: get
          key: references.nvl_client_id
        reference: lock_location
        stage: before_lock
      - method: Accounter.CreateSharedLock
        params:
        - action: get
          key: references.lock_location
        reference: lock_state
        stage: lock
      - method: Accounter.ReadBatch
        name: accounts
        params:
        - action: get
          key: references.read_batch_params
        reference: accounts
        stage: after_lock
      calc_references:
      - map_data
      - contract
      - act_sender_firm
      - accounts
      - bonus_to_rub_currency_rate
      - rub_to_contract_currency_rate
      - contract_currency
      - mdh_product
      calculator_method: /faas-common-default/call/plus-act-row/json
      faas:
        function: billing.hot.calculators.plus.faas.entrypoint.act_row
        instance: default
        peerdir: billing/hot/calculators/plus
        revision: 9780067
        settings:
          eb:
            project: plus_calculator
            tags:
              endpoint: act-row
  locks:
    client_lock:
      attributes:
      - client_id
  namespace: plus
- accounts:
    agent_reward_refunds:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
    agent_reward_refunds_payable:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
    agent_rewards:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
    agent_rewards_payable:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
    cashless:
      add_attributes:
      - terminal_id
      attributes:
      - client_id
      - contract_id
      - currency
    cashless_payable:
      add_attributes:
      - terminal_id
      attributes:
      - client_id
      - contract_id
      - currency
    cashless_refunds:
      add_attributes:
      - terminal_id
      attributes:
      - client_id
      - contract_id
      - currency
    cashless_refunds_payable:
      add_attributes:
      - terminal_id
      attributes:
      - client_id
      - contract_id
      - currency
    payout:
      add_attributes:
      - product
      attributes:
      - client_id
      - contract_id
      - currency
  calculator:
    transport:
      baseUrl: https://faas.test.billing.yandex.net
      debug: true
      retries:
        count: 3
  endpoints: {}
  locks:
    cutoff_dt_lock:
      attributes:
      - client_id
    payout_lock:
      attributes:
      - client_id
      - contract_id
      - currency
      - service_id
  namespace: poc
  states:
    cutoff_dt_state:
      attributes:
      - client_id
- accounts:
    cashless:
      add_attributes:
      - terminal_id
      attributes:
      - client_id
      - contract_id
      - currency
    cashless_refunds:
      add_attributes:
      - terminal_id
      attributes:
      - client_id
      - contract_id
      - currency
    commissions:
      add_attributes:
      - product
      - detailed_product
      - region
      attributes:
      - client_id
      - contract_id
      - currency
    commissions_refunds:
      add_attributes:
      - product
      - detailed_product
      - region
      attributes:
      - client_id
      - contract_id
      - currency
    commissions_refunds_with_vat:
      add_attributes:
      - product
      - detailed_product
      - region
      attributes:
      - client_id
      - contract_id
      - currency
    commissions_with_vat:
      add_attributes:
      - product
      - detailed_product
      - region
      attributes:
      - client_id
      - contract_id
      - currency
    compensations:
      attributes:
      - client_id
      - contract_id
      - currency
    compensations_refunds:
      attributes:
      - client_id
      - contract_id
      - currency
    corporate:
      add_attributes:
      - product
      - detailed_product
      - region
      attributes:
      - client_id
      - contract_id
      - currency
    corporate_refunds:
      add_attributes:
      - product
      - detailed_product
      - region
      attributes:
      - client_id
      - contract_id
      - currency
    foreign_income_lightbox_rent:
      attributes:
      - client_id
      - contract_id
      - currency
    foreign_income_selfemployed_rent:
      attributes:
      - client_id
      - contract_id
      - currency
    foreign_income_signalq_rent:
      attributes:
      - client_id
      - contract_id
      - currency
    fuel_fact:
      attributes:
      - client_id
      - contract_id
      - currency
    fuel_hold:
      attributes:
      - client_id
      - contract_id
      - currency
    logistics:
      add_attributes:
      - product
      - detailed_product
      - region
      attributes:
      - client_id
      - contract_id
      - currency
    logistics_refunds:
      add_attributes:
      - product
      - detailed_product
      - region
      attributes:
      - client_id
      - contract_id
      - currency
    payout:
      add_attributes:
      - service_id
      attributes:
      - client_id
      - contract_id
      - currency
    payout_sent:
      add_attributes:
      - service_id
      attributes:
      - client_id
      - contract_id
      - currency
    promocodes:
      add_attributes:
      - region
      attributes:
      - client_id
      - contract_id
      - currency
    promocodes_refunds:
      add_attributes:
      - region
      attributes:
      - client_id
      - contract_id
      - currency
    subventions:
      add_attributes:
      - product
      - detailed_product
      - region
      attributes:
      - client_id
      - contract_id
      - currency
    subventions_refunds:
      add_attributes:
      - product
      - detailed_product
      - region
      attributes:
      - client_id
      - contract_id
      - currency
    transfer_cancel_lightbox_rent:
      attributes:
      - client_id
      - contract_id
      - currency
    transfer_cancel_selfemployed_rent:
      attributes:
      - client_id
      - contract_id
      - currency
    transfer_cancel_signalq_rent:
      attributes:
      - client_id
      - contract_id
      - currency
    transfer_hold_lightbox_rent:
      attributes:
      - client_id
      - contract_id
      - currency
    transfer_hold_selfemployed_rent:
      attributes:
      - client_id
      - contract_id
      - currency
    transfer_hold_signalq_rent:
      attributes:
      - client_id
      - contract_id
      - currency
    transfer_source_lightbox_rent:
      attributes:
      - client_id
      - contract_id
      - currency
    transfer_source_selfemployed_rent:
      attributes:
      - client_id
      - contract_id
      - currency
    transfer_source_signalq_rent:
      attributes:
      - client_id
      - contract_id
      - currency
  calculator:
    transport:
      baseUrl: https://faas.test.billing.yandex.net
      debug: true
      maxIdleConns: 64
      maxIdleConnsPerHost: 64
      retries:
        count: 2
      timeout: 5s
  endpoints:
    cashless:
      actions:
      - method: YT.GetMigrationInfo
        params:
        - action: const
          value: taxi
        - action: get
          key: input.Event.client_id
          type: int64
        reference: migration_info
        stage: before_lock
      - method: YT.GetContracts
        params:
        - action: get
          keys:
          - input.Event.contract_id
        reference: contracts
        stage: before_lock
      - method: Accounter.MakeLocation
        params:
        - action: const
          value: locks
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_lock
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: account_location
        stage: before_lock
      - method: Accounter.MakeLocation
        name: state_params
        params:
        - action: const
          value: states
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_state
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: state_params
        stage: before_lock
      - deps:
        - state_params
        method: Lib.MakeMap
        params:
        - action: const
          value: states
        - action: get
          keys:
          - references.state_params
        reference: read_batch_params
        stage: before_lock
      - method: Accounter.CreateSharedLock
        params:
        - action: get
          key: references.account_location
        reference: lock_state
        stage: lock
      - method: Accounter.ReadBatch
        name: batch
        params:
        - action: get
          key: references.read_batch_params
        reference: batch
        stage: after_lock
      - deps:
        - batch
        method: Lib.MakeMap
        params:
        - action: const
          value: states
        - action: get
          key: references.batch.States
        reference: lock
        stage: after_lock
      - method: Lib.JoinToString
        name: event_type
        params:
        - action: get
          keys:
          - input.Namespace
          - input.Endpoint
        - action: const
          value: ':'
        reference: event_type
        stage: after_calc
      - deps:
        - event_type
        method: Accounter.WriteCalculatorResponse
        params:
        - action: get
          key: references.event_type
        - action: get
          key: calc_result.Data.Event.transaction_id
        - action: get
          key: calc_result.Data.Event.tariffer_payload.common_ts
        - action: get
          key: calc_result.Data.Event
        - action: get
          key: calc_result.Data.ClientTransactions.0.transactions
          nullify_missing: true
        - action: get
          key: references.account_location
        - action: get
          key: references.lock_state.object
        reference: write_batch
        stage: after_calc
      calc_references:
      - migration_info
      - contracts
      - lock
      calculator_method: /faas-taxi-default/call/cashless/json
      faas:
        function: billing.hot.calculators.taxi.calculator.core.faas.cashless_adaptor.adaptor
        peerdir: billing/hot/calculators/taxi/calculator
        revision: 9775285
        settings:
          eb:
            project: taxi_calculator
            tags:
              endpoint: cashless
    fuel:
      actions:
      - method: YT.GetMigrationInfo
        params:
        - action: const
          value: taxi
        - action: get
          key: input.Event.client_id
          type: int64
        reference: migration_info
        stage: before_lock
      - method: YT.GetContracts
        params:
        - action: get
          keys:
          - input.Event.contract_id
        reference: contracts
        stage: before_lock
      - method: Accounter.MakeLocation
        params:
        - action: const
          value: locks
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_lock
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: account_location
        stage: before_lock
      - method: Accounter.MakeLocation
        name: state_params
        params:
        - action: const
          value: states
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_state
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: state_params
        stage: before_lock
      - deps:
        - state_params
        method: Lib.MakeMap
        params:
        - action: const
          value: states
        - action: get
          keys:
          - references.state_params
        reference: read_batch_params
        stage: before_lock
      - method: Accounter.CreateSharedLock
        params:
        - action: get
          key: references.account_location
        reference: lock_state
        stage: lock
      - method: Accounter.ReadBatch
        name: batch
        params:
        - action: get
          key: references.read_batch_params
        reference: batch
        stage: after_lock
      - deps:
        - batch
        method: Lib.MakeMap
        params:
        - action: const
          value: states
        - action: get
          key: references.batch.States
        reference: lock
        stage: after_lock
      - method: Lib.JoinToString
        name: event_type
        params:
        - action: get
          keys:
          - input.Namespace
          - input.Endpoint
        - action: const
          value: ':'
        reference: event_type
        stage: after_calc
      - deps:
        - event_type
        method: Accounter.WriteCalculatorResponse
        params:
        - action: get
          key: references.event_type
        - action: get
          key: calc_result.Data.Event.id
        - action: get
          key: calc_result.Data.Event.tariffer_payload.common_ts
        - action: get
          key: calc_result.Data.Event
        - action: get
          key: calc_result.Data.ClientTransactions.0.transactions
          nullify_missing: true
        - action: get
          key: references.account_location
        - action: get
          key: references.lock_state.object
        reference: write_batch
        stage: after_calc
      calc_references:
      - migration_info
      - contracts
      - lock
      calculator_method: /faas-taxi-default/call/fuel/json
      faas:
        function: billing.hot.calculators.taxi.calculator.core.faas.fuel_adaptor.adaptor
        peerdir: billing/hot/calculators/taxi/calculator
        revision: 9775285
        settings:
          eb:
            project: taxi_calculator
            tags:
              endpoint: fuel
    payout:
      actions:
      - method: Accounter.MakeDatedLocation
        name: commissions
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: commissions
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: commissions
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: commissions_refunds
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: commissions_refunds
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: commissions_refunds
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: commissions_with_vat
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: commissions_with_vat
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: commissions_with_vat
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: commissions_refunds_with_vat
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: commissions_refunds_with_vat
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: commissions_refunds_with_vat
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: cashless
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: cashless
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        - action: const
          value: terminal_id
        - action: set_null
        reference: cashless
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: cashless_refunds
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: cashless_refunds
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        - action: const
          value: terminal_id
        - action: set_null
        reference: cashless_refunds
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: compensations
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: compensations
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: compensations
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: compensations_refunds
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: compensations_refunds
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: compensations_refunds
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: fuel_fact
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: fuel_fact
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: fuel_fact
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: fuel_hold
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: fuel_hold
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: fuel_hold
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: subventions
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: subventions
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: subventions
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: subventions_refunds
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: subventions_refunds
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: subventions_refunds
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: corporate
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: corporate
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: corporate
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: corporate_refunds
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: corporate_refunds
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: corporate_refunds
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: logistics
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: logistics
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: logistics
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: logistics_refunds
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: logistics_refunds
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: logistics_refunds
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: promocodes
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: promocodes
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: promocodes
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: promocodes_refunds
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: promocodes_refunds
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: promocodes_refunds
        stage: before_lock
      - method: YT.GetGenericRowsByFieldType
        name: contract_client_idx
        params:
        - action: const
          value: contract_client_idx
        - action: const
          value: client_id
        - action: get
          keys:
          - input.Event.client_id
        - action: const
          value: int64
        reference: contract_client_idx
        stage: before_lock
      - deps:
        - contract_client_idx
        method: YT.GetContracts
        params:
        - action: get
          key: references.contract_client_idx.*.id
        reference: contracts
        stage: before_lock
      - method: YT.GetMigrationInfo
        params:
        - action: const
          value: taxi
        - action: get
          key: input.Event.client_id
          type: int64
        reference: migration_info
        stage: before_lock
      - method: YT.GetGenericRowsByFieldType
        params:
        - action: const
          value: personal_accounts
        - action: const
          value: client_id
        - action: get
          keys:
          - input.Event.client_id
        - action: const
          value: uint64
        reference: personal_accounts
        stage: before_lock
      - method: Accounter.MakeLocation
        name: state_params
        params:
        - action: const
          value: states
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_state
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: state_params
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: transfer_source_selfemployed_rent
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: transfer_source_selfemployed_rent
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: transfer_source_selfemployed_rent
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: transfer_cancel_selfemployed_rent
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: transfer_cancel_selfemployed_rent
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: transfer_cancel_selfemployed_rent
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: transfer_hold_selfemployed_rent
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: transfer_hold_selfemployed_rent
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: transfer_hold_selfemployed_rent
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: foreign_income_selfemployed_rent
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: foreign_income_selfemployed_rent
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: foreign_income_selfemployed_rent
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: transfer_source_lightbox_rent
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: transfer_source_lightbox_rent
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: transfer_source_lightbox_rent
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: transfer_cancel_lightbox_rent
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: transfer_cancel_lightbox_rent
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: transfer_cancel_lightbox_rent
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: transfer_hold_lightbox_rent
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: transfer_hold_lightbox_rent
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: transfer_hold_lightbox_rent
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: foreign_income_lightbox_rent
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: foreign_income_lightbox_rent
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: foreign_income_lightbox_rent
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: transfer_source_signalq_rent
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: transfer_source_signalq_rent
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: transfer_source_signalq_rent
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: transfer_cancel_signalq_rent
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: transfer_cancel_signalq_rent
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: transfer_cancel_signalq_rent
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: transfer_hold_signalq_rent
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: transfer_hold_signalq_rent
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: transfer_hold_signalq_rent
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: foreign_income_signalq_rent
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: foreign_income_signalq_rent
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: foreign_income_signalq_rent
        stage: before_lock
      - method: Accounter.MakeLocation
        name: transfer_state_params
        params:
        - action: const
          value: states
        - action: get
          key: input.Namespace
        - action: const
          value: transfer_queue_state
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: transfer_state_params
        stage: before_lock
      - deps:
        - commissions
        - commissions_refunds
        - commissions_with_vat
        - commissions_refunds_with_vat
        - cashless
        - cashless_refunds
        - compensations
        - compensations_refunds
        - fuel_fact
        - fuel_hold
        - subventions
        - subventions_refunds
        - corporate
        - corporate_refunds
        - logistics
        - logistics_refunds
        - promocodes
        - promocodes_refunds
        - transfer_source_selfemployed_rent
        - transfer_cancel_selfemployed_rent
        - transfer_hold_selfemployed_rent
        - foreign_income_selfemployed_rent
        - transfer_source_lightbox_rent
        - transfer_cancel_lightbox_rent
        - transfer_hold_lightbox_rent
        - foreign_income_lightbox_rent
        - transfer_source_signalq_rent
        - transfer_cancel_signalq_rent
        - transfer_hold_signalq_rent
        - foreign_income_signalq_rent
        - state_params
        - transfer_state_params
        method: Lib.MakeMap
        params:
        - action: const
          value: balances
        - action: get
          keys:
          - references.commissions
          - references.commissions_refunds
          - references.commissions_with_vat
          - references.commissions_refunds_with_vat
          - references.cashless
          - references.cashless_refunds
          - references.compensations
          - references.compensations_refunds
          - references.fuel_fact
          - references.fuel_hold
          - references.subventions
          - references.subventions_refunds
          - references.corporate
          - references.corporate_refunds
          - references.logistics
          - references.logistics_refunds
          - references.promocodes
          - references.promocodes_refunds
          - references.transfer_source_selfemployed_rent
          - references.transfer_cancel_selfemployed_rent
          - references.transfer_hold_selfemployed_rent
          - references.foreign_income_selfemployed_rent
          - references.transfer_source_lightbox_rent
          - references.transfer_cancel_lightbox_rent
          - references.transfer_hold_lightbox_rent
          - references.foreign_income_lightbox_rent
          - references.transfer_source_signalq_rent
          - references.transfer_cancel_signalq_rent
          - references.transfer_hold_signalq_rent
          - references.foreign_income_signalq_rent
        - action: const
          value: states
        - action: get
          keys:
          - references.state_params
          - references.transfer_state_params
        reference: read_batch_params
        stage: before_lock
      - method: Accounter.MakeLocation
        params:
        - action: const
          value: locks
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_lock
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: account_location
        stage: before_lock
      - method: Accounter.MakeLocation
        params:
        - action: const
          value: locks
        - action: get
          key: input.Namespace
        - action: const
          value: transfer_queue_lock
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: transfer_location
        stage: before_lock
      - method: Accounter.CreateExclusiveLock
        params:
        - action: get
          key: references.account_location
        - action: const
          value: 6
        - action: const
          value: 2
        reference: account_lock
        stage: lock
      - method: Accounter.CreateExclusiveLock
        params:
        - action: get
          key: references.transfer_location
        - action: const
          value: 6
        - action: const
          value: 2
        reference: transfer_lock
        stage: lock
      - method: Accounter.ReadBatch
        name: accounts
        params:
        - action: get
          key: references.read_batch_params
        reference: accounts
        stage: after_lock
      - deps:
        - accounts
        method: Lib.MakeMap
        params:
        - action: const
          value: states
        - action: get
          key: references.accounts.States
        reference: lock
        stage: after_lock
      - method: Lib.JoinToString
        name: event_type
        params:
        - action: get
          keys:
          - input.Namespace
          - input.Endpoint
        - action: const
          value: ':'
        reference: event_type
        stage: after_calc
      - method: Lib.Filter
        name: account_states
        params:
        - action: get
          key: calc_result.Data.States
          nullify_missing: true
        - action: const
          value: item.loc.type
        - action: const
          value: ==
        - action: const
          value: cutoff_dt_state
        reference: account_states
        stage: after_calc
      - method: Lib.Filter
        name: transfer_states
        params:
        - action: get
          key: calc_result.Data.States
          nullify_missing: true
        - action: const
          value: item.loc.type
        - action: const
          value: ==
        - action: const
          value: transfer_queue_state
        reference: transfer_states
        stage: after_calc
      - method: Lib.Filter
        name: main_client_batches
        params:
        - action: get
          key: calc_result.Data.ClientTransactions
        - action: const
          value: item.client_id
        - action: const
          value: ==
        - action: get
          key: calc_result.Data.Event.client_id
        reference: main_client_batches
        stage: after_calc
      - method: Lib.Filter
        name: side_client_batches
        params:
        - action: get
          key: calc_result.Data.ClientTransactions
        - action: const
          value: item.client_id
        - action: const
          value: '!='
        - action: get
          key: calc_result.Data.Event.client_id
        reference: side_client_batches
        stage: after_calc
      - deps:
        - side_client_batches
        foreach:
          action: get
          key: references.side_client_batches
        method: Accounter.MakeLocation
        name: side_account_locations
        params:
        - action: const
          value: locks
        - action: get
          key: main.input.Namespace
        - action: const
          value: cutoff_dt_lock
        - action: const
          value: client_id
        - action: get
          key: iteration.value.client_id
        reference: side_account_locations
        stage: after_calc
      - deps:
        - side_account_locations
        foreach:
          action: get
          key: references.side_account_locations
        method: Accounter.GetActiveSharedLock
        name: side_lock_states
        params:
        - action: get
          key: iteration.value
        reference: side_lock_states
        stage: after_calc
      - deps:
        - side_client_batches
        foreach:
          action: get
          key: references.side_client_batches
        method: Lib.JoinToString
        name: side_external_ids
        params:
        - action: get
          keys:
          - main.calc_result.Data.Event.transaction_id
          - iteration.value.client_id
        - action: const
          value: '-'
        reference: side_external_ids
        stage: after_calc
      - deps:
        - side_lock_states
        - side_external_ids
        method: Lib.Zip
        name: side_batch
        params:
        - action: get
          keys:
          - references.side_external_ids
          - references.side_client_batches
          - references.side_account_locations
          - references.side_lock_states
        reference: side_batch
        stage: after_calc
      - deps:
        - event_type
        - side_batch
        foreach:
          action: get
          key: references.side_batch
        method: Accounter.WriteCalculatorResponse
        name: write_side_batch
        params:
        - action: get
          key: main.references.event_type
        - action: get
          key: iteration.value.0
        - action: get
          key: main.calc_result.Data.Event.tariffer_payload.common_ts
        - action: get
          key: main.calc_result.Data.Event.tariffer_payload.side_batch_info
          nullify_missing: true
        - action: get
          key: iteration.value.1.transactions
          nullify_missing: true
        - action: get
          key: iteration.value.2
        - action: get
          key: iteration.value.3
        reference: write_side_batch
        stage: after_calc
      - deps:
        - event_type
        - account_states
        - main_client_batches
        - write_side_batch
        method: Accounter.WriteCalculatorResponseNRemoveLock
        name: write_account_batch
        params:
        - action: get
          key: references.event_type
        - action: get
          key: calc_result.Data.Event.transaction_id
        - action: get
          key: calc_result.Data.Event.tariffer_payload.common_ts
        - action: get
          key: calc_result.Data.Event
        - action: get
          key: references.main_client_batches.0.transactions
          nullify_missing: true
        - action: get
          key: references.account_location
        - action: get
          key: references.account_lock.object
        - action: get
          key: references.account_states
        reference: write_account_batch
        stage: after_calc
      - method: Lib.MakeMap
        name: transfer_transaction_id_map
        params:
        - action: const
          value: "1"
        - action: get
          key: calc_result.Data.Event.transaction_id
        - action: const
          value: "2"
        - action: const
          value: transfer
        reference: transfer_transaction_id_map
        stage: after_calc
      - deps:
        - transfer_transaction_id_map
        method: Lib.JoinToString
        name: transfer_transaction_id
        params:
        - action: get
          keys:
          - references.transfer_transaction_id_map.1
          - references.transfer_transaction_id_map.2
        - action: const
          value: '-'
        reference: transfer_transaction_id
        stage: after_calc
      - deps:
        - event_type
        - transfer_states
        - write_account_batch
        - transfer_transaction_id
        method: Accounter.WriteCalculatorResponseNRemoveLock
        params:
        - action: get
          key: references.event_type
        - action: get
          key: references.transfer_transaction_id
        - action: get
          key: calc_result.Data.Event.tariffer_payload.common_ts
        - action: get
          key: calc_result.Data.Event
        - action: get
          keys: []
        - action: get
          key: references.transfer_location
        - action: get
          key: references.transfer_lock.object
        - action: get
          key: references.transfer_states
        reference: write_transfer_batch
        stage: after_calc
      calc_references:
      - accounts
      - migration_info
      - contracts
      - personal_accounts
      - lock
      calculator_method: /faas-taxi-default/call/payout/json
      faas:
        function: billing.hot.calculators.taxi.calculator.core.faas.payout_adaptor.adaptor
        peerdir: billing/hot/calculators/taxi/calculator
        revision: 9775285
        settings:
          eb:
            project: taxi_calculator
            tags:
              endpoint: payout
    payout-interim:
      actions:
      - method: Accounter.MakeDatedLocation
        name: commissions
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: commissions
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: commissions
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: commissions_refunds
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: commissions_refunds
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: commissions_refunds
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: commissions_with_vat
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: commissions_with_vat
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: commissions_with_vat
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: commissions_refunds_with_vat
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: commissions_refunds_with_vat
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: commissions_refunds_with_vat
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: cashless
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: cashless
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        - action: const
          value: terminal_id
        - action: set_null
        reference: cashless
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: cashless_refunds
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: cashless_refunds
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        - action: const
          value: terminal_id
        - action: set_null
        reference: cashless_refunds
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: compensations
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: compensations
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: compensations
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: compensations_refunds
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: compensations_refunds
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: compensations_refunds
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: fuel_fact
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: fuel_fact
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: fuel_fact
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: fuel_hold
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: fuel_hold
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: fuel_hold
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: subventions
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: subventions
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: subventions
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: subventions_refunds
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: subventions_refunds
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: subventions_refunds
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: corporate
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: corporate
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: corporate
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: corporate_refunds
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: corporate_refunds
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: corporate_refunds
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: logistics
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: logistics
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: logistics
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: logistics_refunds
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: logistics_refunds
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: logistics_refunds
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: promocodes
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: promocodes
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: promocodes
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: promocodes_refunds
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: promocodes_refunds
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: promocodes_refunds
        stage: before_lock
      - method: YT.GetGenericRowsByFieldType
        name: contract_client_idx
        params:
        - action: const
          value: contract_client_idx
        - action: const
          value: client_id
        - action: get
          keys:
          - input.Event.client_id
        - action: const
          value: int64
        reference: contract_client_idx
        stage: before_lock
      - deps:
        - contract_client_idx
        method: YT.GetContracts
        params:
        - action: get
          key: references.contract_client_idx.*.id
        reference: contracts
        stage: before_lock
      - method: YT.GetMigrationInfo
        params:
        - action: const
          value: taxi
        - action: get
          key: input.Event.client_id
          type: int64
        reference: migration_info
        stage: before_lock
      - method: YT.GetGenericRowsByFieldType
        params:
        - action: const
          value: personal_accounts
        - action: const
          value: client_id
        - action: get
          keys:
          - input.Event.client_id
        - action: const
          value: uint64
        reference: personal_accounts
        stage: before_lock
      - method: Accounter.MakeLocation
        name: state_params
        params:
        - action: const
          value: states
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_state
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: state_params
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: transfer_source_selfemployed_rent
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: transfer_source_selfemployed_rent
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: transfer_source_selfemployed_rent
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: transfer_cancel_selfemployed_rent
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: transfer_cancel_selfemployed_rent
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: transfer_cancel_selfemployed_rent
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: transfer_hold_selfemployed_rent
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: transfer_hold_selfemployed_rent
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: transfer_hold_selfemployed_rent
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: foreign_income_selfemployed_rent
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: foreign_income_selfemployed_rent
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: foreign_income_selfemployed_rent
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: transfer_source_lightbox_rent
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: transfer_source_lightbox_rent
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: transfer_source_lightbox_rent
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: transfer_cancel_lightbox_rent
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: transfer_cancel_lightbox_rent
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: transfer_cancel_lightbox_rent
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: transfer_hold_lightbox_rent
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: transfer_hold_lightbox_rent
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: transfer_hold_lightbox_rent
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: foreign_income_lightbox_rent
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: foreign_income_lightbox_rent
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: foreign_income_lightbox_rent
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: transfer_source_signalq_rent
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: transfer_source_signalq_rent
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: transfer_source_signalq_rent
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: transfer_cancel_signalq_rent
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: transfer_cancel_signalq_rent
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: transfer_cancel_signalq_rent
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: transfer_hold_signalq_rent
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: transfer_hold_signalq_rent
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: transfer_hold_signalq_rent
        stage: before_lock
      - method: Accounter.MakeDatedLocation
        name: foreign_income_signalq_rent
        params:
        - action: const
          value: accounts
        - action: get
          key: input.Namespace
        - action: const
          value: foreign_income_signalq_rent
        - action: get
          key: input.Event.event_time
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: foreign_income_signalq_rent
        stage: before_lock
      - method: Accounter.MakeLocation
        name: transfer_state_params
        params:
        - action: const
          value: states
        - action: get
          key: input.Namespace
        - action: const
          value: transfer_queue_state
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: transfer_state_params
        stage: before_lock
      - deps:
        - commissions
        - commissions_refunds
        - commissions_with_vat
        - commissions_refunds_with_vat
        - cashless
        - cashless_refunds
        - compensations
        - compensations_refunds
        - fuel_fact
        - fuel_hold
        - subventions
        - subventions_refunds
        - corporate
        - corporate_refunds
        - logistics
        - logistics_refunds
        - promocodes
        - promocodes_refunds
        - transfer_source_selfemployed_rent
        - transfer_cancel_selfemployed_rent
        - transfer_hold_selfemployed_rent
        - foreign_income_selfemployed_rent
        - transfer_source_lightbox_rent
        - transfer_cancel_lightbox_rent
        - transfer_hold_lightbox_rent
        - foreign_income_lightbox_rent
        - transfer_source_signalq_rent
        - transfer_cancel_signalq_rent
        - transfer_hold_signalq_rent
        - foreign_income_signalq_rent
        - transfer_state_params
        - state_params
        method: Lib.MakeMap
        params:
        - action: const
          value: balances
        - action: get
          keys:
          - references.commissions
          - references.commissions_refunds
          - references.commissions_with_vat
          - references.commissions_refunds_with_vat
          - references.cashless
          - references.cashless_refunds
          - references.compensations
          - references.compensations_refunds
          - references.fuel_fact
          - references.fuel_hold
          - references.subventions
          - references.subventions_refunds
          - references.corporate
          - references.corporate_refunds
          - references.logistics
          - references.logistics_refunds
          - references.promocodes
          - references.promocodes_refunds
          - references.transfer_source_selfemployed_rent
          - references.transfer_cancel_selfemployed_rent
          - references.transfer_hold_selfemployed_rent
          - references.foreign_income_selfemployed_rent
          - references.transfer_source_lightbox_rent
          - references.transfer_cancel_lightbox_rent
          - references.transfer_hold_lightbox_rent
          - references.foreign_income_lightbox_rent
          - references.transfer_source_signalq_rent
          - references.transfer_cancel_signalq_rent
          - references.transfer_hold_signalq_rent
          - references.foreign_income_signalq_rent
        - action: const
          value: states
        - action: get
          keys:
          - references.state_params
          - references.transfer_state_params
        reference: read_batch_params
        stage: before_lock
      - method: Accounter.ReadBatch
        name: accounts
        params:
        - action: get
          key: references.read_batch_params
        reference: accounts
        stage: after_lock
      - deps:
        - accounts
        method: Lib.MakeMap
        params:
        - action: const
          value: states
        - action: get
          key: references.accounts.States
        reference: lock
        stage: after_lock
      calc_references:
      - accounts
      - migration_info
      - contracts
      - personal_accounts
      - lock
      calculator_method: /faas-taxi-default/call/payout-interim/json
      faas:
        function: billing.hot.calculators.taxi.calculator.core.faas.payout_interim_adaptor.adaptor
        peerdir: billing/hot/calculators/taxi/calculator
        revision: 9775285
        settings:
          eb:
            project: taxi_calculator
            tags:
              endpoint: payout-interim
    revenue:
      actions:
      - method: YT.GetMigrationInfo
        params:
        - action: const
          value: taxi
        - action: get
          key: input.Event.client_id
          type: int64
        reference: migration_info
        stage: before_lock
      - method: YT.GetContracts
        name: contracts
        params:
        - action: get
          keys:
          - input.Event.contract_id
        reference: contracts
        stage: before_lock
      - deps:
        - contracts
        method: YT.GetGenericRowByType
        params:
        - action: const
          value: firm_tax
        - action: extract
          nullify_missing: true
          path: $.references.contracts[0].collaterals[0].firm
        - action: const
          value: int64
        reference: firm
        stage: before_lock
      - method: YT.GetGenericRowsByType
        params:
        - action: const
          value: partner_products
        - action: get
          keys:
          - input.Event.product
        - action: const
          value: string
        reference: partner_products
        stage: before_lock
      - method: Accounter.MakeLocation
        params:
        - action: const
          value: locks
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_lock
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: account_location
        stage: before_lock
      - method: Accounter.MakeLocation
        name: state_params
        params:
        - action: const
          value: states
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_state
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: state_params
        stage: before_lock
      - deps:
        - state_params
        method: Lib.MakeMap
        name: read_batch_params
        params:
        - action: const
          value: states
        - action: get
          keys:
          - references.state_params
        reference: read_batch_params
        stage: before_lock
      - method: Accounter.CreateSharedLock
        params:
        - action: get
          key: references.account_location
        reference: lock_state
        stage: lock
      - method: Accounter.ReadBatch
        name: batch
        params:
        - action: get
          key: references.read_batch_params
        reference: batch
        stage: after_lock
      - deps:
        - batch
        method: Lib.MakeMap
        params:
        - action: const
          value: states
        - action: get
          key: references.batch.States
        reference: lock
        stage: after_lock
      - method: Lib.JoinToString
        name: event_type
        params:
        - action: get
          keys:
          - input.Namespace
          - input.Endpoint
        - action: const
          value: ':'
        reference: event_type
        stage: after_calc
      - deps:
        - event_type
        method: Accounter.WriteCalculatorResponse
        params:
        - action: get
          key: references.event_type
        - action: get
          key: calc_result.Data.Event.transaction_id
        - action: get
          key: calc_result.Data.Event.tariffer_payload.common_ts
        - action: get
          key: calc_result.Data.Event
        - action: get
          key: calc_result.Data.ClientTransactions.0.transactions
          nullify_missing: true
        - action: get
          key: references.account_location
        - action: get
          key: references.lock_state.object
        reference: write_batch
        stage: after_calc
      calc_references:
      - migration_info
      - contracts
      - firm
      - lock
      - partner_products
      calculator_method: /faas-taxi-default/call/revenue/json
      faas:
        function: billing.hot.calculators.taxi.calculator.core.faas.revenue_adaptor.adaptor
        peerdir: billing/hot/calculators/taxi/calculator
        revision: 9775285
        settings:
          eb:
            project: taxi_calculator
            tags:
              endpoint: revenue
    subvention:
      actions:
      - method: YT.GetMigrationInfo
        params:
        - action: const
          value: taxi
        - action: get
          key: input.Event.client_id
          type: int64
        reference: migration_info
        stage: before_lock
      - method: YT.GetGenericRowsByFieldType
        params:
        - action: const
          value: page_data
        - action: const
          value: payment_type
        - action: get
          keys:
          - input.Event.product
        - action: const
          value: string
        reference: page_data
        stage: before_lock
      - method: YT.GetContracts
        name: contracts
        params:
        - action: get
          keys:
          - input.Event.contract_id
        reference: contracts
        stage: before_lock
      - deps:
        - contracts
        method: YT.GetGenericRowByType
        params:
        - action: const
          value: firm_tax
        - action: extract
          nullify_missing: true
          path: $.references.contracts[0].collaterals[0].firm
        - action: const
          value: int64
        reference: firm
        stage: before_lock
      - method: Accounter.MakeLocation
        params:
        - action: const
          value: locks
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_lock
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: account_location
        stage: before_lock
      - method: Accounter.MakeLocation
        name: state_params
        params:
        - action: const
          value: states
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_state
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: state_params
        stage: before_lock
      - deps:
        - state_params
        method: Lib.MakeMap
        params:
        - action: const
          value: states
        - action: get
          keys:
          - references.state_params
        reference: read_batch_params
        stage: before_lock
      - method: Accounter.CreateSharedLock
        params:
        - action: get
          key: references.account_location
        reference: lock_state
        stage: lock
      - method: Accounter.ReadBatch
        name: batch
        params:
        - action: get
          key: references.read_batch_params
        reference: batch
        stage: after_lock
      - deps:
        - batch
        method: Lib.MakeMap
        params:
        - action: const
          value: states
        - action: get
          key: references.batch.States
        reference: lock
        stage: after_lock
      - method: Lib.JoinToString
        name: event_type
        params:
        - action: get
          keys:
          - input.Namespace
          - input.Endpoint
        - action: const
          value: ':'
        reference: event_type
        stage: after_calc
      - deps:
        - event_type
        method: Accounter.WriteCalculatorResponse
        params:
        - action: get
          key: references.event_type
        - action: get
          key: calc_result.Data.Event.transaction_id
        - action: get
          key: calc_result.Data.Event.tariffer_payload.common_ts
        - action: get
          key: calc_result.Data.Event
        - action: get
          key: calc_result.Data.ClientTransactions.0.transactions
          nullify_missing: true
        - action: get
          key: references.account_location
        - action: get
          key: references.lock_state.object
        reference: write_batch
        stage: after_calc
      calc_references:
      - migration_info
      - contracts
      - page_data
      - firm
      - lock
      calculator_method: /faas-taxi-default/call/subvention/json
      faas:
        function: billing.hot.calculators.taxi.calculator.core.faas.subvention_adaptor.adaptor
        peerdir: billing/hot/calculators/taxi/calculator
        revision: 9775285
        settings:
          eb:
            project: taxi_calculator
            tags:
              endpoint: subvention
    transfer-cancel:
      actions:
      - method: YT.GetMigrationInfo
        params:
        - action: const
          value: taxi
        - action: get
          key: input.Event.sender_billing_client_id
          type: int64
        reference: migration_info
        stage: before_lock
      - method: YT.GetContracts
        params:
        - action: get
          keys:
          - input.Event.sender_billing_contract_id
        reference: sender_contracts
        stage: before_lock
      - method: Accounter.MakeLocation
        name: state_params
        params:
        - action: const
          value: states
        - action: get
          key: input.Namespace
        - action: const
          value: transfer_queue_state
        - action: const
          value: client_id
        - action: get
          key: input.Event.sender_billing_client_id
        reference: state_params
        stage: before_lock
      - deps:
        - state_params
        method: Lib.MakeMap
        params:
        - action: const
          value: states
        - action: get
          keys:
          - references.state_params
        reference: read_state_params
        stage: before_lock
      - method: Accounter.MakeLocation
        params:
        - action: const
          value: locks
        - action: get
          key: input.Namespace
        - action: const
          value: transfer_queue_lock
        - action: const
          value: client_id
        - action: get
          key: input.Event.sender_billing_client_id
        reference: transfer_location
        stage: before_lock
      - method: Accounter.CreateExclusiveLock
        params:
        - action: get
          key: references.transfer_location
        - action: const
          value: 6
        - action: const
          value: 2
        reference: lock_state
        stage: lock
      - method: Accounter.ReadBatch
        name: transfer_queue_batch
        params:
        - action: get
          key: references.read_state_params
        reference: transfer_queue_batch
        stage: after_lock
      - deps:
        - transfer_queue_batch
        method: Lib.MakeMap
        params:
        - action: const
          value: states
        - action: get
          key: references.transfer_queue_batch.States
        reference: lock
        stage: after_lock
      - method: Lib.JoinToString
        name: event_type
        params:
        - action: get
          keys:
          - input.Namespace
          - input.Endpoint
        - action: const
          value: ':'
        reference: event_type
        stage: after_calc
      - method: Accounter.MakeLocation
        name: transactions_location
        params:
        - action: const
          value: locks
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_lock
        - action: const
          value: client_id
        - action: get
          key: input.Event.sender_billing_client_id
        reference: transactions_location
        stage: after_calc
      - deps:
        - transactions_location
        method: Accounter.GetActiveSharedLock
        name: transactions_lock
        params:
        - action: get
          key: references.transactions_location
        reference: transactions_lock
        stage: after_calc
      - method: Lib.MakeMap
        name: transfer_transaction_id_map
        params:
        - action: const
          value: "1"
        - action: get
          key: calc_result.Data.Event.transaction_id
        - action: const
          value: "2"
        - action: const
          value: transfer-cancel-transaction
        reference: transfer_transaction_id_map
        stage: after_calc
      - deps:
        - transfer_transaction_id_map
        method: Lib.JoinToString
        name: transfer_transaction_id
        params:
        - action: get
          keys:
          - references.transfer_transaction_id_map.1
          - references.transfer_transaction_id_map.2
        - action: const
          value: '-'
        reference: transfer_transaction_id
        stage: after_calc
      - deps:
        - transactions_lock
        - event_type
        method: Accounter.WriteCalculatorResponse
        name: write_transactions_batch
        params:
        - action: get
          key: references.event_type
        - action: get
          key: references.transfer_transaction_id
        - action: get
          key: calc_result.Data.Event.tariffer_payload.common_ts
        - action: get
          key: calc_result.Data.Event
        - action: get
          key: calc_result.Data.ClientTransactions.0.transactions
          nullify_missing: true
        - action: get
          key: references.transactions_location
        - action: get
          key: references.transactions_lock
        reference: write_transactions_batch
        stage: after_calc
      - method: Lib.MakeMap
        name: transfer_event_id_map
        params:
        - action: const
          value: "1"
        - action: get
          key: calc_result.Data.Event.transaction_id
        - action: const
          value: "2"
        - action: const
          value: transfer-cancel
        reference: transfer_event_id_map
        stage: after_calc
      - deps:
        - transfer_event_id_map
        method: Lib.JoinToString
        name: transfer_event_id
        params:
        - action: get
          keys:
          - references.transfer_event_id_map.1
          - references.transfer_event_id_map.2
        - action: const
          value: '-'
        reference: transfer_event_id
        stage: after_calc
      - deps:
        - event_type
        - transfer_event_id
        - write_transactions_batch
        method: Accounter.WriteCalculatorResponseNRemoveLock
        params:
        - action: get
          key: references.event_type
        - action: get
          key: references.transfer_event_id
        - action: get
          key: calc_result.Data.Event.tariffer_payload.common_ts
        - action: get
          key: calc_result.Data.Event
        - action: set_null
        - action: get
          key: references.transfer_location
        - action: get
          key: references.lock_state.object
        - action: get
          key: calc_result.Data.States
          nullify_missing: true
        reference: write_batch
        stage: after_calc
      calc_references:
      - migration_info
      - sender_contracts
      - lock
      calculator_method: /faas-taxi-default/call/transfer-cancel/json
      faas:
        function: billing.hot.calculators.taxi.calculator.core.faas.transfer_cancel_adaptor.adaptor
        peerdir: billing/hot/calculators/taxi/calculator
        revision: 9775285
        settings:
          eb:
            project: taxi_calculator
            tags:
              endpoint: transfer-cancel
    transfer-init:
      actions:
      - method: YT.GetMigrationInfo
        params:
        - action: const
          value: taxi
        - action: get
          key: input.Event.sender_billing_client_id
          type: int64
        reference: migration_info
        stage: before_lock
      - method: YT.GetContracts
        params:
        - action: get
          keys:
          - input.Event.sender_billing_contract_id
        reference: sender_contracts
        stage: before_lock
      - method: YT.GetContracts
        params:
        - action: get
          keys:
          - input.Event.recipient_billing_contract_id
        reference: recipient_contracts
        stage: before_lock
      - method: Accounter.MakeLocation
        name: state_params
        params:
        - action: const
          value: states
        - action: get
          key: input.Namespace
        - action: const
          value: transfer_queue_state
        - action: const
          value: client_id
        - action: get
          key: input.Event.sender_billing_client_id
        reference: state_params
        stage: before_lock
      - deps:
        - state_params
        method: Lib.MakeMap
        params:
        - action: const
          value: states
        - action: get
          keys:
          - references.state_params
        reference: read_state_params
        stage: before_lock
      - method: Accounter.MakeLocation
        params:
        - action: const
          value: locks
        - action: get
          key: input.Namespace
        - action: const
          value: transfer_queue_lock
        - action: const
          value: client_id
        - action: get
          key: input.Event.sender_billing_client_id
        reference: transfer_location
        stage: before_lock
      - method: Accounter.CreateExclusiveLock
        params:
        - action: get
          key: references.transfer_location
        - action: const
          value: 6
        - action: const
          value: 2
        reference: lock_state
        stage: lock
      - method: Accounter.ReadBatch
        name: transfer_queue_batch
        params:
        - action: get
          key: references.read_state_params
        reference: transfer_queue_batch
        stage: after_lock
      - deps:
        - transfer_queue_batch
        method: Lib.MakeMap
        params:
        - action: const
          value: states
        - action: get
          key: references.transfer_queue_batch.States
        reference: lock
        stage: after_lock
      - method: Lib.JoinToString
        name: event_type
        params:
        - action: get
          keys:
          - input.Namespace
          - input.Endpoint
        - action: const
          value: ':'
        reference: event_type
        stage: after_calc
      - method: Accounter.MakeLocation
        name: transactions_location
        params:
        - action: const
          value: locks
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_lock
        - action: const
          value: client_id
        - action: get
          key: input.Event.sender_billing_client_id
        reference: transactions_location
        stage: after_calc
      - deps:
        - transactions_location
        method: Accounter.GetActiveSharedLock
        name: transactions_lock
        params:
        - action: get
          key: references.transactions_location
        reference: transactions_lock
        stage: after_calc
      - deps:
        - transactions_lock
        - event_type
        method: Accounter.WriteCalculatorResponse
        name: write_transactions_batch
        params:
        - action: get
          key: references.event_type
        - action: get
          key: calc_result.Data.Event.transaction_id
        - action: get
          key: calc_result.Data.Event.tariffer_payload.common_ts
        - action: get
          key: calc_result.Data.Event
        - action: get
          key: calc_result.Data.ClientTransactions.0.transactions
          nullify_missing: true
        - action: get
          key: references.transactions_location
        - action: get
          key: references.transactions_lock
        reference: write_transactions_batch
        stage: after_calc
      - method: Lib.MakeMap
        name: transfer_transaction_id_map
        params:
        - action: const
          value: "1"
        - action: get
          key: calc_result.Data.Event.transaction_id
        - action: const
          value: "2"
        - action: const
          value: transfer-init
        reference: transfer_transaction_id_map
        stage: after_calc
      - deps:
        - transfer_transaction_id_map
        method: Lib.JoinToString
        name: transfer_transaction_id
        params:
        - action: get
          keys:
          - references.transfer_transaction_id_map.1
          - references.transfer_transaction_id_map.2
        - action: const
          value: '-'
        reference: transfer_transaction_id
        stage: after_calc
      - deps:
        - event_type
        - transfer_transaction_id
        - write_transactions_batch
        method: Accounter.WriteCalculatorResponseNRemoveLock
        params:
        - action: get
          key: references.event_type
        - action: get
          key: references.transfer_transaction_id
        - action: get
          key: calc_result.Data.Event.tariffer_payload.common_ts
        - action: get
          key: calc_result.Data.Event
        - action: set_null
        - action: get
          key: references.transfer_location
        - action: get
          key: references.lock_state.object
        - action: get
          key: calc_result.Data.States
          nullify_missing: true
        reference: write_batch
        stage: after_calc
      calc_references:
      - migration_info
      - sender_contracts
      - recipient_contracts
      - lock
      calculator_method: /faas-taxi-default/call/transfer-init/json
      faas:
        function: billing.hot.calculators.taxi.calculator.core.faas.transfer_init_adaptor.adaptor
        peerdir: billing/hot/calculators/taxi/calculator
        revision: 9775285
        settings:
          eb:
            project: taxi_calculator
            tags:
              endpoint: transfer-init
  locks:
    cutoff_dt_lock:
      attributes:
      - client_id
    payout_lock:
      attributes:
      - client_id
      - contract_id
      - currency
      - service_id
    transfer_queue_lock:
      attributes:
      - client_id
  namespace: taxi
  states:
    cutoff_dt_state:
      attributes:
      - client_id
    transfer_queue_state:
      attributes:
      - client_id
- accounts:
    incoming_payments:
      add_attributes:
      - operation_type
      attributes:
      - client_id
      - contract_id
      - invoice_id
      - currency
    incoming_payments_refunds:
      add_attributes:
      - operation_type
      attributes:
      - client_id
      - contract_id
      - invoice_id
      - currency
    incoming_payments_sent:
      add_attributes:
      - operation_type
      attributes:
      - client_id
      - contract_id
      - invoice_id
      - currency
  calculator:
    transport:
      baseUrl: https://faas.test.billing.yandex.net
      debug: true
      retries:
        count: 3
      timeout: 5s
  endpoints:
    payout:
      actions:
      - method: YT.GetContracts
        name: contracts
        params:
        - action: get
          keys:
          - input.Event.contract_id
        reference: contracts
        stage: before_lock
      - method: YT.GetGenericRowsByFieldType
        name: personal_accounts
        params:
        - action: const
          value: personal_accounts
        - action: const
          value: client_id
        - action: get
          keys:
          - input.Event.client_id
        - action: const
          value: uint64
        reference: personal_accounts
        stage: before_lock
      - deps:
        - personal_accounts
        method: Lib.Filter
        params:
        - action: get
          key: references.personal_accounts
        - action: const
          value: item.obj.external_id
        - action: const
          value: ==
        - action: get
          key: input.Event.invoice_external_id
        reference: personal_accounts
        stage: before_lock
      - method: Accounter.MakeLocation
        params:
        - action: const
          value: locks
        - action: get
          key: input.Namespace
        - action: const
          value: cutoff_dt_lock
        - action: const
          value: client_id
        - action: get
          key: input.Event.client_id
        reference: account_location
        stage: before_lock
      - method: Accounter.CreateSharedLock
        params:
        - action: get
          key: references.account_location
        reference: account_lock
        stage: lock
      - method: Lib.JoinToString
        name: event_type
        params:
        - action: get
          keys:
          - input.Namespace
          - input.Endpoint
        - action: const
          value: ':'
        reference: event_type
        stage: after_calc
      - deps:
        - event_type
        method: Accounter.WriteCalculatorResponse
        name: write_batch
        params:
        - action: get
          key: references.event_type
        - action: get
          key: calc_result.Data.Event.id
          type: string
        - action: get
          key: calc_result.Data.Event.tariffer_payload.common_ts
        - action: get
          key: calc_result.Data.Event
        - action: get
          key: calc_result.Data.ClientTransactions.0.transactions
          nullify_missing: true
        - action: get
          key: references.account_location
        - action: get
          key: references.account_lock.object
        stage: after_calc
      calc_references:
      - contracts
      - personal_accounts
      calculator_method: /faas-taxi_light-default/call/payout/json
      faas:
        function: billing.hot.calculators.taxi_light.calculator.faas.adaptor.payout
        peerdir: billing/hot/calculators/taxi_light/calculator
        revision: 9780067
        settings:
          eb:
            project: taxi_light_calculator
            tags:
              endpoint: payout
          skip_dry_run: true
  locks:
    cutoff_dt_lock:
      attributes:
      - client_id
    payout_lock:
      attributes:
      - client_id
      - contract_id
      - invoice_id
      - currency
      - operation_type
  namespace: taxi_light
  states:
    cutoff_dt_state:
      attributes:
      - client_id
