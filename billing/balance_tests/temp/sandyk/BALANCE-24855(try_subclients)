# coding: utf-8
__author__ = 'sandyk'

import datetime

from balance import balance_steps as steps
LOGIN = 'clientuid45'

SERVICE_ID = 7
PRODUCT_ID= 1475
# SERVICE_ID = 70
# PRODUCT_ID= 506387

PAYSYS_ID = 1001
PERSON_TYPE = 'ur'
QUANT = 100
MAIN_DT = datetime.datetime.now()
START_DT = str(datetime.datetime.today().strftime("%Y-%m-%d")) + 'T00:00:00'


def test_overdraft_notification():
    agency_id = steps.ClientSteps.create({'IS_AGENCY': 1, 'REGION_ID':149})
    client_id = steps.ClientSteps.create({'IS_AGENCY': 0, 'REGION_ID':983})
    person_id = steps.PersonSteps.create(agency_id, PERSON_TYPE, {'email': 'test-balance-notify@yandex-team.ru'})
    contract_id = steps.ContractSteps.create_contract_new('opt_agency_prem',
                                                      {'CLIENT_ID': agency_id, 'PERSON_ID': person_id,
                                                       'DT': START_DT, 'IS_FAXED': START_DT,
                                                       'SERVICES': [7,70,77], 'FIRM': 1, 'PAYMENT_TYPE':2})[0]
    # agency_id = 32491502
    # person_id  = 5086553
    # contract_id = 619788

    service_order_id = steps.OrderSteps.next_id(SERVICE_ID)
    order_id = steps.OrderSteps.create(client_id, service_order_id, PRODUCT_ID, SERVICE_ID)
    orders_list = [{'ServiceID': SERVICE_ID, 'ServiceOrderID': service_order_id, 'Qty': QUANT, 'BeginDT': MAIN_DT}]
    request_id = steps.RequestSteps.create(agency_id, orders_list, additional_params={'InvoiceDesireDT': MAIN_DT,
        'AgencyID': agency_id})
    # invoice_id, _, _ = steps.InvoiceSteps.create(request_id=request_id, person_id=person_id, paysys_id=PAYSYS_ID,
    #                                              credit=1, contract_id=contract_id, overdraft=0, endbuyer_id=None)
    #
    # steps.CampaignsSteps.do_campaigns(SERVICE_ID, service_order_id,
    #                                       {'Bucks': 30, 'Days': 0, 'Money': 0}, 0, campaigns_dt=MAIN_DT)
    #
    # steps.ActsSteps.generate(agency_id, force=1, date=MAIN_DT)

        # request_id = steps.RequestSteps.create(agency_id, orders_list, additional_params={'InvoiceDesireDT': MAIN_DT})
        # invoice_id, _, _ = steps.InvoiceSteps.create(request_id=request_id, person_id=person_id, paysys_id=PAYSYS_ID,
        #                                              credit=1, contract_id=contract_id, overdraft=0, endbuyer_id=None)
        # request_id = steps.RequestSteps.create(agency_id, orders_list, additional_params={'InvoiceDesireDT': MAIN_DT})
        # invoice_id, _, _ = steps.InvoiceSteps.create(request_id=request_id, person_id=person_id, paysys_id=PAYSYS_ID,
        #                                              credit=1, contract_id=contract_id, overdraft=0, endbuyer_id=None)


if __name__ == "__main__":
    test_overdraft_notification()
