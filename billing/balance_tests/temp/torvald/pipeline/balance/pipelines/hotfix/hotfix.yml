INITIAL:
  owner: test
  edges:
    DEPLOYED:
      conditions:
        - check(True)
      actions:
#        - comment('comment_from_pipeline_action')
        - comment('comment_from_pipeline_action', 'aikawa')
        - send('for torvald', 'torvald')
        - send('for chat', 'pipeliner-support')

DEPLOYED:
  owner: dev
  edges:
    TEST_IN_PROGRESS:
      notify:
        [torvald, aikawa, SUPPORT_CHAT]
      actions:
        - assign('aikawa')
        - start_teamcity(['Billing_Autotesting_PythonTests_Smoke', 'Billing_Autotesting_PythonTests_Manual'])
#        - start_aqua(['FullJava'])
        - comment(TESTS_LAUNCHED)
#        - check(True)

TEST_IN_PROGRESS:
  owner: test
  edges:
    TEST_COMPLETE:
      conditions:
        - simple_return(166)
        - get_comment_values(TESTS_LAUNCHED)
        - is_tasks_finished('teamcity', ['Billing_Autotesting_PythonTests_Smoke', 'Billing_Autotesting_PythonTests_Manual'])
#        - is_tasks_finished('aqua', ['FullJava'])
      actions:
#        - get_task_results('teamcity', ['BalanceFull', 'BalanceSmoke', 'TrustGreenline'])
#        - get_task_results('aqua', ['FullJava'])
#        - comment_values(TESTS_RESULTS)

TEST_COMPLETE:
  owner: test
  edges:
    TEST_SUCCESS:
      conditions:
        - get_comment_values(TESTS_LAUNCHED)
        - is_tasks_passed('teamcity', ['Billing_Autotesting_PythonTests_Smoke', 'Billing_Autotesting_PythonTests_Manual']) # raise AlarmException if not
#        - is_tests_passed('aqua', ['FullJava'])
      actions:
        - comment('Результаты тестов проанализированы, изменения можно выкладывать. Подтвердите, пожалуйста')
#        - change_status('tested')

TEST_SUCCESS:
  owner: mng
  edges:
    CONFIRMED:
      conditions:
#        - has_status('confirmed')
      actions:
#        - comment('Выложите, пожалуйста')

CONFIRMED:
  owner: admin
  edges:
    PROD_DEPLOYED:
      conditions:
#        - get_comment_values(CONDUCTOR_TICKETS_TO_DEPLOY)
#        - is_deployed()
      actions:
#        - change_status('deployed')
#        - comment ('Продублируйте, пожалуйста, выкладку на PT')

PROD_DEPLOYED:
  owner: admin
  edges:
    PT_DEPLOYED:
      conditions:
#        - get_comment_values(CONDUCTOR_TICKETS_TO_DEPLOY)
#        - is_deployed()