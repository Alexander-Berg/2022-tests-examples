phantom: {enabled: false}
uploader:
  enabled: true
  api_address: https://lunapark.yandex-team.ru/
  # Specify the correct ticket.
  task: BILLING-714
  # Specify the name of the shooting.
  job_name: '[diod][billingun3.0][rpc:0-3000-0]'
  # Specify the shooter's login.
  operator: bremk
# TUI support.
console:
  enabled: true
pandora:
  enabled: true
  # Path to the binary with the cannon, you can specify a link to the Sandbox.
  pandora_cmd: https://proxy.sandbox.yandex-team.ru/2726772880
  config_content:
    # Pandora supports 1 pool.
    pools:
      - id: diod_gun
        gun:
          # We get the type when registering the gun.
          type: billingun
          # http://FQDN:port - shooting directly into the container
          # https://FQDN - shooting via NGINX
          #  to skip traffic).
          target: http://2viqmkul67zd7puw.sas.yp-c.yandex.net:9000
          # Adds the Host header
          host: 2viqmkul67zd7puw.sas.yp-c.yandex.net

          tvmConfig:
            enabled: true
            # tvmtool.config must be configured in the Tank Box so that tvmClient correctly receives the tvm-id by alias.
            # On whose behalf we are shooting (its tvm-id must be allowed in the service)
            tvmAliasSrc: diod
            # tvmtool.config must be configured in the Tank Box so that tvmClient correctly receives the tvm-id by alias.
            # Who we are shooting at (the service itself).
            tvmAliasDst: diod
          tracingConfig:
            enabled: false
            reporterQueueSize: 5000
            serviceName: diod_gun
            localAgentHostPort: ""
            collectorEndpoint: ""
        ammo:
          type: one_key_provider
          limit: 3000
          generatorConfig:
            percentageOfUpdateOperations: 0.9
            maxNumberOfKeys: 5
            serviceID: a842cc62-ac5e-47ce-bf61-0d537e27f548
#          type: default_provider
#          generatorConfig:
#            percentageOfGetRequests: 0.1 # 80% of all requests are GET requests.
#            percentageOfCreateOperations: 0.9 # 90% of the POST requests will create new keys instead of updating existing.
#            percentageOfNotExistingGetOperation: 0.05 # 5% of the GET requests will be random and most definitely won't be present in database.
#            percentageOfOverwrittenRequests: 0.4 # 10% of the new POST requests will be stored in the generator's array, updating the old values.
#            maxNumberOfKeys: 5 # maximum number of keys per request.
#            serviceIDs: # array of available serviceIDs.
#            - a842cc62-ac5e-47ce-bf61-0d537e27f548
        result:
          type: phout
          destination: ./phout.log
        rps:
          - { duration: 300s, type: const, ops: 100 }
        startup:
          type: once
          # Number of instances.
          times: 1000
    log:
      level: error
    # We transmit monitoring data for the Lunapark.
    monitoring:
      expvar:
        enabled: true
        port: 1234
      cpuProfile:
        enabled: false
      memProfile:
        enabled: false
