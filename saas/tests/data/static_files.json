[
    {
        "is_dynamic": false,
        "content": "{%- for instance in get_hq_instances(NANNY_SERVICE_ID)|revision_filter(CURRENT_REV)|groupby('spec.revision.0.shard_name') %}\n    {%- for inst in instance.list | sort(attribute='spec.hostname')  %}\n        {%- set ihost = inst.spec.node_name.split('.')|first %}\n        {%- set iport = inst.spec.allocation.port.0.port %}\n        {%- if BSCONFIG_IHOST == ihost and BSCONFIG_IPORT|int == iport|int %}\n            <ReplicaIds>\n\t            Id : {{ loop.index0 }}\n\t            Replicas : {{ BSCONFIG_INAME }}\n            <\/ReplicaIds>\n        {%- endif %}\n    {%- endfor %}\n{%- endfor %}",
        "local_path": "replicas.conf.tmpl"
    },
    {
        "is_dynamic": false,
        "content": "<DaemonConfig>\n    LoggerType : ${LOG_DIR and LOG_DIR or \"\/usr\/local\/www\/logs\"}\/current-global-deploy_manager${LOG_POSTFIX or \".log\"}\n    LogLevel: 6\n    StdErr:  ${LOG_DIR and LOG_DIR or \"\/usr\/local\/www\/logs\"}\/current-stderr-deploy_manager${LOG_POSTFIX or \".log\"}\n    StdOut:  ${LOG_DIR and LOG_DIR or \"\/usr\/local\/www\/logs\"}\/current-stdout-deploy_manager${LOG_POSTFIX or \".log\"}\n    <Controller>\n        ClientTimeout : 200\n        MaxConnections : 0\n        MaxQueue : 0\n        Port : ${(BasePort + 3)}\n        StartServer : 1\n        Threads : 2\n        ConfigsRoot : ${WorkDir and WorkDir or _BIN_DIRECTORY}\/configs\n        StateRoot : ${StateRootDir and StateRootDir or _BIN_DIRECTORY}\/controller_state\n        Log : ${LOG_DIR and LOG_DIR or \"\/usr\/local\/www\/logs\"}\/current-controller-deploy_manager${LOG_POSTFIX or \".log\"}\n    <\/Controller>\n<\/DaemonConfig>\n<DeployManager>\n    CMSAddress: http:\/\/cmsearch.yandex.ru\/xmlrpc\/bs\n    ZooAddress: saas-zookeeper1.search.yandex.net:14880,saas-zookeeper2.search.yandex.net:14880,saas-zookeeper3.search.yandex.net:14880,saas-zookeeper4.search.yandex.net:14880,saas-zookeeper5.search.yandex.net:14880\n    NotifyAddress: saas-dm-configs@yandex-team.ru\n    RegularCommandsFile: ${WorkDir and WorkDir or _BIN_DIRECTORY}\/regular_actions.json\n    RequestWizardConfig: ${WorkDir and WorkDir or _BIN_DIRECTORY}\/wizard.cfg\n    ExecuteScriptThreads: 256\n    ClusterTaskLifetimeSec: 259200\n    UseExecuteScriptInDeploy: false\n    ServiceDiscoveryOptions: Enabled=1, Host=sd.yandex.net, Port=8080, UpdateFrequency=180, ClientName=saas, Log=${LOG_DIR}\/current-service-discovery.log, CacheDir=${LOG_DIR}\/sd_cache\n    <Storage>\n        Type: ZOO\n        QueueName: saas_service10\n        <Zoo>\n            Address: saas-zookeeper1.search.yandex.net:14880,saas-zookeeper2.search.yandex.net:14880,saas-zookeeper3.search.yandex.net:14880,saas-zookeeper4.search.yandex.net:14880,saas-zookeeper5.search.yandex.net:14880\n            Root: saas10\n        <\/Zoo>\n    <\/Storage>\n    <DeployManagerBalanser>\n        Host : saas-dm.yandex.net\n        Port : 80\n        UriPrefix :\n    <\/DeployManagerBalanser>\n    <GolemApi>\n        Aliases: Мантсала=MAN Мытищи=MSK Сасово=SAS Угрешская=MSK Фольга=MSK Ивантеевка=MSK Владимир=VLA\n    <\/GolemApi>\n    <WatchDog>\n        Enabled: true\n        MaxMemoryCount: ${6 * 1024 * 1024 * 1024}\n    <\/WatchDog>\n    <HttpOptions>\n        Port : ${BasePort}\n        Threads : 256\n        MaxQueueSize : 256\n        MaxConnections : 0\n    <\/HttpOptions>\n    <MapReduce>\n        Server: sakura:8013\n        User: extdata\n        BinPath: ${WorkDir and WorkDir or _BIN_DIRECTORY}\/fmltask\n    <\/MapReduce>\n    <Experiments>\n        ConfigUrl: http:\/\/exp.yandex-team.ru\/report\/config\/-WEB\/SaaS\/production\n        ConfigPath: \/configs\/searchproxy\/saas.xml\n    <\/Experiments>\n\t<Nanny>\n\t\tTokenEnv: OAUTH_NANNY\n    <\/Nanny>\n    <Alerts>\n        CtypesPrefix: stable\n        Enable: 1\n        <Juggler>\n            CommonTag: saas_autogen\n            Host: juggler-api.search.yandex.net\n            Port: 8998\n            Namespace: search.saas\n            Token: AQAD-qJSJkKuAAAGk0qktK0C-Ed8nQlNbzKeIPg\n            IsTesting: 0\n        <\/Juggler>\n        <Golovan>\n            AlertsPrefix: saas.gen\n            Host: yasm.yandex-team.ru\n            Port: 80\n        <\/Golovan>\n    <\/Alerts>\n<\/DeployManager>",
        "local_path": "deploy_manager.conf"
    },
    {
        "is_dynamic": false,
        "content": "Rules {Method:GET Uri:\"\/api\/slots\/:project\" Cgi:\"ctype\" Cgi:\"slots_filters=\" Cgi:\"filter=\" Cgi:\"groupings=\" Cgi:\"service=\" ResultLua:\"\/dashboard?command=get_info_server&ctype=${ctype}&project=${project}&service=${service}&plain_report=yes&slots_filters=${slots_filters}&filter=replic_id,disable_search,disable_indexing,service,port,result.controller_status,$shards_min$,$shards_max$,result.cpu_load_user,result.mem_size_real,id,${filter}&groupings=${groupings};host(result.slot_size,result.load_average,result.cpu_count,result.total_mem_size,result.slots_count,$datacenter$)[id]&sort=port\"}\nRules {Method:GET Uri:\"\/api\/slots_by_interval\/:project\" Cgi:\"ctype\" Cgi:\"slots_filters=\" Cgi:\"filter=\" Cgi:\"groupings=\" Cgi:\"service=\" ResultLua:\"\/dashboard?command=get_info_server&ctype=${ctype}&project=${project}&service=${service}&plain_report=yes&slots_filters=${slots_filters}&filter=replic_id,disable_search,disable_indexing,service,port,result.controller_status,$shards_min$,$shards_max$,result.cpu_load_user,result.mem_size_real,id,${filter}&groupings=${groupings};interval($shards_min$,$shards_max$)[%23$shards_min$,%23$shards_max$]&sort=replic_id\"}\nRules {Method:GET Uri:\"\/api\/slots_and_stat\/:project\" Cgi:\"ctype\" Cgi:\"slots_filters=\" Cgi:\"filter=\" Cgi:\"groupings=\" Cgi:\"service=\" ResultLua:\"\/dashboard?command=get_info_server&ctype=${ctype}&project=${project}&service=${service}&plain_report=yes&statistics=yes&slots_filters=${slots_filters}&filter=replic_id,disable_search,disable_indexing,service,port,result.controller_status,$shards_min$,$shards_max$,result.cpu_load_user,result.mem_size_real,id,${filter}&groupings=${groupings};host(result.slot_size,result.load_average,result.cpu_count,result.total_mem_size,result.slots_count,$datacenter$)[id]&sort=port\"}\nRules {Method:GET Uri:\"\/api\/projects\" ResultLua:\"\/projects?action=list\"}\nRules {Method:GET Uri:\"\/api\/projects\/:project\" ResultLua:\"\/projects?action=get&name=${project}\"}\nRules {Method:POST Uri:\"\/api\/projects\" ResultLua:\"\/projects?action=add\"}\nRules {Method:POST Uri:\"\/api\/projects\/:project\" ResultLua:\"\/projects?action=set&name=${project}\"}\nRules {Method:GET Uri:\"\/api\/projects\/delete\/:project\" ResultLua:\"\/projects?action=remove&name=${project}\"}\nRules {Method:GET Uri:\"\/api\/search_params\" ResultLua:\"\/search_params\"}\nRules {Method:GET Uri:\"\/api\/ctypes\" ResultLua:\"\/ctypes?plain_format=1\"}\nRules {Method:GET Uri:\"\/api\/secret_keys\" ResultLua:\"\/secret_key\"}\nRules {Method:GET Uri:\"\/api\/secret_keys\/:project\" ResultLua:\"\/secret_key?service=${project}&force=yes\"}\nRules {Method:GET Uri:\"\/api\/configs\/get_current_version\/:project\" ResultLua:\"\/configs?action=get_current_config_version&project=${project}\"}\nRules {Method:GET Uri:\"\/api\/configs\/set_current_version\/:project\" Cgi:\"ctype\" Cgi:\"version=\" ResultLua:\"\/configs?action=set_current_config_version&project=${project}&ctype=${ctype}&version=${version}\"}\nRules {Method:GET Uri:\"\/api\/configs\/versions\/:project\" Cgi:\"page=0\" Cgi:\"per_page=10\" ResultLua:\"\/configs?action=get_config_versions&project=${project}&p=${page}&numdoc=${per_page}\"}\nRules {Method:GET Uri:\"\/api\/configs\/save_version\/:project\" ResultLua:\"\/configs?action=save_config_version&project=${project}\"}\nRules {Method:GET Uri:\"\/api\/configs\/data\/:project\" Cgi:\"version=NEW\" ResultLua:\"\/configs?action=get_configs&project=${project}&version=${version}\"}\nRules {Method:POST Uri:\"\/api\/configs\/data\/:project\" ResultLua:\"\/configs?action=set_configs&project=${project}\"}\nRules {Method:GET Uri:\"\/api\/configs\/relev\/matrixnet\/:project\" ResultLua:\"\/configs?action=list_matrixnet&project=${project}\"}\nRules {Method:POST Uri:\"\/api\/configs\/relev\/matrixnet\/:project\/:name\" Cgi:\"hex=no\" ResultLua:\"\/configs?action=upload_matrixnet&project=${project}&name=${name}&hex=${hex}\"}\nRules {Method:POST Uri:\"\/api\/configs\/relev\/polynom\/decode\" ResultLua:\"\/configs?action=decode_polynom\"}\nRules {Method:POST Uri:\"\/api\/configs\/relev\/polynom\/encode\" ResultLua:\"\/configs?action=encode_polynom\"}\nRules {Method:GET Uri:\"\/api\/configs\/relev\/dynamic_factors\" ResultLua:\"\/configs?action=get_dynamic_factors_list\"}\nRules {Method:GET Uri:\"\/api\/users\/who_am_i\" ResultLua:\"\/users?action=who_am_i\"}\nRules {Method:GET Uri:\"\/api\/users\/list\" ResultLua:\"\/users?action=list\"}\nRules {Method:GET Uri:\"\/api\/users\/list\/:login\" ResultLua:\"\/users?action=get&login=${login}\"}\nRules {Method:POST Uri:\"\/api\/users\/list\/:login\" ResultLua:\"\/users?action=set&login=${login}\"}\nRules {Method:GET Uri:\"\/api\/users\/set_role_in_project\/:login\" Cgi:\"project\" Cgi:\"role\" ResultLua:\"\/users?action=set_role_in_project&login=${login}&project=${project}&role=${role}\"}\nRules {Method:GET Uri:\"\/fml_ops2\/:service\/:polynom\" Cgi:\"ctype=\" ResultLua:\"\/fml_ops?action=encode&polynom=${polynom}&service=${service}&ctype=${ctype}\"}\nRules {Method:GET Uri:\"\/api\/service_wizard\" Cgi:\"project=\" ResultLua:\"\/service_wizard?action=get_questions&project=${project}\"}\nRules {Method:POST Uri:\"\/api\/service_wizard\" Cgi:\"project=\" Cgi:\"check_only=false\" ResultLua:\"\/service_wizard?action=send_anketa&project=${project}&check_only=${check_only}\"} ",
        "local_path": "wizard.cfg"
    },
    {
        "is_dynamic": false,
        "content": "{\n\"actions\" : [\n{\n    \"name\" : \"alerts_total_update\",\n    \"restart_interval\" : \"21600s\",\n    \"action_type\" : \"ALERTS_TOTAL_ACTION\",\n    \"description\" : {}\n},\n{\n    \"name\" : \"alerts_clear_left\",\n    \"restart_interval\" : \"21600s\",\n    \"action_type\" : \"ALERTS_CLEAR_LEFT_ACTION\",\n    \"description\" : {}\n}\n]\n}\n",
        "local_path": "regular_actions.json"
    },
    {
        "is_dynamic": false,
        "content": "count: 37",
        "local_path": "zerodiff"
    },
    {
        "is_dynamic": false,
        "content": "# bsconfig defines following environment variables:\n#\n#   BSCONFIG_DBTOP\n#   BSCONFIG_IDIR\n#   BSCONFIG_IHOST\n#   BSCONFIG_INAME\n#   BSCONFIG_IPORT\n#   BSCONFIG_ITAGS\n#   BSCONFIG_REQUIRES_SHARDS\n#   BSCONFIG_SHARDDIR\n#   BSCONFIG_SHARDNAME\n#   BSCONFIG_SHARDREPLICA\n#\n# also loop script has following variables pre-defined:\n#   stdout\n#   stderr\n#   pid_file\n#   state_dir (directory to store pid files and etc.)\n#   type      (daemon, cron)\n#   logs_dir\n#   section   (config section)\n\n\n[defaults]\nits_poll = 1\naction_stop_timeout = 600\nCUSTOM_THREAD_LIMIT = \"\"\n\n[saas_daemon]\nbinary = %(BSCONFIG_IDIR)s\/%(BSCONFIG_ITYPE)s\nrename_binary = %(BSCONFIG_ITYPE)s-%(BSCONFIG_IPORT)s\nenv_match = ^ENV_(.*)$\nopt_match = ^OPT_(.*)$\nlogs_dir = \/usr\/local\/www\/logs\/\nbinary_state_dir = \/db\/bsconfig\/webstate\/%(BSCONFIG_INAME)s\/%(section)s\n\ninstall_script= set -x\n   fast_drive=`sh .\/loop_data\/loop_data\/select_drive.sh`\n   mkdir -p ${fast_drive}\/webcache\/%(BSCONFIG_INAME)s\/index\/project\n   ln -fsn ${fast_drive}\/webcache\/%(BSCONFIG_INAME)s\/index\/project \/db\/BASE\/%(BSCONFIG_INAME)s\n   ln -fsn %(logs_dir)s .\/logs\n   ln -fsn \/db\/iss3 .\/iss\n   mkdir -p %(BSCONFIG_IDIR)s\/configs\n   sh .\/loop_data\/loop_data\/copy_config.sh \"%(BSCONFIG_ITYPE)s\"\n   mkdir -p %(binary_state_dir)s\n   if [ \"%(CUSTOM_THREAD_LIMIT)s\" != \"\" ]\n   then\n      sh .\/loop_data\/loop_data\/update_porto_thread_limit.sh %(CUSTOM_THREAD_LIMIT)s\n   fi\n\nrestart_script= set -x\n   fast_drive=`sh .\/loop_data\/loop_data\/select_drive.sh`\n   mkdir -p ${fast_drive}\/webcache\/%(BSCONFIG_INAME)s\/index\/project\n   ln -fsn ${fast_drive}\/webcache\/%(BSCONFIG_INAME)s\/index\/project \/db\/BASE\/\n   mkdir -p %(BSCONFIG_IDIR)s\/configs\n   sh .\/loop_data\/loop_data\/copy_config.sh \"%(BSCONFIG_ITYPE)s\"\n   mkdir -p %(binary_state_dir)s\n\n\nstop_script = set -ex;\n    cont=\"$((%(BSCONFIG_IPORT)s+3))\"\n    curl -s \"http:\/\/localhost:${cont}\/?command=shutdown&rigid_level=1\"\n\nreopenlog_script = set -ex;\n    cont=\"$((%(BSCONFIG_IPORT)s+3))\"\n    curl -s \"http:\/\/localhost:$cont\/?command=reopenlog\"\n\nstatus_script =\n     host_name=`hostname`\n     sh .\/loop_data\/loop_data\/check_status.sh %(BSCONFIG_ITYPE)s %(BSCONFIG_IPORT)s ${host_name}\n\narguments =\n    %(BSCONFIG_IDIR)s\/{config}\n    -E %(BSCONFIG_IDIR)s\/configs\/environment\n    -V LOG_POSTFIX=-%(BSCONFIG_IPORT)s\n    -V BasePort=%(BSCONFIG_IPORT)s\n    -P Server.IndexDir={fast_drive}\/webcache\/%(BSCONFIG_INAME)s\/index\/project\n    -V QUEUE_DIR={fast_drive}\/webcache\/%(BSCONFIG_INAME)s\/index\/project\n    -V CTYPE={ctype}\n    -V SERVICE_TYPE=%(BSCONFIG_ITYPE)s\n    -V SLOT=%(HOSTNAME)s:%(BSCONFIG_IPORT)s\n    -V LOG_LEVEL=6\n    -V DM_HOST={dm_host}\n    -V DM_PORT={dm_port}\n    -P Server.ModulesConfig.Synchronizer.DetachPath={fast_drive}\/webcache\/%(BSCONFIG_INAME)s\/detach\n    -V LOG_PATH=%(logs_dir)s\n    -V LOG_DIR=%(logs_dir)s\n    -V BSCONFIG_IPORT=%(BSCONFIG_IPORT)s\n    -V INDEX_DIRECTORY={fast_drive}\/webcache\/%(BSCONFIG_INAME)s\/index\/project\n    -V WorkDir=%(BSCONFIG_IDIR)s\n    -P DaemonConfig.Controller.StateRoot=%(binary_state_dir)s\n    -V CONFIG_PATH=%(BSCONFIG_IDIR)s\n    -V STATE_ROOT=%(binary_state_dir)s\n    -V SERVICE={service}\neval_fast_drive = sh .\/loop_data\/loop_data\/select_drive.sh\neval_config = sh .\/loop_data\/loop_data\/select_config.sh \"%(BSCONFIG_ITYPE)s\"\neval_ctype = sh .\/loop_data\/loop_data\/select_ctype.sh \"%(BSCONFIG_CTYPE)s\" \"%(CUSTOM_CTYPE)s\"\neval_dm_host = sh .\/loop_data\/loop_data\/select_dm.sh \"%(BSCONFIG_CTYPE)s\" \"%(CUSTOM_CTYPE)s\" | cut -d: -f1\neval_dm_port = sh .\/loop_data\/loop_data\/select_dm.sh \"%(BSCONFIG_CTYPE)s\" \"%(CUSTOM_CTYPE)s\" | cut -d: -f2\neval_service = sh .\/loop_data\/loop_data\/select_service.sh \"%(BSCONFIG_ITYPE)s\"\n\ndelay = 5\nlimit_core = unlimited\ncoredump_probability = 100\nalways_coredump = yes\nkill_timeout = 10\nterminate_timeout = 590\n\n\n[coredump_watcher]\nenv_match = ^OPT_(.*)$\nSLOT_NAME=%(NODE_NAME)s:%(BSCONFIG_IPORT)s\nbinary = \/bin\/bash\n\ninstall_script=\n    cp .\/loop_data\/loop_data\/ya ya\n\narguments = .\/loop_data\/loop_data\/corewatcher_loop.sh %(BSCONFIG_IHOST)s %(BSCONFIG_IPORT)s %(BSCONFIG_ITYPE)s %(logs_dir)s 900 saas_daemon\n\nstop_script = [ -e %(BSCONFIG_IDIR)s\/pids\/%(section)s ] && kill -TERM $(cat %(BSCONFIG_IDIR)s\/pids\/%(section)s)\n\n\n[collect_inst_usage]\nbinary = \/bin\/bash\n\narguments = .\/loop_data\/loop_data\/collect_inst_usage.sh %(BSCONFIG_IHOST)s %(BSCONFIG_IPORT)s 1800\n\nstop_script = [ -e %(BSCONFIG_IDIR)s\/pids\/%(section)s ] && kill -TERM $(cat %(BSCONFIG_IDIR)s\/pids\/%(section)s)\n\n\n[pushclient]\nbinary = \/bin\/bash\nbinary_state_dir = \/db\/bsconfig\/webstate\/%(BSCONFIG_INAME)s\/%(section)s\nconfig = %(BSCONFIG_IDIR)s\/push-client.conf\ndaemon_log = %(logs_dir)s\/current-log-%(section)s-%(BSCONFIG_IPORT)s\n\nenv_match = ^ENV_(.*)$\nopt_match = ^OPT_(.*)$\n\ninstall_script = set -x;\n    if [ -e ${BSCONFIG_IDIR}\/push-client ]\n    then\n        python .\/loop_data\/loop_data\/push_client_config.py -c %(CUSTOM_CTYPE)s -i %(BSCONFIG_ITYPE)s -o %(config)s -s %(binary_state_dir)s -p %(daemon_log)s -l %(logs_dir)s \\\n        --bsconfig-iport %(BSCONFIG_IPORT)s --bsconfig-idir %(BSCONFIG_IDIR)s\n        mkdir -p %(binary_state_dir)s\n    fi\n\narguments = %(BSCONFIG_IDIR)s\/loop_data\/loop_data\/push-client.sh %(BSCONFIG_IDIR)s %(config)s\n\nreopenlog_script = if [ -e ${BSCONFIG_IDIR}\/push-client ]; then [ -e %(BSCONFIG_IDIR)s\/pids\/%(section)s ] && kill -TERM $(cat %(BSCONFIG_IDIR)s\/pids\/%(section)s); fi\n\nstop_script = [ -e %(BSCONFIG_IDIR)s\/pids\/%(section)s ] && kill -TERM $(cat %(BSCONFIG_IDIR)s\/pids\/%(section)s)\n\n\n[yasmsubagent]\nbinary = python\narguments = \/usr\/local\/yasmagent\/run.py --yasmutil-dir \/usr\/local\/yasmagent\/lib --type-conf-dir \/usr\/local\/yasmagent\/CONF --config \/usr\/local\/yasmagent\/agent.conf --subagent-mode --log-dir %(logs_dir)s\/subagent_logs-%(BSCONFIG_IPORT)s --pid-file %(BSCONFIG_IDIR)s\/yasmsubagent.pid --iss --disable-common --fg\n\n\n[postfix]\nbinary = sudo\narguments = postfix -c \/etc\/postfix start\n",
        "local_path": "loop.conf"
    },
    {
        "is_dynamic": false,
        "content": "import sys\nimport re\n\n\nfor line in sys.stdin:\n    print re.sub(r'tools.staticdir.root: ranking.factor_compare.current_dir', ''.join(['tools.staticdir.root: ', '\"', sys.argv[1], '\"']), line),\n\n",
        "local_path": "patch.py",
        "extract_path": ""
    }
]
