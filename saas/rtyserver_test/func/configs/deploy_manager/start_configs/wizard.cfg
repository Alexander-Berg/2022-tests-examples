Rules {Method:GET Uri:"/api/slots/:project" Cgi:"ctype" Cgi:"slots_filters=" Cgi:"filter=" Cgi:"groupings=" Cgi:"service=" ResultLua:"/dashboard?command=get_info_server&ctype=${ctype}&project=${project}&service=${service}&plain_report=yes&slots_filters=${slots_filters}&filter=replic_id,disable_search,disable_indexing,service,port,result.controller_status,$shards_min$,$shards_max$,result.cpu_load_user,result.mem_size_real,id,${filter}&groupings=${groupings};host(result.slot_size,result.load_average,result.cpu_count,result.total_mem_size,result.slots_count,$datacenter$)[id]&sort=port"}
Rules {Method:GET Uri:"/api/slots_by_interval/:project" Cgi:"ctype" Cgi:"slots_filters=" Cgi:"filter=" Cgi:"groupings=" Cgi:"service=" ResultLua:"/dashboard?command=get_info_server&ctype=${ctype}&project=${project}&service=${service}&plain_report=yes&slots_filters=${slots_filters}&filter=replic_id,disable_search,disable_indexing,service,port,result.controller_status,$shards_min$,$shards_max$,result.cpu_load_user,result.mem_size_real,id,${filter}&groupings=${groupings};interval($shards_min$,$shards_max$)[%23$shards_min$,%23$shards_max$]&sort=replic_id"}
Rules {Method:GET Uri:"/api/slots_and_stat/:project" Cgi:"ctype" Cgi:"slots_filters=" Cgi:"filter=" Cgi:"groupings=" Cgi:"service=" ResultLua:"/dashboard?command=get_info_server&ctype=${ctype}&project=${project}&service=${service}&plain_report=yes&statistics=yes&slots_filters=${slots_filters}&filter=replic_id,disable_search,disable_indexing,service,port,result.controller_status,$shards_min$,$shards_max$,result.cpu_load_user,result.mem_size_real,id,${filter}&groupings=${groupings};host(result.slot_size,result.load_average,result.cpu_count,result.total_mem_size,result.slots_count,$datacenter$)[id]&sort=port"}
Rules {Method:GET Uri:"/api/projects" ResultLua:"/projects?action=list"}
Rules {Method:GET Uri:"/api/projects/:project" ResultLua:"/projects?action=get&name=${project}"}
Rules {Method:POST Uri:"/api/projects" ResultLua:"/projects?action=add"}
Rules {Method:POST Uri:"/api/projects/:project" ResultLua:"/projects?action=set&name=${project}"}
Rules {Method:GET Uri:"/api/projects/delete/:project" ResultLua:"/projects?action=remove&name=${project}"}
Rules {Method:GET Uri:"/api/search_params" ResultLua:"/search_params"}
Rules {Method:GET Uri:"/api/ctypes" ResultLua:"/ctypes?plain_format=1"}
Rules {Method:GET Uri:"/api/secret_keys" ResultLua:"/secret_key"}
Rules {Method:GET Uri:"/api/secret_keys/:project" ResultLua:"/secret_key?service=${project}&force=yes"}
Rules {Method:GET Uri:"/api/configs/get_current_version/:project" ResultLua:"/configs?action=get_current_config_version&project=${project}"}
Rules {Method:GET Uri:"/api/configs/set_current_version/:project" Cgi:"ctype" Cgi:"version=" ResultLua:"/configs?action=set_current_config_version&project=${project}&ctype=${ctype}&version=${version}"}
Rules {Method:GET Uri:"/api/configs/versions/:project" Cgi:"page=0" Cgi:"per_page=10" ResultLua:"/configs?action=get_config_versions&project=${project}&p=${page}&numdoc=${per_page}"}
Rules {Method:GET Uri:"/api/configs/save_version/:project" ResultLua:"/configs?action=save_config_version&project=${project}"}
Rules {Method:GET Uri:"/api/configs/data/:project" Cgi:"version=NEW" ResultLua:"/configs?action=get_configs&project=${project}&version=${version}"}
Rules {Method:POST Uri:"/api/configs/data/:project" ResultLua:"/configs?action=set_configs&project=${project}"}
Rules {Method:GET Uri:"/api/configs/relev/matrixnet/:project" ResultLua:"/configs?action=list_matrixnet&project=${project}"}
Rules {Method:POST Uri:"/api/configs/relev/matrixnet/:project/:name" Cgi:"hex=no" ResultLua:"/configs?action=upload_matrixnet&project=${project}&name=${name}&hex=${hex}"}
Rules {Method:POST Uri:"/api/configs/relev/polynom/decode" ResultLua:"/configs?action=decode_polynom"}
Rules {Method:POST Uri:"/api/configs/relev/polynom/encode" ResultLua:"/configs?action=encode_polynom"}
Rules {Method:GET Uri:"/api/configs/relev/dynamic_factors" ResultLua:"/configs?action=get_dynamic_factors_list"}
Rules {Method:GET Uri:"/api/users/who_am_i" ResultLua:"/users?action=who_am_i"}
Rules {Method:GET Uri:"/api/users/list" ResultLua:"/users?action=list"}
Rules {Method:GET Uri:"/api/users/list/:login" ResultLua:"/users?action=get&login=${login}"}
Rules {Method:POST Uri:"/api/users/list/:login" ResultLua:"/users?action=set&login=${login}"}
Rules {Method:GET Uri:"/api/users/set_role_in_project/:login" Cgi:"project" Cgi:"role" ResultLua:"/users?action=set_role_in_project&login=${login}&project=${project}&role=${role}"}
Rules {Method:GET Uri:"/ping" ResultLua:"/help"}
Rules {Method:GET Uri:"/fml_ops2/:service/:polynom" Cgi:"ctype=" ResultLua:"/fml_ops?action=encode&polynom=${polynom}&service=${service}&ctype=${ctype}"}
Rules {Method:GET Uri:"/api/service_wizard" Cgi:"project=" ResultLua:"/service_wizard?action=get_questions&project=${project}"}
Rules {Method:POST Uri:"/api/service_wizard" Cgi:"project=" Cgi:"check_only=false" ResultLua:"/service_wizard?action=send_anketa&project=${project}&check_only=${check_only}"}
